{
	"info": {
		"_postman_id": "02fa76f9-bf6b-4a0b-a999-e882402aac79",
		"name": "Analytics Services",
		"description": "A collection of RESTfulAPIs to provide access to Adobe Analytics. You can change this description in localconfig.properties",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "3388950"
	},
	"item": [
		{
			"name": "advertisinganalytics",
			"item": [
				{
					"name": "status",
					"item": [
						{
							"name": "Accept ad analytics eula",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/advertisinganalytics/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"advertisinganalytics",
										"status"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/advertisinganalytics/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"advertisinganalytics",
												"status"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"enabled\": false,\n  \"analyticsOnlyClient\": true,\n  \"amoUserId\": \"tempor dolor nisi\"\n}"
								},
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/advertisinganalytics/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"advertisinganalytics",
												"status"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Accept ad analytics eula",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/advertisinganalytics/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"advertisinganalytics",
										"status"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/advertisinganalytics/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"advertisinganalytics",
												"status"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"enabled\": false,\n  \"analyticsOnlyClient\": true,\n  \"amoUserId\": \"tempor dolor nisi\"\n}"
								},
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/advertisinganalytics/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"advertisinganalytics",
												"status"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Accept ad analytics eula",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/advertisinganalytics/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"advertisinganalytics",
										"status"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/advertisinganalytics/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"advertisinganalytics",
												"status"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"enabled\": false,\n  \"analyticsOnlyClient\": true,\n  \"amoUserId\": \"tempor dolor nisi\"\n}"
								},
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/advertisinganalytics/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"advertisinganalytics",
												"status"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "accounts",
					"item": [
						{
							"name": "{search Account Id}",
							"item": [
								{
									"name": "get Account",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/advertisinganalytics/accounts/:searchAccountId?locale=en_US&expansion=reportSuiteName,reportSuiteName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"advertisinganalytics",
												"accounts",
												":searchAccountId"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US",
													"description": "Locale"
												},
												{
													"key": "expansion",
													"value": "reportSuiteName,reportSuiteName",
													"description": "Comma-delimited list of additional project metadata fields to include on response."
												}
											],
											"variable": [
												{
													"key": "searchAccountId",
													"value": "aliqua",
													"description": "(Required) searchAccountId"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/advertisinganalytics/accounts/:searchAccountId?locale=en_US&expansion=reportSuiteName,reportSuiteName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"advertisinganalytics",
														"accounts",
														":searchAccountId"
													],
													"query": [
														{
															"key": "locale",
															"value": "en_US"
														},
														{
															"key": "expansion",
															"value": "reportSuiteName,reportSuiteName"
														}
													],
													"variable": [
														{
															"key": "searchAccountId",
															"value": "aliqua",
															"description": "(Required) searchAccountId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"do ut\",\n  \"name\": \"nostrud ullamco\",\n  \"type\": \"labore eiusmod dolore ex\",\n  \"definition\": {\n    \"reportSuiteMappings\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"configDetails\": {\n      \"autoUpload\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"accountDetails\": {\n      \"currency\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"seAccountAeId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"authToken\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"masterAcctId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"errorReason\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"seMccAccountId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"accountType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"deleteable\": false,\n  \"isAuthenticated\": true,\n  \"readOnly\": false\n}"
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/advertisinganalytics/accounts/:searchAccountId?locale=en_US&expansion=reportSuiteName,reportSuiteName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"advertisinganalytics",
														"accounts",
														":searchAccountId"
													],
													"query": [
														{
															"key": "locale",
															"value": "en_US"
														},
														{
															"key": "expansion",
															"value": "reportSuiteName,reportSuiteName"
														}
													],
													"variable": [
														{
															"key": "searchAccountId",
															"value": "aliqua",
															"description": "(Required) searchAccountId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "update Account",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"do ut\",\n  \"name\": \"nostrud ullamco\",\n  \"type\": \"labore eiusmod dolore ex\",\n  \"definition\": {\n    \"reportSuiteMappings\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"configDetails\": {\n      \"autoUpload\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"accountDetails\": {\n      \"currency\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"seAccountAeId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"authToken\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"masterAcctId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"errorReason\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"seMccAccountId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"accountType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"deleteable\": false,\n  \"isAuthenticated\": true,\n  \"readOnly\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/advertisinganalytics/accounts/:searchAccountId?locale=en_US&expansion=reportSuiteName,reportSuiteName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"advertisinganalytics",
												"accounts",
												":searchAccountId"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US",
													"description": "Locale"
												},
												{
													"key": "expansion",
													"value": "reportSuiteName,reportSuiteName",
													"description": "Comma-delimited list of additional project metadata fields to include on response."
												}
											],
											"variable": [
												{
													"key": "searchAccountId",
													"value": "aliqua",
													"description": "(Required) searchAccountId"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"do ut\",\n  \"name\": \"nostrud ullamco\",\n  \"type\": \"labore eiusmod dolore ex\",\n  \"definition\": {\n    \"reportSuiteMappings\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"configDetails\": {\n      \"autoUpload\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"accountDetails\": {\n      \"currency\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"seAccountAeId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"authToken\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"masterAcctId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"errorReason\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"seMccAccountId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"accountType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"deleteable\": false,\n  \"isAuthenticated\": true,\n  \"readOnly\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/advertisinganalytics/accounts/:searchAccountId?locale=en_US&expansion=reportSuiteName,reportSuiteName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"advertisinganalytics",
														"accounts",
														":searchAccountId"
													],
													"query": [
														{
															"key": "locale",
															"value": "en_US"
														},
														{
															"key": "expansion",
															"value": "reportSuiteName,reportSuiteName"
														}
													],
													"variable": [
														{
															"key": "searchAccountId",
															"value": "aliqua",
															"description": "(Required) searchAccountId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"do ut\",\n  \"name\": \"nostrud ullamco\",\n  \"type\": \"labore eiusmod dolore ex\",\n  \"definition\": {\n    \"reportSuiteMappings\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"configDetails\": {\n      \"autoUpload\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"accountDetails\": {\n      \"currency\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"seAccountAeId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"authToken\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"masterAcctId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"errorReason\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"seMccAccountId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"accountType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"deleteable\": false,\n  \"isAuthenticated\": true,\n  \"readOnly\": false\n}"
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"do ut\",\n  \"name\": \"nostrud ullamco\",\n  \"type\": \"labore eiusmod dolore ex\",\n  \"definition\": {\n    \"reportSuiteMappings\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"configDetails\": {\n      \"autoUpload\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"accountDetails\": {\n      \"currency\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"seAccountAeId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"authToken\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"masterAcctId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"errorReason\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"seMccAccountId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"accountType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"deleteable\": false,\n  \"isAuthenticated\": true,\n  \"readOnly\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/advertisinganalytics/accounts/:searchAccountId?locale=en_US&expansion=reportSuiteName,reportSuiteName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"advertisinganalytics",
														"accounts",
														":searchAccountId"
													],
													"query": [
														{
															"key": "locale",
															"value": "en_US"
														},
														{
															"key": "expansion",
															"value": "reportSuiteName,reportSuiteName"
														}
													],
													"variable": [
														{
															"key": "searchAccountId",
															"value": "aliqua",
															"description": "(Required) searchAccountId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "delete Account",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/advertisinganalytics/accounts/:searchAccountId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"advertisinganalytics",
												"accounts",
												":searchAccountId"
											],
											"variable": [
												{
													"key": "searchAccountId",
													"value": "aliqua",
													"description": "(Required) searchAccountId"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/advertisinganalytics/accounts/:searchAccountId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"advertisinganalytics",
														"accounts",
														":searchAccountId"
													],
													"variable": [
														{
															"key": "searchAccountId",
															"value": "aliqua",
															"description": "(Required) searchAccountId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"result\": \"proident sit\",\n  \"message\": \"est tempor do sed et\"\n}"
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/advertisinganalytics/accounts/:searchAccountId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"advertisinganalytics",
														"accounts",
														":searchAccountId"
													],
													"variable": [
														{
															"key": "searchAccountId",
															"value": "aliqua",
															"description": "(Required) searchAccountId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "get Accounts",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/advertisinganalytics/accounts?locale=en_US&expansion=reportSuiteName,reportSuiteName&limit=10&page=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"advertisinganalytics",
										"accounts"
									],
									"query": [
										{
											"key": "locale",
											"value": "en_US",
											"description": "Locale"
										},
										{
											"key": "expansion",
											"value": "reportSuiteName,reportSuiteName",
											"description": "Comma-delimited list of additional project metadata fields to include on response."
										},
										{
											"key": "limit",
											"value": "10",
											"description": "Number of results per page"
										},
										{
											"key": "page",
											"value": "0",
											"description": "Page number (base 0 - first page is \"0\")"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/advertisinganalytics/accounts?locale=en_US&expansion=reportSuiteName,reportSuiteName&limit=10&page=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"advertisinganalytics",
												"accounts"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US"
												},
												{
													"key": "expansion",
													"value": "reportSuiteName,reportSuiteName"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "0"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"totalElements\": -21433495,\n  \"totalPages\": 89933061,\n  \"sort\": {\n    \"sorted\": true,\n    \"unsorted\": false,\n    \"empty\": false\n  },\n  \"first\": true,\n  \"last\": true,\n  \"number\": 76895125,\n  \"numberOfElements\": -59436103,\n  \"pageable\": {\n    \"sort\": {\n      \"sorted\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"unsorted\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"empty\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"pageSize\": -42971120,\n    \"pageNumber\": 21640237,\n    \"paged\": true,\n    \"unpaged\": true,\n    \"offset\": 60976023\n  },\n  \"size\": 10060271,\n  \"content\": [\n    {\n      \"id\": \"ex do ut\",\n      \"name\": \"irure voluptate Ut proident\",\n      \"type\": \"velit elit\",\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"deleteable\": false,\n      \"isAuthenticated\": true,\n      \"readOnly\": false\n    },\n    {\n      \"id\": \"id nostrud incididunt aliqua ad\",\n      \"name\": \"magna consequat\",\n      \"type\": \"magna nisi velit eu\",\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"deleteable\": true,\n      \"isAuthenticated\": true,\n      \"readOnly\": false\n    }\n  ],\n  \"empty\": false\n}"
								},
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/advertisinganalytics/accounts?locale=en_US&expansion=reportSuiteName,reportSuiteName&limit=10&page=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"advertisinganalytics",
												"accounts"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US"
												},
												{
													"key": "expansion",
													"value": "reportSuiteName,reportSuiteName"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "0"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "create Account",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"Lorem culpa\",\n  \"name\": \"veniam minim\",\n  \"type\": \"sunt sit\",\n  \"definition\": {\n    \"reportSuiteMappings\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"configDetails\": {\n      \"autoUpload\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"accountDetails\": {\n      \"currency\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"seAccountAeId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"authToken\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"masterAcctId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"errorReason\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"seMccAccountId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"accountType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"deleteable\": true,\n  \"isAuthenticated\": true,\n  \"readOnly\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/advertisinganalytics/accounts?locale=en_US&expansion=reportSuiteName,reportSuiteName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"advertisinganalytics",
										"accounts"
									],
									"query": [
										{
											"key": "locale",
											"value": "en_US",
											"description": "Locale"
										},
										{
											"key": "expansion",
											"value": "reportSuiteName,reportSuiteName",
											"description": "Comma-delimited list of additional project metadata fields to include on response."
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"do ut\",\n  \"name\": \"nostrud ullamco\",\n  \"type\": \"labore eiusmod dolore ex\",\n  \"definition\": {\n    \"reportSuiteMappings\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"configDetails\": {\n      \"autoUpload\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"accountDetails\": {\n      \"currency\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"seAccountAeId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"authToken\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"masterAcctId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"errorReason\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"seMccAccountId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"accountType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"deleteable\": false,\n  \"isAuthenticated\": true,\n  \"readOnly\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/advertisinganalytics/accounts?locale=en_US&expansion=reportSuiteName,reportSuiteName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"advertisinganalytics",
												"accounts"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US"
												},
												{
													"key": "expansion",
													"value": "reportSuiteName,reportSuiteName"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"do ut\",\n  \"name\": \"nostrud ullamco\",\n  \"type\": \"labore eiusmod dolore ex\",\n  \"definition\": {\n    \"reportSuiteMappings\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"configDetails\": {\n      \"autoUpload\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"accountDetails\": {\n      \"currency\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"seAccountAeId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"authToken\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"masterAcctId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"errorReason\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"seMccAccountId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"accountType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"deleteable\": false,\n  \"isAuthenticated\": true,\n  \"readOnly\": false\n}"
								},
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"do ut\",\n  \"name\": \"nostrud ullamco\",\n  \"type\": \"labore eiusmod dolore ex\",\n  \"definition\": {\n    \"reportSuiteMappings\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"configDetails\": {\n      \"autoUpload\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"accountDetails\": {\n      \"currency\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"seAccountAeId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"authToken\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"masterAcctId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"errorReason\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"seMccAccountId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"accountType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"deleteable\": false,\n  \"isAuthenticated\": true,\n  \"readOnly\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/advertisinganalytics/accounts?locale=en_US&expansion=reportSuiteName,reportSuiteName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"advertisinganalytics",
												"accounts"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US"
												},
												{
													"key": "expansion",
													"value": "reportSuiteName,reportSuiteName"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "post Mappings",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"reportSuites\": [\n    {\n      \"rsid\": \"consequat dolor\",\n      \"reportSuiteName\": \"in proident fugiat\",\n      \"deleteable\": false\n    },\n    {\n      \"rsid\": \"magna\",\n      \"reportSuiteName\": \"sed enim deser\",\n      \"deleteable\": true\n    }\n  ],\n  \"accounts\": [\n    \"pariatur deserunt incididunt\",\n    \"enim\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/advertisinganalytics/accounts/mapping/reportsuites",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"advertisinganalytics",
										"accounts",
										"mapping",
										"reportsuites"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"reportSuites\": [\n    {\n      \"rsid\": \"do magna \",\n      \"reportSuiteName\": \"elit\",\n      \"deleteable\": false\n    },\n    {\n      \"rsid\": \"est volupta\",\n      \"reportSuiteName\": \"irure cupidatat\",\n      \"deleteable\": true\n    }\n  ],\n  \"accounts\": [\n    \"eiusmod commodo anim do magna\",\n    \"consectetur\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/advertisinganalytics/accounts/mapping/reportsuites",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"advertisinganalytics",
												"accounts",
												"mapping",
												"reportsuites"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"status\": {\n      \"success\": true,\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"accountId\": \"dolor incididunt culpa dolore\"\n  },\n  {\n    \"status\": {\n      \"success\": false,\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"accountId\": \"ut cupidatat amet\"\n  }\n]"
								},
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"reportSuites\": [\n    {\n      \"rsid\": \"do magna \",\n      \"reportSuiteName\": \"elit\",\n      \"deleteable\": false\n    },\n    {\n      \"rsid\": \"est volupta\",\n      \"reportSuiteName\": \"irure cupidatat\",\n      \"deleteable\": true\n    }\n  ],\n  \"accounts\": [\n    \"eiusmod commodo anim do magna\",\n    \"consectetur\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/advertisinganalytics/accounts/mapping/reportsuites",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"advertisinganalytics",
												"accounts",
												"mapping",
												"reportsuites"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "get Features",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/advertisinganalytics/:userId/features",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"advertisinganalytics",
								":userId",
								"features"
							],
							"variable": [
								{
									"key": "userId",
									"value": "aliqua",
									"description": "(Required) userId"
								}
							]
						}
					},
					"response": [
						{
							"name": "{ \n\t display_name (string, optional), \n\t name (string, optional) = ['google_ads_api_reports' or 'smart_shopping' or 'beta_se_api_service_host' or 'events' or 'rulewarehouse_compare' or 'adgroup_smart_bid_execute' or 'youtube' or 'export_conversion_feed' o",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/advertisinganalytics/:userId/features",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"advertisinganalytics",
										":userId",
										"features"
									],
									"variable": [
										{
											"key": "userId",
											"value": "aliqua",
											"description": "(Required) userId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/advertisinganalytics/:userId/features",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"advertisinganalytics",
										":userId",
										"features"
									],
									"variable": [
										{
											"key": "userId",
											"value": "aliqua",
											"description": "(Required) userId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "alerts",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Get a specific alert",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/alerts/:id?locale=en_US&expansion=usageSummary,ownerFullName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"alerts",
										":id"
									],
									"query": [
										{
											"key": "locale",
											"value": "en_US",
											"description": "Locale"
										},
										{
											"key": "expansion",
											"value": "usageSummary,ownerFullName",
											"description": "List of comma delimited expansion parameters to return in the alert list response."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) the alert id"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/alerts/:id?locale=en_US&expansion=shares,scheduledUsersFullNames",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"alerts",
												":id"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US"
												},
												{
													"key": "expansion",
													"value": "shares,scheduledUsersFullNames"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) the alert id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"do cillum est Excepteur\",\n  \"name\": \"aliqua commodo sunt nulla laboris\",\n  \"description\": \"sit irure d\",\n  \"rsid\": \"nisi officia\",\n  \"reportSuiteName\": \"consequat Lorem\",\n  \"owner\": {\n    \"id\": -51405114,\n    \"imsUserId\": \"dolor cillum dolore aute consequat\"\n  },\n  \"isDeleted\": true,\n  \"migratedIds\": [\n    \"in\",\n    \"deserunt esse cillum Excepteur\"\n  ],\n  \"internal\": false,\n  \"deliverySettings\": [\n    {\n      \"id\": \"anim\",\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"in laborum Duis irure\",\n      \"owner\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isDeleted\": true,\n      \"modified\": \"1961-09-24T02:43:52.560Z\"\n    },\n    {\n      \"id\": \"sed\",\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"Ut\",\n      \"owner\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isDeleted\": false,\n      \"modified\": \"1973-02-24T05:02:28.244Z\"\n    }\n  ],\n  \"expiration\": \"2016-05-13T07:31:42.231Z\",\n  \"locale\": \"id consequat mollit\",\n  \"type\": \"tempor et eiusmod fugiat\",\n  \"definition\": {\n    \"aliqua_b85\": {},\n    \"elit52f\": {}\n  },\n  \"tags\": [\n    {\n      \"id\": -74385937,\n      \"name\": \"Excepteur in\",\n      \"description\": \"ut ex pariatur sit\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": 18683475,\n      \"name\": \"aliqua labore Duis\",\n      \"description\": \"minim sit laboris\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"shares\": [\n    {\n      \"componentId\": \"eu Lorem esse deserunt\",\n      \"shareToId\": 4108894,\n      \"shareToType\": \"minim elit\",\n      \"shareId\": -42983292,\n      \"componentType\": \"est Duis\",\n      \"shareToDisplayName\": \"fugiat labore ipsum nisi\",\n      \"shareToLogin\": \"incididunt\",\n      \"shareToImsUserId\": \"aliqua minim in esse\",\n      \"accessLevel\": \"et aliquip in tempor ut\"\n    },\n    {\n      \"componentId\": \"in tempor labore consectetur\",\n      \"shareToId\": 24553714,\n      \"shareToType\": \"amet\",\n      \"shareId\": 51058053,\n      \"componentType\": \"sunt voluptate magna\",\n      \"shareToDisplayName\": \"sint nostrud dolore\",\n      \"shareToLogin\": \"voluptate\",\n      \"shareToImsUserId\": \"proident\",\n      \"accessLevel\": \"quis sed \"\n    }\n  ],\n  \"deliverySettingsIds\": [\n    \"pariatur\",\n    \"d\"\n  ],\n  \"scheduledJobId\": \"est mollit consectetur\",\n  \"approved\": true,\n  \"favorite\": false,\n  \"usageSummary\": {\n    \"count\": -94318800,\n    \"mostRecentTimestamp\": \"1950-07-28T23:30:15.127Z\",\n    \"itemId\": \"amet\",\n    \"relevancyScore\": -77110902.13974127,\n    \"companyCount\": -1830054\n  },\n  \"granularity\": \"week\",\n  \"isDisabled\": true,\n  \"alternateVariableNames\": {\n    \"name\": \"dolor consequat ea\",\n    \"baseName\": \"adipisicing nisi minim amet\",\n    \"curatedName\": \"Excepteur pariatur\"\n  },\n  \"siteTitle\": \"quis amet ut\",\n  \"modified\": \"1943-08-23T13:49:39.662Z\"\n}"
								},
								{
									"name": "Internal error while fetching alert",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/alerts/:id?locale=en_US&expansion=shares,scheduledUsersFullNames",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"alerts",
												":id"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US"
												},
												{
													"key": "expansion",
													"value": "shares,scheduledUsersFullNames"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) the alert id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update an alert",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"sint dolore ut\",\n  \"description\": \"cupidatat mollit deserunt\",\n  \"rsid\": \"laboris ut\",\n  \"owner\": {\n    \"id\": -49063939,\n    \"imsUserId\": \"sunt dolor dolore nulla deserunt\"\n  },\n  \"isDeleted\": true,\n  \"migratedIds\": [\n    \"incididu\",\n    \"id aliquip fugiat tempor amet\"\n  ],\n  \"internal\": true,\n  \"deliverySettings\": [\n    {\n      \"id\": \"commodo labore\",\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"dolore\",\n      \"owner\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isDeleted\": true,\n      \"modified\": \"1970-03-29T21:34:44.466Z\"\n    },\n    {\n      \"id\": \"elit Duis ea exercitation\",\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"irure fugiat minim\",\n      \"owner\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isDeleted\": true,\n      \"modified\": \"1967-09-26T01:14:20.002Z\"\n    }\n  ],\n  \"expiration\": \"1988-12-28T01:09:07.421Z\",\n  \"locale\": \"culpa ullamco\",\n  \"type\": \"anim \",\n  \"definition\": {\n    \"eiusmodb4\": {},\n    \"magna_3\": {}\n  },\n  \"tags\": [\n    {\n      \"id\": 52385391,\n      \"name\": \"tempor nulla Lorem do voluptate\",\n      \"description\": \"incididunt officia sed dolor\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": 30048122,\n      \"name\": \"dolor\",\n      \"description\": \"mollit enim\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"shares\": [\n    {\n      \"componentId\": \"labore laboris\",\n      \"shareToId\": -73454171,\n      \"shareToType\": \"consectetur sit\",\n      \"shareId\": 96507227,\n      \"componentType\": \"exercitation in\",\n      \"shareToDisplayName\": \"cupidatat\",\n      \"shareToLogin\": \"proident eiusm\",\n      \"shareToImsUserId\": \"aliquip\",\n      \"accessLevel\": \"aliqua\"\n    },\n    {\n      \"componentId\": \"sed aliquip sit consectetur ea\",\n      \"shareToId\": -49896736,\n      \"shareToType\": \"sint\",\n      \"shareId\": -94950451,\n      \"componentType\": \"sint nostrud\",\n      \"shareToDisplayName\": \"laboris dolor ut aliqua\",\n      \"shareToLogin\": \"Duis in\",\n      \"shareToImsUserId\": \"dolor proident culpa velit sunt\",\n      \"accessLevel\": \"exercitation incididunt al\"\n    }\n  ],\n  \"deliverySettingsIds\": [\n    \"sit nisi \",\n    \"dolor aliquip\"\n  ],\n  \"scheduledJobId\": \"esse commodo\",\n  \"approved\": true,\n  \"favorite\": true,\n  \"usageSummary\": {\n    \"count\": -41423885,\n    \"mostRecentTimestamp\": \"1945-03-17T09:30:32.905Z\",\n    \"itemId\": \"laboris ut\",\n    \"relevancyScore\": 80730295.40412727,\n    \"companyCount\": -61703324\n  },\n  \"granularity\": \"year\",\n  \"isDisabled\": true,\n  \"alternateVariableNames\": {\n    \"name\": \"dolore commodo tempor minim\",\n    \"baseName\": \"ame\",\n    \"curatedName\": \"sit nostrud\"\n  },\n  \"siteTitle\": \"ut sint\",\n  \"modified\": \"1958-05-18T21:48:12.539Z\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/alerts/:id?locale=en_US&expansion=usageSummary,ownerFullName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"alerts",
										":id"
									],
									"query": [
										{
											"key": "locale",
											"value": "en_US",
											"description": "Locale"
										},
										{
											"key": "expansion",
											"value": "usageSummary,ownerFullName",
											"description": "List of comma delimited expansion parameters to return in the alert list response."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) the alert id"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"sint dolore ut\",\n  \"description\": \"cupidatat mollit deserunt\",\n  \"rsid\": \"laboris ut\",\n  \"owner\": {\n    \"id\": -49063939,\n    \"imsUserId\": \"sunt dolor dolore nulla deserunt\"\n  },\n  \"isDeleted\": true,\n  \"migratedIds\": [\n    \"incididu\",\n    \"id aliquip fugiat tempor amet\"\n  ],\n  \"internal\": true,\n  \"deliverySettings\": [\n    {\n      \"id\": \"commodo labore\",\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"dolore\",\n      \"owner\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isDeleted\": true,\n      \"modified\": \"1970-03-29T21:34:44.466Z\"\n    },\n    {\n      \"id\": \"elit Duis ea exercitation\",\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"irure fugiat minim\",\n      \"owner\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isDeleted\": true,\n      \"modified\": \"1967-09-26T01:14:20.002Z\"\n    }\n  ],\n  \"expiration\": \"1988-12-28T01:09:07.421Z\",\n  \"locale\": \"culpa ullamco\",\n  \"type\": \"anim \",\n  \"definition\": {\n    \"eiusmodb4\": {},\n    \"magna_3\": {}\n  },\n  \"tags\": [\n    {\n      \"id\": 52385391,\n      \"name\": \"tempor nulla Lorem do voluptate\",\n      \"description\": \"incididunt officia sed dolor\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": 30048122,\n      \"name\": \"dolor\",\n      \"description\": \"mollit enim\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"shares\": [\n    {\n      \"componentId\": \"labore laboris\",\n      \"shareToId\": -73454171,\n      \"shareToType\": \"consectetur sit\",\n      \"shareId\": 96507227,\n      \"componentType\": \"exercitation in\",\n      \"shareToDisplayName\": \"cupidatat\",\n      \"shareToLogin\": \"proident eiusm\",\n      \"shareToImsUserId\": \"aliquip\",\n      \"accessLevel\": \"aliqua\"\n    },\n    {\n      \"componentId\": \"sed aliquip sit consectetur ea\",\n      \"shareToId\": -49896736,\n      \"shareToType\": \"sint\",\n      \"shareId\": -94950451,\n      \"componentType\": \"sint nostrud\",\n      \"shareToDisplayName\": \"laboris dolor ut aliqua\",\n      \"shareToLogin\": \"Duis in\",\n      \"shareToImsUserId\": \"dolor proident culpa velit sunt\",\n      \"accessLevel\": \"exercitation incididunt al\"\n    }\n  ],\n  \"deliverySettingsIds\": [\n    \"sit nisi \",\n    \"dolor aliquip\"\n  ],\n  \"scheduledJobId\": \"esse commodo\",\n  \"approved\": true,\n  \"favorite\": true,\n  \"usageSummary\": {\n    \"count\": -41423885,\n    \"mostRecentTimestamp\": \"1945-03-17T09:30:32.905Z\",\n    \"itemId\": \"laboris ut\",\n    \"relevancyScore\": 80730295.40412727,\n    \"companyCount\": -61703324\n  },\n  \"granularity\": \"year\",\n  \"isDisabled\": true,\n  \"alternateVariableNames\": {\n    \"name\": \"dolore commodo tempor minim\",\n    \"baseName\": \"ame\",\n    \"curatedName\": \"sit nostrud\"\n  },\n  \"siteTitle\": \"ut sint\",\n  \"modified\": \"1958-05-18T21:48:12.539Z\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/alerts/:id?locale=en_US&expansion=shares,scheduledUsersFullNames",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"alerts",
												":id"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US"
												},
												{
													"key": "expansion",
													"value": "shares,scheduledUsersFullNames"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) the alert id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"do cillum est Excepteur\",\n  \"name\": \"aliqua commodo sunt nulla laboris\",\n  \"description\": \"sit irure d\",\n  \"rsid\": \"nisi officia\",\n  \"reportSuiteName\": \"consequat Lorem\",\n  \"owner\": {\n    \"id\": -51405114,\n    \"imsUserId\": \"dolor cillum dolore aute consequat\"\n  },\n  \"isDeleted\": true,\n  \"migratedIds\": [\n    \"in\",\n    \"deserunt esse cillum Excepteur\"\n  ],\n  \"internal\": false,\n  \"deliverySettings\": [\n    {\n      \"id\": \"anim\",\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"in laborum Duis irure\",\n      \"owner\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isDeleted\": true,\n      \"modified\": \"1961-09-24T02:43:52.560Z\"\n    },\n    {\n      \"id\": \"sed\",\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"Ut\",\n      \"owner\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isDeleted\": false,\n      \"modified\": \"1973-02-24T05:02:28.244Z\"\n    }\n  ],\n  \"expiration\": \"2016-05-13T07:31:42.231Z\",\n  \"locale\": \"id consequat mollit\",\n  \"type\": \"tempor et eiusmod fugiat\",\n  \"definition\": {\n    \"aliqua_b85\": {},\n    \"elit52f\": {}\n  },\n  \"tags\": [\n    {\n      \"id\": -74385937,\n      \"name\": \"Excepteur in\",\n      \"description\": \"ut ex pariatur sit\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": 18683475,\n      \"name\": \"aliqua labore Duis\",\n      \"description\": \"minim sit laboris\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"shares\": [\n    {\n      \"componentId\": \"eu Lorem esse deserunt\",\n      \"shareToId\": 4108894,\n      \"shareToType\": \"minim elit\",\n      \"shareId\": -42983292,\n      \"componentType\": \"est Duis\",\n      \"shareToDisplayName\": \"fugiat labore ipsum nisi\",\n      \"shareToLogin\": \"incididunt\",\n      \"shareToImsUserId\": \"aliqua minim in esse\",\n      \"accessLevel\": \"et aliquip in tempor ut\"\n    },\n    {\n      \"componentId\": \"in tempor labore consectetur\",\n      \"shareToId\": 24553714,\n      \"shareToType\": \"amet\",\n      \"shareId\": 51058053,\n      \"componentType\": \"sunt voluptate magna\",\n      \"shareToDisplayName\": \"sint nostrud dolore\",\n      \"shareToLogin\": \"voluptate\",\n      \"shareToImsUserId\": \"proident\",\n      \"accessLevel\": \"quis sed \"\n    }\n  ],\n  \"deliverySettingsIds\": [\n    \"pariatur\",\n    \"d\"\n  ],\n  \"scheduledJobId\": \"est mollit consectetur\",\n  \"approved\": true,\n  \"favorite\": false,\n  \"usageSummary\": {\n    \"count\": -94318800,\n    \"mostRecentTimestamp\": \"1950-07-28T23:30:15.127Z\",\n    \"itemId\": \"amet\",\n    \"relevancyScore\": -77110902.13974127,\n    \"companyCount\": -1830054\n  },\n  \"granularity\": \"week\",\n  \"isDisabled\": true,\n  \"alternateVariableNames\": {\n    \"name\": \"dolor consequat ea\",\n    \"baseName\": \"adipisicing nisi minim amet\",\n    \"curatedName\": \"Excepteur pariatur\"\n  },\n  \"siteTitle\": \"quis amet ut\",\n  \"modified\": \"1943-08-23T13:49:39.662Z\"\n}"
								},
								{
									"name": "Internal error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"sint dolore ut\",\n  \"description\": \"cupidatat mollit deserunt\",\n  \"rsid\": \"laboris ut\",\n  \"owner\": {\n    \"id\": -49063939,\n    \"imsUserId\": \"sunt dolor dolore nulla deserunt\"\n  },\n  \"isDeleted\": true,\n  \"migratedIds\": [\n    \"incididu\",\n    \"id aliquip fugiat tempor amet\"\n  ],\n  \"internal\": true,\n  \"deliverySettings\": [\n    {\n      \"id\": \"commodo labore\",\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"dolore\",\n      \"owner\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isDeleted\": true,\n      \"modified\": \"1970-03-29T21:34:44.466Z\"\n    },\n    {\n      \"id\": \"elit Duis ea exercitation\",\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"irure fugiat minim\",\n      \"owner\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isDeleted\": true,\n      \"modified\": \"1967-09-26T01:14:20.002Z\"\n    }\n  ],\n  \"expiration\": \"1988-12-28T01:09:07.421Z\",\n  \"locale\": \"culpa ullamco\",\n  \"type\": \"anim \",\n  \"definition\": {\n    \"eiusmodb4\": {},\n    \"magna_3\": {}\n  },\n  \"tags\": [\n    {\n      \"id\": 52385391,\n      \"name\": \"tempor nulla Lorem do voluptate\",\n      \"description\": \"incididunt officia sed dolor\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": 30048122,\n      \"name\": \"dolor\",\n      \"description\": \"mollit enim\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"shares\": [\n    {\n      \"componentId\": \"labore laboris\",\n      \"shareToId\": -73454171,\n      \"shareToType\": \"consectetur sit\",\n      \"shareId\": 96507227,\n      \"componentType\": \"exercitation in\",\n      \"shareToDisplayName\": \"cupidatat\",\n      \"shareToLogin\": \"proident eiusm\",\n      \"shareToImsUserId\": \"aliquip\",\n      \"accessLevel\": \"aliqua\"\n    },\n    {\n      \"componentId\": \"sed aliquip sit consectetur ea\",\n      \"shareToId\": -49896736,\n      \"shareToType\": \"sint\",\n      \"shareId\": -94950451,\n      \"componentType\": \"sint nostrud\",\n      \"shareToDisplayName\": \"laboris dolor ut aliqua\",\n      \"shareToLogin\": \"Duis in\",\n      \"shareToImsUserId\": \"dolor proident culpa velit sunt\",\n      \"accessLevel\": \"exercitation incididunt al\"\n    }\n  ],\n  \"deliverySettingsIds\": [\n    \"sit nisi \",\n    \"dolor aliquip\"\n  ],\n  \"scheduledJobId\": \"esse commodo\",\n  \"approved\": true,\n  \"favorite\": true,\n  \"usageSummary\": {\n    \"count\": -41423885,\n    \"mostRecentTimestamp\": \"1945-03-17T09:30:32.905Z\",\n    \"itemId\": \"laboris ut\",\n    \"relevancyScore\": 80730295.40412727,\n    \"companyCount\": -61703324\n  },\n  \"granularity\": \"year\",\n  \"isDisabled\": true,\n  \"alternateVariableNames\": {\n    \"name\": \"dolore commodo tempor minim\",\n    \"baseName\": \"ame\",\n    \"curatedName\": \"sit nostrud\"\n  },\n  \"siteTitle\": \"ut sint\",\n  \"modified\": \"1958-05-18T21:48:12.539Z\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/alerts/:id?locale=en_US&expansion=shares,scheduledUsersFullNames",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"alerts",
												":id"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US"
												},
												{
													"key": "expansion",
													"value": "shares,scheduledUsersFullNames"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) the alert id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "removes the alert",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/alerts/:id?locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"alerts",
										":id"
									],
									"query": [
										{
											"key": "locale",
											"value": "en_US",
											"description": "Locale"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) the alert id"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/alerts/:id?locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"alerts",
												":id"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) the alert id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"result\": \"proident sit\",\n  \"message\": \"est tempor do sed et\"\n}"
								},
								{
									"name": "There was no alert with that ID",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/alerts/:id?locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"alerts",
												":id"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) the alert id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal error",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/alerts/:id?locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"alerts",
												":id"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) the alert id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Get a list of alerts",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/alerts?alertType=analyticsdata&locale=en_US&expansion=usageSummary,ownerFullName&includeType=deleted,all&rsids=aliqua&filterByIds=aliqua&filterByModifiedAfter=aliqua&ownerId=43407647&limit=10&page=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"alerts"
							],
							"query": [
								{
									"key": "alertType",
									"value": "analyticsdata",
									"description": "The type of alert to retrieve (analyticsdata or a servercallsusage alert)"
								},
								{
									"key": "locale",
									"value": "en_US",
									"description": "Locale"
								},
								{
									"key": "expansion",
									"value": "usageSummary,ownerFullName",
									"description": "List of comma delimited expansion parameters to return in the alert list response."
								},
								{
									"key": "includeType",
									"value": "deleted,all",
									"description": "Include additional alerts"
								},
								{
									"key": "rsids",
									"value": "aliqua",
									"description": "Filter by rsids"
								},
								{
									"key": "filterByIds",
									"value": "aliqua",
									"description": "Filter by alert IDs"
								},
								{
									"key": "filterByModifiedAfter",
									"value": "aliqua",
									"description": "Filter list to only include jobs modified since this date (ISO8601 format)"
								},
								{
									"key": "ownerId",
									"value": "43407647",
									"description": "Filter by owner's loginid"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Number of results per page"
								},
								{
									"key": "page",
									"value": "0",
									"description": "Page number (base 0 - first page is \"0\")"
								}
							]
						},
						"description": "The alerts endpoint returns a list of alerts for the given parameters.\n"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/alerts?alertType=analyticsdata&locale=en_US&expansion=shares,scheduledUsersFullNames&includeType=all,deleted&rsids=aliqua&filterByIds=aliqua&filterByModifiedAfter=aliqua&ownerId=43407647&limit=10&page=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"alerts"
									],
									"query": [
										{
											"key": "alertType",
											"value": "analyticsdata"
										},
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "expansion",
											"value": "shares,scheduledUsersFullNames"
										},
										{
											"key": "includeType",
											"value": "all,deleted"
										},
										{
											"key": "rsids",
											"value": "aliqua"
										},
										{
											"key": "filterByIds",
											"value": "aliqua"
										},
										{
											"key": "filterByModifiedAfter",
											"value": "aliqua"
										},
										{
											"key": "ownerId",
											"value": "43407647"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"totalElements\": 67983716,\n  \"totalPages\": 34248067,\n  \"sort\": {\n    \"sorted\": true,\n    \"unsorted\": false,\n    \"empty\": true\n  },\n  \"first\": false,\n  \"last\": true,\n  \"number\": 63024911,\n  \"numberOfElements\": -19326514,\n  \"pageable\": {\n    \"sort\": {\n      \"sorted\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"unsorted\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"empty\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"pageSize\": 24662681,\n    \"pageNumber\": -65353372,\n    \"paged\": false,\n    \"unpaged\": true,\n    \"offset\": -31804506\n  },\n  \"size\": -93235814,\n  \"empty\": false\n}"
						},
						{
							"name": "Insufficient access to retrive this list, i.e. the user does not belong to the company owning the rsid",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/alerts?alertType=analyticsdata&locale=en_US&expansion=shares,scheduledUsersFullNames&includeType=all,deleted&rsids=aliqua&filterByIds=aliqua&filterByModifiedAfter=aliqua&ownerId=43407647&limit=10&page=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"alerts"
									],
									"query": [
										{
											"key": "alertType",
											"value": "analyticsdata"
										},
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "expansion",
											"value": "shares,scheduledUsersFullNames"
										},
										{
											"key": "includeType",
											"value": "all,deleted"
										},
										{
											"key": "rsids",
											"value": "aliqua"
										},
										{
											"key": "filterByIds",
											"value": "aliqua"
										},
										{
											"key": "filterByModifiedAfter",
											"value": "aliqua"
										},
										{
											"key": "ownerId",
											"value": "43407647"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "0"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal error while fetching report suite list",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/alerts?alertType=analyticsdata&locale=en_US&expansion=shares,scheduledUsersFullNames&includeType=all,deleted&rsids=aliqua&filterByIds=aliqua&filterByModifiedAfter=aliqua&ownerId=43407647&limit=10&page=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"alerts"
									],
									"query": [
										{
											"key": "alertType",
											"value": "analyticsdata"
										},
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "expansion",
											"value": "shares,scheduledUsersFullNames"
										},
										{
											"key": "includeType",
											"value": "all,deleted"
										},
										{
											"key": "rsids",
											"value": "aliqua"
										},
										{
											"key": "filterByIds",
											"value": "aliqua"
										},
										{
											"key": "filterByModifiedAfter",
											"value": "aliqua"
										},
										{
											"key": "ownerId",
											"value": "43407647"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "0"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create an alert",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"irure laborum consectetur\",\n  \"description\": \"do Excepteur\",\n  \"rsid\": \"eu mollit\",\n  \"owner\": {\n    \"id\": 89856781,\n    \"imsUserId\": \"ipsum occaecat ut ad\"\n  },\n  \"isDeleted\": true,\n  \"migratedIds\": [\n    \"nulla minim\",\n    \"aliquip Lorem in qui cupidatat\"\n  ],\n  \"internal\": false,\n  \"deliverySettings\": [\n    {\n      \"id\": \"reprehenderit dolore\",\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"eiusmod sint eu consectetur\",\n      \"owner\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isDeleted\": false,\n      \"modified\": \"1999-08-30T07:41:53.932Z\"\n    },\n    {\n      \"id\": \"ipsum nulla irure incididunt\",\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"veniam\",\n      \"owner\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isDeleted\": false,\n      \"modified\": \"1993-09-02T13:15:35.334Z\"\n    }\n  ],\n  \"expiration\": \"2000-05-12T13:48:13.232Z\",\n  \"locale\": \"dolor velit \",\n  \"type\": \"Lorem fugiat\",\n  \"definition\": {\n    \"Loremccc\": {}\n  },\n  \"tags\": [\n    {\n      \"id\": -3089027,\n      \"name\": \"irure sed cupidatat pariatur\",\n      \"description\": \"magna in\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": -80247722,\n      \"name\": \"voluptate ex\",\n      \"description\": \"exercitation consectetur aliqua officia eiusmod\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"shares\": [\n    {\n      \"componentId\": \"sint culpa proident reprehenderit est\",\n      \"shareToId\": 67345424,\n      \"shareToType\": \"consectetur dolor\",\n      \"shareId\": 46157632,\n      \"componentType\": \"non et dolore dolor\",\n      \"shareToDisplayName\": \"eiusmod ex in nisi culpa\",\n      \"shareToLogin\": \"cupidatat aute\",\n      \"shareToImsUserId\": \"dolore aliquip\",\n      \"accessLevel\": \"proident commodo\"\n    },\n    {\n      \"componentId\": \"ut\",\n      \"shareToId\": 63553472,\n      \"shareToType\": \"ipsum ullamco reprehende\",\n      \"shareId\": -1460322,\n      \"componentType\": \"velit\",\n      \"shareToDisplayName\": \"deserunt fugiat\",\n      \"shareToLogin\": \"nulla eu\",\n      \"shareToImsUserId\": \"consequat ut esse\",\n      \"accessLevel\": \"occaecat enim elit consectetur\"\n    }\n  ],\n  \"deliverySettingsIds\": [\n    \"incididunt nulla Ut magna\",\n    \"eu eiusmod fugiat\"\n  ],\n  \"scheduledJobId\": \"dolor sed\",\n  \"approved\": false,\n  \"favorite\": false,\n  \"usageSummary\": {\n    \"count\": 11085388,\n    \"mostRecentTimestamp\": \"1999-10-01T04:59:15.389Z\",\n    \"itemId\": \"velit laborum\",\n    \"relevancyScore\": 36505850.37519637,\n    \"companyCount\": 52441538\n  },\n  \"granularity\": \"day\",\n  \"isDisabled\": false,\n  \"alternateVariableNames\": {\n    \"name\": \"anim non in nostrud\",\n    \"baseName\": \"et\",\n    \"curatedName\": \"voluptate elit\"\n  },\n  \"siteTitle\": \"tempor pariatur consectetur\",\n  \"modified\": \"1959-02-05T21:35:48.450Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/alerts?expansion=usageSummary,ownerFullName&locale=en_US",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"alerts"
							],
							"query": [
								{
									"key": "expansion",
									"value": "usageSummary,ownerFullName",
									"description": "List of comma delimited expansion parameters to return in the alert list response."
								},
								{
									"key": "locale",
									"value": "en_US",
									"description": "Locale"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"sint dolore ut\",\n  \"description\": \"cupidatat mollit deserunt\",\n  \"rsid\": \"laboris ut\",\n  \"owner\": {\n    \"id\": -49063939,\n    \"imsUserId\": \"sunt dolor dolore nulla deserunt\"\n  },\n  \"isDeleted\": true,\n  \"migratedIds\": [\n    \"incididu\",\n    \"id aliquip fugiat tempor amet\"\n  ],\n  \"internal\": true,\n  \"deliverySettings\": [\n    {\n      \"id\": \"commodo labore\",\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"dolore\",\n      \"owner\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isDeleted\": true,\n      \"modified\": \"1970-03-29T21:34:44.466Z\"\n    },\n    {\n      \"id\": \"elit Duis ea exercitation\",\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"irure fugiat minim\",\n      \"owner\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isDeleted\": true,\n      \"modified\": \"1967-09-26T01:14:20.002Z\"\n    }\n  ],\n  \"expiration\": \"1988-12-28T01:09:07.421Z\",\n  \"locale\": \"culpa ullamco\",\n  \"type\": \"anim \",\n  \"definition\": {\n    \"eiusmodb4\": {},\n    \"magna_3\": {}\n  },\n  \"tags\": [\n    {\n      \"id\": 52385391,\n      \"name\": \"tempor nulla Lorem do voluptate\",\n      \"description\": \"incididunt officia sed dolor\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": 30048122,\n      \"name\": \"dolor\",\n      \"description\": \"mollit enim\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"shares\": [\n    {\n      \"componentId\": \"labore laboris\",\n      \"shareToId\": -73454171,\n      \"shareToType\": \"consectetur sit\",\n      \"shareId\": 96507227,\n      \"componentType\": \"exercitation in\",\n      \"shareToDisplayName\": \"cupidatat\",\n      \"shareToLogin\": \"proident eiusm\",\n      \"shareToImsUserId\": \"aliquip\",\n      \"accessLevel\": \"aliqua\"\n    },\n    {\n      \"componentId\": \"sed aliquip sit consectetur ea\",\n      \"shareToId\": -49896736,\n      \"shareToType\": \"sint\",\n      \"shareId\": -94950451,\n      \"componentType\": \"sint nostrud\",\n      \"shareToDisplayName\": \"laboris dolor ut aliqua\",\n      \"shareToLogin\": \"Duis in\",\n      \"shareToImsUserId\": \"dolor proident culpa velit sunt\",\n      \"accessLevel\": \"exercitation incididunt al\"\n    }\n  ],\n  \"deliverySettingsIds\": [\n    \"sit nisi \",\n    \"dolor aliquip\"\n  ],\n  \"scheduledJobId\": \"esse commodo\",\n  \"approved\": true,\n  \"favorite\": true,\n  \"usageSummary\": {\n    \"count\": -41423885,\n    \"mostRecentTimestamp\": \"1945-03-17T09:30:32.905Z\",\n    \"itemId\": \"laboris ut\",\n    \"relevancyScore\": 80730295.40412727,\n    \"companyCount\": -61703324\n  },\n  \"granularity\": \"year\",\n  \"isDisabled\": true,\n  \"alternateVariableNames\": {\n    \"name\": \"dolore commodo tempor minim\",\n    \"baseName\": \"ame\",\n    \"curatedName\": \"sit nostrud\"\n  },\n  \"siteTitle\": \"ut sint\",\n  \"modified\": \"1958-05-18T21:48:12.539Z\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/alerts?expansion=shares,scheduledUsersFullNames&locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"alerts"
									],
									"query": [
										{
											"key": "expansion",
											"value": "shares,scheduledUsersFullNames"
										},
										{
											"key": "locale",
											"value": "en_US"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"do cillum est Excepteur\",\n  \"name\": \"aliqua commodo sunt nulla laboris\",\n  \"description\": \"sit irure d\",\n  \"rsid\": \"nisi officia\",\n  \"reportSuiteName\": \"consequat Lorem\",\n  \"owner\": {\n    \"id\": -51405114,\n    \"imsUserId\": \"dolor cillum dolore aute consequat\"\n  },\n  \"isDeleted\": true,\n  \"migratedIds\": [\n    \"in\",\n    \"deserunt esse cillum Excepteur\"\n  ],\n  \"internal\": false,\n  \"deliverySettings\": [\n    {\n      \"id\": \"anim\",\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"in laborum Duis irure\",\n      \"owner\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isDeleted\": true,\n      \"modified\": \"1961-09-24T02:43:52.560Z\"\n    },\n    {\n      \"id\": \"sed\",\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"Ut\",\n      \"owner\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isDeleted\": false,\n      \"modified\": \"1973-02-24T05:02:28.244Z\"\n    }\n  ],\n  \"expiration\": \"2016-05-13T07:31:42.231Z\",\n  \"locale\": \"id consequat mollit\",\n  \"type\": \"tempor et eiusmod fugiat\",\n  \"definition\": {\n    \"aliqua_b85\": {},\n    \"elit52f\": {}\n  },\n  \"tags\": [\n    {\n      \"id\": -74385937,\n      \"name\": \"Excepteur in\",\n      \"description\": \"ut ex pariatur sit\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": 18683475,\n      \"name\": \"aliqua labore Duis\",\n      \"description\": \"minim sit laboris\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"shares\": [\n    {\n      \"componentId\": \"eu Lorem esse deserunt\",\n      \"shareToId\": 4108894,\n      \"shareToType\": \"minim elit\",\n      \"shareId\": -42983292,\n      \"componentType\": \"est Duis\",\n      \"shareToDisplayName\": \"fugiat labore ipsum nisi\",\n      \"shareToLogin\": \"incididunt\",\n      \"shareToImsUserId\": \"aliqua minim in esse\",\n      \"accessLevel\": \"et aliquip in tempor ut\"\n    },\n    {\n      \"componentId\": \"in tempor labore consectetur\",\n      \"shareToId\": 24553714,\n      \"shareToType\": \"amet\",\n      \"shareId\": 51058053,\n      \"componentType\": \"sunt voluptate magna\",\n      \"shareToDisplayName\": \"sint nostrud dolore\",\n      \"shareToLogin\": \"voluptate\",\n      \"shareToImsUserId\": \"proident\",\n      \"accessLevel\": \"quis sed \"\n    }\n  ],\n  \"deliverySettingsIds\": [\n    \"pariatur\",\n    \"d\"\n  ],\n  \"scheduledJobId\": \"est mollit consectetur\",\n  \"approved\": true,\n  \"favorite\": false,\n  \"usageSummary\": {\n    \"count\": -94318800,\n    \"mostRecentTimestamp\": \"1950-07-28T23:30:15.127Z\",\n    \"itemId\": \"amet\",\n    \"relevancyScore\": -77110902.13974127,\n    \"companyCount\": -1830054\n  },\n  \"granularity\": \"week\",\n  \"isDisabled\": true,\n  \"alternateVariableNames\": {\n    \"name\": \"dolor consequat ea\",\n    \"baseName\": \"adipisicing nisi minim amet\",\n    \"curatedName\": \"Excepteur pariatur\"\n  },\n  \"siteTitle\": \"quis amet ut\",\n  \"modified\": \"1943-08-23T13:49:39.662Z\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"sint dolore ut\",\n  \"description\": \"cupidatat mollit deserunt\",\n  \"rsid\": \"laboris ut\",\n  \"owner\": {\n    \"id\": -49063939,\n    \"imsUserId\": \"sunt dolor dolore nulla deserunt\"\n  },\n  \"isDeleted\": true,\n  \"migratedIds\": [\n    \"incididu\",\n    \"id aliquip fugiat tempor amet\"\n  ],\n  \"internal\": true,\n  \"deliverySettings\": [\n    {\n      \"id\": \"commodo labore\",\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"dolore\",\n      \"owner\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isDeleted\": true,\n      \"modified\": \"1970-03-29T21:34:44.466Z\"\n    },\n    {\n      \"id\": \"elit Duis ea exercitation\",\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"irure fugiat minim\",\n      \"owner\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isDeleted\": true,\n      \"modified\": \"1967-09-26T01:14:20.002Z\"\n    }\n  ],\n  \"expiration\": \"1988-12-28T01:09:07.421Z\",\n  \"locale\": \"culpa ullamco\",\n  \"type\": \"anim \",\n  \"definition\": {\n    \"eiusmodb4\": {},\n    \"magna_3\": {}\n  },\n  \"tags\": [\n    {\n      \"id\": 52385391,\n      \"name\": \"tempor nulla Lorem do voluptate\",\n      \"description\": \"incididunt officia sed dolor\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": 30048122,\n      \"name\": \"dolor\",\n      \"description\": \"mollit enim\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"shares\": [\n    {\n      \"componentId\": \"labore laboris\",\n      \"shareToId\": -73454171,\n      \"shareToType\": \"consectetur sit\",\n      \"shareId\": 96507227,\n      \"componentType\": \"exercitation in\",\n      \"shareToDisplayName\": \"cupidatat\",\n      \"shareToLogin\": \"proident eiusm\",\n      \"shareToImsUserId\": \"aliquip\",\n      \"accessLevel\": \"aliqua\"\n    },\n    {\n      \"componentId\": \"sed aliquip sit consectetur ea\",\n      \"shareToId\": -49896736,\n      \"shareToType\": \"sint\",\n      \"shareId\": -94950451,\n      \"componentType\": \"sint nostrud\",\n      \"shareToDisplayName\": \"laboris dolor ut aliqua\",\n      \"shareToLogin\": \"Duis in\",\n      \"shareToImsUserId\": \"dolor proident culpa velit sunt\",\n      \"accessLevel\": \"exercitation incididunt al\"\n    }\n  ],\n  \"deliverySettingsIds\": [\n    \"sit nisi \",\n    \"dolor aliquip\"\n  ],\n  \"scheduledJobId\": \"esse commodo\",\n  \"approved\": true,\n  \"favorite\": true,\n  \"usageSummary\": {\n    \"count\": -41423885,\n    \"mostRecentTimestamp\": \"1945-03-17T09:30:32.905Z\",\n    \"itemId\": \"laboris ut\",\n    \"relevancyScore\": 80730295.40412727,\n    \"companyCount\": -61703324\n  },\n  \"granularity\": \"year\",\n  \"isDisabled\": true,\n  \"alternateVariableNames\": {\n    \"name\": \"dolore commodo tempor minim\",\n    \"baseName\": \"ame\",\n    \"curatedName\": \"sit nostrud\"\n  },\n  \"siteTitle\": \"ut sint\",\n  \"modified\": \"1958-05-18T21:48:12.539Z\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/alerts?expansion=shares,scheduledUsersFullNames&locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"alerts"
									],
									"query": [
										{
											"key": "expansion",
											"value": "shares,scheduledUsersFullNames"
										},
										{
											"key": "locale",
											"value": "en_US"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"invalid_json_input\",\n  \"errorDescription\": \"dolore\",\n  \"errorId\": \"ut magna cupidatat\",\n  \"errorDetails\": {\n    \"tempor_\": {},\n    \"magnabc\": {},\n    \"quis_22\": {},\n    \"sit_9f0\": {}\n  },\n  \"rootCauseService\": \"ut anim do\"\n}"
						},
						{
							"name": "Internal error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"sint dolore ut\",\n  \"description\": \"cupidatat mollit deserunt\",\n  \"rsid\": \"laboris ut\",\n  \"owner\": {\n    \"id\": -49063939,\n    \"imsUserId\": \"sunt dolor dolore nulla deserunt\"\n  },\n  \"isDeleted\": true,\n  \"migratedIds\": [\n    \"incididu\",\n    \"id aliquip fugiat tempor amet\"\n  ],\n  \"internal\": true,\n  \"deliverySettings\": [\n    {\n      \"id\": \"commodo labore\",\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"dolore\",\n      \"owner\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isDeleted\": true,\n      \"modified\": \"1970-03-29T21:34:44.466Z\"\n    },\n    {\n      \"id\": \"elit Duis ea exercitation\",\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"irure fugiat minim\",\n      \"owner\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isDeleted\": true,\n      \"modified\": \"1967-09-26T01:14:20.002Z\"\n    }\n  ],\n  \"expiration\": \"1988-12-28T01:09:07.421Z\",\n  \"locale\": \"culpa ullamco\",\n  \"type\": \"anim \",\n  \"definition\": {\n    \"eiusmodb4\": {},\n    \"magna_3\": {}\n  },\n  \"tags\": [\n    {\n      \"id\": 52385391,\n      \"name\": \"tempor nulla Lorem do voluptate\",\n      \"description\": \"incididunt officia sed dolor\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": 30048122,\n      \"name\": \"dolor\",\n      \"description\": \"mollit enim\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"shares\": [\n    {\n      \"componentId\": \"labore laboris\",\n      \"shareToId\": -73454171,\n      \"shareToType\": \"consectetur sit\",\n      \"shareId\": 96507227,\n      \"componentType\": \"exercitation in\",\n      \"shareToDisplayName\": \"cupidatat\",\n      \"shareToLogin\": \"proident eiusm\",\n      \"shareToImsUserId\": \"aliquip\",\n      \"accessLevel\": \"aliqua\"\n    },\n    {\n      \"componentId\": \"sed aliquip sit consectetur ea\",\n      \"shareToId\": -49896736,\n      \"shareToType\": \"sint\",\n      \"shareId\": -94950451,\n      \"componentType\": \"sint nostrud\",\n      \"shareToDisplayName\": \"laboris dolor ut aliqua\",\n      \"shareToLogin\": \"Duis in\",\n      \"shareToImsUserId\": \"dolor proident culpa velit sunt\",\n      \"accessLevel\": \"exercitation incididunt al\"\n    }\n  ],\n  \"deliverySettingsIds\": [\n    \"sit nisi \",\n    \"dolor aliquip\"\n  ],\n  \"scheduledJobId\": \"esse commodo\",\n  \"approved\": true,\n  \"favorite\": true,\n  \"usageSummary\": {\n    \"count\": -41423885,\n    \"mostRecentTimestamp\": \"1945-03-17T09:30:32.905Z\",\n    \"itemId\": \"laboris ut\",\n    \"relevancyScore\": 80730295.40412727,\n    \"companyCount\": -61703324\n  },\n  \"granularity\": \"year\",\n  \"isDisabled\": true,\n  \"alternateVariableNames\": {\n    \"name\": \"dolore commodo tempor minim\",\n    \"baseName\": \"ame\",\n    \"curatedName\": \"sit nostrud\"\n  },\n  \"siteTitle\": \"ut sint\",\n  \"modified\": \"1958-05-18T21:48:12.539Z\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/alerts?expansion=shares,scheduledUsersFullNames&locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"alerts"
									],
									"query": [
										{
											"key": "expansion",
											"value": "shares,scheduledUsersFullNames"
										},
										{
											"key": "locale",
											"value": "en_US"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get results for a specific run of an alert",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/alerts/results/:id?idType=jobInstance",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"alerts",
								"results",
								":id"
							],
							"query": [
								{
									"key": "idType",
									"value": "jobInstance",
									"description": "The type of id being used to get the alert result"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "aliqua",
									"description": "(Required) the job instance id of a particular alert run"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/alerts/results/:id?idType=jobInstance",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"alerts",
										"results",
										":id"
									],
									"query": [
										{
											"key": "idType",
											"value": "jobInstance"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) the job instance id of a particular alert run"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"Lorem_6\": {},\n  \"consectetur1b7\": {}\n}"
						},
						{
							"name": "Internal error while fetching alert results",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/alerts/results/:id?idType=jobInstance",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"alerts",
										"results",
										":id"
									],
									"query": [
										{
											"key": "idType",
											"value": "jobInstance"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) the job instance id of a particular alert run"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Renews alerts by pushing off the expiration time to one year from current time.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  \"cillum minim dolore\",\n  \"ullamco a\"\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/alerts/reenable?locale=en_US",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"alerts",
								"reenable"
							],
							"query": [
								{
									"key": "locale",
									"value": "en_US",
									"description": "Locale"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  \"officia\",\n  \"occaecat minim et anim dolor\"\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/alerts/reenable?locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"alerts",
										"reenable"
									],
									"query": [
										{
											"key": "locale",
											"value": "en_US"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"alertId\": \"nostrud\",\n    \"status\": {\n      \"success\": true,\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  {\n    \"alertId\": \"sed laboris magna consequat\",\n    \"status\": {\n      \"success\": true,\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n]"
						},
						{
							"name": "Unexpected error; alert renewal failed for unknown error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  \"officia\",\n  \"occaecat minim et anim dolor\"\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/alerts/reenable?locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"alerts",
										"reenable"
									],
									"query": [
										{
											"key": "locale",
											"value": "en_US"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Validate an alert definition",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"sint dolore ut\",\n  \"description\": \"cupidatat mollit deserunt\",\n  \"rsid\": \"laboris ut\",\n  \"owner\": {\n    \"id\": -49063939,\n    \"imsUserId\": \"sunt dolor dolore nulla deserunt\"\n  },\n  \"isDeleted\": true,\n  \"migratedIds\": [\n    \"incididu\",\n    \"id aliquip fugiat tempor amet\"\n  ],\n  \"internal\": true,\n  \"deliverySettings\": [\n    {\n      \"id\": \"commodo labore\",\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"dolore\",\n      \"owner\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isDeleted\": true,\n      \"modified\": \"1970-03-29T21:34:44.466Z\"\n    },\n    {\n      \"id\": \"elit Duis ea exercitation\",\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"irure fugiat minim\",\n      \"owner\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isDeleted\": true,\n      \"modified\": \"1967-09-26T01:14:20.002Z\"\n    }\n  ],\n  \"expiration\": \"1988-12-28T01:09:07.421Z\",\n  \"locale\": \"culpa ullamco\",\n  \"type\": \"anim \",\n  \"definition\": {\n    \"eiusmodb4\": {},\n    \"magna_3\": {}\n  },\n  \"tags\": [\n    {\n      \"id\": 52385391,\n      \"name\": \"tempor nulla Lorem do voluptate\",\n      \"description\": \"incididunt officia sed dolor\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": 30048122,\n      \"name\": \"dolor\",\n      \"description\": \"mollit enim\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"shares\": [\n    {\n      \"componentId\": \"labore laboris\",\n      \"shareToId\": -73454171,\n      \"shareToType\": \"consectetur sit\",\n      \"shareId\": 96507227,\n      \"componentType\": \"exercitation in\",\n      \"shareToDisplayName\": \"cupidatat\",\n      \"shareToLogin\": \"proident eiusm\",\n      \"shareToImsUserId\": \"aliquip\",\n      \"accessLevel\": \"aliqua\"\n    },\n    {\n      \"componentId\": \"sed aliquip sit consectetur ea\",\n      \"shareToId\": -49896736,\n      \"shareToType\": \"sint\",\n      \"shareId\": -94950451,\n      \"componentType\": \"sint nostrud\",\n      \"shareToDisplayName\": \"laboris dolor ut aliqua\",\n      \"shareToLogin\": \"Duis in\",\n      \"shareToImsUserId\": \"dolor proident culpa velit sunt\",\n      \"accessLevel\": \"exercitation incididunt al\"\n    }\n  ],\n  \"deliverySettingsIds\": [\n    \"sit nisi \",\n    \"dolor aliquip\"\n  ],\n  \"scheduledJobId\": \"esse commodo\",\n  \"approved\": true,\n  \"favorite\": true,\n  \"usageSummary\": {\n    \"count\": -41423885,\n    \"mostRecentTimestamp\": \"1945-03-17T09:30:32.905Z\",\n    \"itemId\": \"laboris ut\",\n    \"relevancyScore\": 80730295.40412727,\n    \"companyCount\": -61703324\n  },\n  \"granularity\": \"year\",\n  \"isDisabled\": true,\n  \"alternateVariableNames\": {\n    \"name\": \"dolore commodo tempor minim\",\n    \"baseName\": \"ame\",\n    \"curatedName\": \"sit nostrud\"\n  },\n  \"siteTitle\": \"ut sint\",\n  \"modified\": \"1958-05-18T21:48:12.539Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/alerts/validate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"alerts",
								"validate"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"sint dolore ut\",\n  \"description\": \"cupidatat mollit deserunt\",\n  \"rsid\": \"laboris ut\",\n  \"owner\": {\n    \"id\": -49063939,\n    \"imsUserId\": \"sunt dolor dolore nulla deserunt\"\n  },\n  \"isDeleted\": true,\n  \"migratedIds\": [\n    \"incididu\",\n    \"id aliquip fugiat tempor amet\"\n  ],\n  \"internal\": true,\n  \"deliverySettings\": [\n    {\n      \"id\": \"commodo labore\",\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"dolore\",\n      \"owner\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isDeleted\": true,\n      \"modified\": \"1970-03-29T21:34:44.466Z\"\n    },\n    {\n      \"id\": \"elit Duis ea exercitation\",\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"irure fugiat minim\",\n      \"owner\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isDeleted\": true,\n      \"modified\": \"1967-09-26T01:14:20.002Z\"\n    }\n  ],\n  \"expiration\": \"1988-12-28T01:09:07.421Z\",\n  \"locale\": \"culpa ullamco\",\n  \"type\": \"anim \",\n  \"definition\": {\n    \"eiusmodb4\": {},\n    \"magna_3\": {}\n  },\n  \"tags\": [\n    {\n      \"id\": 52385391,\n      \"name\": \"tempor nulla Lorem do voluptate\",\n      \"description\": \"incididunt officia sed dolor\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": 30048122,\n      \"name\": \"dolor\",\n      \"description\": \"mollit enim\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"shares\": [\n    {\n      \"componentId\": \"labore laboris\",\n      \"shareToId\": -73454171,\n      \"shareToType\": \"consectetur sit\",\n      \"shareId\": 96507227,\n      \"componentType\": \"exercitation in\",\n      \"shareToDisplayName\": \"cupidatat\",\n      \"shareToLogin\": \"proident eiusm\",\n      \"shareToImsUserId\": \"aliquip\",\n      \"accessLevel\": \"aliqua\"\n    },\n    {\n      \"componentId\": \"sed aliquip sit consectetur ea\",\n      \"shareToId\": -49896736,\n      \"shareToType\": \"sint\",\n      \"shareId\": -94950451,\n      \"componentType\": \"sint nostrud\",\n      \"shareToDisplayName\": \"laboris dolor ut aliqua\",\n      \"shareToLogin\": \"Duis in\",\n      \"shareToImsUserId\": \"dolor proident culpa velit sunt\",\n      \"accessLevel\": \"exercitation incididunt al\"\n    }\n  ],\n  \"deliverySettingsIds\": [\n    \"sit nisi \",\n    \"dolor aliquip\"\n  ],\n  \"scheduledJobId\": \"esse commodo\",\n  \"approved\": true,\n  \"favorite\": true,\n  \"usageSummary\": {\n    \"count\": -41423885,\n    \"mostRecentTimestamp\": \"1945-03-17T09:30:32.905Z\",\n    \"itemId\": \"laboris ut\",\n    \"relevancyScore\": 80730295.40412727,\n    \"companyCount\": -61703324\n  },\n  \"granularity\": \"year\",\n  \"isDisabled\": true,\n  \"alternateVariableNames\": {\n    \"name\": \"dolore commodo tempor minim\",\n    \"baseName\": \"ame\",\n    \"curatedName\": \"sit nostrud\"\n  },\n  \"siteTitle\": \"ut sint\",\n  \"modified\": \"1958-05-18T21:48:12.539Z\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/alerts/validate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"alerts",
										"validate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"result\": \"proident sit\",\n  \"message\": \"est tempor do sed et\"\n}"
						},
						{
							"name": "Internal error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"sint dolore ut\",\n  \"description\": \"cupidatat mollit deserunt\",\n  \"rsid\": \"laboris ut\",\n  \"owner\": {\n    \"id\": -49063939,\n    \"imsUserId\": \"sunt dolor dolore nulla deserunt\"\n  },\n  \"isDeleted\": true,\n  \"migratedIds\": [\n    \"incididu\",\n    \"id aliquip fugiat tempor amet\"\n  ],\n  \"internal\": true,\n  \"deliverySettings\": [\n    {\n      \"id\": \"commodo labore\",\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"dolore\",\n      \"owner\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isDeleted\": true,\n      \"modified\": \"1970-03-29T21:34:44.466Z\"\n    },\n    {\n      \"id\": \"elit Duis ea exercitation\",\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"irure fugiat minim\",\n      \"owner\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isDeleted\": true,\n      \"modified\": \"1967-09-26T01:14:20.002Z\"\n    }\n  ],\n  \"expiration\": \"1988-12-28T01:09:07.421Z\",\n  \"locale\": \"culpa ullamco\",\n  \"type\": \"anim \",\n  \"definition\": {\n    \"eiusmodb4\": {},\n    \"magna_3\": {}\n  },\n  \"tags\": [\n    {\n      \"id\": 52385391,\n      \"name\": \"tempor nulla Lorem do voluptate\",\n      \"description\": \"incididunt officia sed dolor\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": 30048122,\n      \"name\": \"dolor\",\n      \"description\": \"mollit enim\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"shares\": [\n    {\n      \"componentId\": \"labore laboris\",\n      \"shareToId\": -73454171,\n      \"shareToType\": \"consectetur sit\",\n      \"shareId\": 96507227,\n      \"componentType\": \"exercitation in\",\n      \"shareToDisplayName\": \"cupidatat\",\n      \"shareToLogin\": \"proident eiusm\",\n      \"shareToImsUserId\": \"aliquip\",\n      \"accessLevel\": \"aliqua\"\n    },\n    {\n      \"componentId\": \"sed aliquip sit consectetur ea\",\n      \"shareToId\": -49896736,\n      \"shareToType\": \"sint\",\n      \"shareId\": -94950451,\n      \"componentType\": \"sint nostrud\",\n      \"shareToDisplayName\": \"laboris dolor ut aliqua\",\n      \"shareToLogin\": \"Duis in\",\n      \"shareToImsUserId\": \"dolor proident culpa velit sunt\",\n      \"accessLevel\": \"exercitation incididunt al\"\n    }\n  ],\n  \"deliverySettingsIds\": [\n    \"sit nisi \",\n    \"dolor aliquip\"\n  ],\n  \"scheduledJobId\": \"esse commodo\",\n  \"approved\": true,\n  \"favorite\": true,\n  \"usageSummary\": {\n    \"count\": -41423885,\n    \"mostRecentTimestamp\": \"1945-03-17T09:30:32.905Z\",\n    \"itemId\": \"laboris ut\",\n    \"relevancyScore\": 80730295.40412727,\n    \"companyCount\": -61703324\n  },\n  \"granularity\": \"year\",\n  \"isDisabled\": true,\n  \"alternateVariableNames\": {\n    \"name\": \"dolore commodo tempor minim\",\n    \"baseName\": \"ame\",\n    \"curatedName\": \"sit nostrud\"\n  },\n  \"siteTitle\": \"ut sint\",\n  \"modified\": \"1958-05-18T21:48:12.539Z\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/alerts/validate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"alerts",
										"validate"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"result\": \"proident sit\",\n  \"message\": \"est tempor do sed et\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "scheduler",
			"item": [
				{
					"name": "artifacts",
					"item": [
						{
							"name": "pickup/{job Instance Id}/{download Id}",
							"item": [
								{
									"name": "Retrieves an artifact",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/scheduler/artifacts/pickup/:jobInstanceId/:downloadId?artifactType=pdf",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scheduler",
												"artifacts",
												"pickup",
												":jobInstanceId",
												":downloadId"
											],
											"query": [
												{
													"key": "artifactType",
													"value": "pdf",
													"description": "artifactType"
												}
											],
											"variable": [
												{
													"key": "jobInstanceId",
													"value": "aliqua",
													"description": "(Required) job instance id for which the artifact is to be fetched"
												},
												{
													"key": "downloadId",
													"value": "aliqua",
													"description": "(Required) downloadId for which the artifact is to be fetched. This id is only valid for 24 hours after the artifact is generated"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/scheduler/artifacts/pickup/:jobInstanceId/:downloadId?artifactType=pdf",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scheduler",
														"artifacts",
														"pickup",
														":jobInstanceId",
														":downloadId"
													],
													"query": [
														{
															"key": "artifactType",
															"value": "pdf"
														}
													],
													"variable": [
														{
															"key": "jobInstanceId",
															"value": "aliqua",
															"description": "(Required) job instance id for which the artifact is to be fetched"
														},
														{
															"key": "downloadId",
															"value": "aliqua",
															"description": "(Required) downloadId for which the artifact is to be fetched. This id is only valid for 24 hours after the artifact is generated"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieves an artifact",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/scheduler/artifacts/pickup/:jobInstanceId/:downloadId?artifactType=pdf",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scheduler",
												"artifacts",
												"pickup",
												":jobInstanceId",
												":downloadId"
											],
											"query": [
												{
													"key": "artifactType",
													"value": "pdf",
													"description": "artifactType"
												}
											],
											"variable": [
												{
													"key": "jobInstanceId",
													"value": "aliqua",
													"description": "(Required) job instance id for which the artifact is to be fetched"
												},
												{
													"key": "downloadId",
													"value": "aliqua",
													"description": "(Required) downloadId for which the artifact is to be fetched. This id is only valid for 24 hours after the artifact is generated"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/scheduler/artifacts/pickup/:jobInstanceId/:downloadId?artifactType=pdf",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scheduler",
														"artifacts",
														"pickup",
														":jobInstanceId",
														":downloadId"
													],
													"query": [
														{
															"key": "artifactType",
															"value": "pdf"
														}
													],
													"variable": [
														{
															"key": "jobInstanceId",
															"value": "aliqua",
															"description": "(Required) job instance id for which the artifact is to be fetched"
														},
														{
															"key": "downloadId",
															"value": "aliqua",
															"description": "(Required) downloadId for which the artifact is to be fetched. This id is only valid for 24 hours after the artifact is generated"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "{job Instance Id}",
							"item": [
								{
									"name": "Retrieves an artifact",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/scheduler/artifacts/:jobInstanceId?artifactType=pdf",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scheduler",
												"artifacts",
												":jobInstanceId"
											],
											"query": [
												{
													"key": "artifactType",
													"value": "pdf",
													"description": "artifactType"
												}
											],
											"variable": [
												{
													"key": "jobInstanceId",
													"value": "aliqua",
													"description": "(Required) job instance id for which the artifact is to be fetched"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/scheduler/artifacts/:jobInstanceId?artifactType=pdf",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scheduler",
														"artifacts",
														":jobInstanceId"
													],
													"query": [
														{
															"key": "artifactType",
															"value": "pdf"
														}
													],
													"variable": [
														{
															"key": "jobInstanceId",
															"value": "aliqua",
															"description": "(Required) job instance id for which the artifact is to be fetched"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieves an artifact",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/scheduler/artifacts/:jobInstanceId?artifactType=pdf",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scheduler",
												"artifacts",
												":jobInstanceId"
											],
											"query": [
												{
													"key": "artifactType",
													"value": "pdf",
													"description": "artifactType"
												}
											],
											"variable": [
												{
													"key": "jobInstanceId",
													"value": "aliqua",
													"description": "(Required) job instance id for which the artifact is to be fetched"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/scheduler/artifacts/:jobInstanceId?artifactType=pdf",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scheduler",
														"artifacts",
														":jobInstanceId"
													],
													"query": [
														{
															"key": "artifactType",
															"value": "pdf"
														}
													],
													"variable": [
														{
															"key": "jobInstanceId",
															"value": "aliqua",
															"description": "(Required) job instance id for which the artifact is to be fetched"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "deliverysettings",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Retrieves a delivery setting",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/scheduler/deliverysettings/:id?expansion=scheduledUsersFullNames,isDeleted&useCache=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scheduler",
												"deliverysettings",
												":id"
											],
											"query": [
												{
													"key": "expansion",
													"value": "scheduledUsersFullNames,isDeleted",
													"description": "Comma-delimited list of additional delivery settings metadata fields to include on response."
												},
												{
													"key": "useCache",
													"value": "true",
													"description": "Use caching for faster requests"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The id of the delivery settings to return"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/scheduler/deliverysettings/:id?expansion=modified,scheduledUsersFullNames&useCache=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scheduler",
														"deliverysettings",
														":id"
													],
													"query": [
														{
															"key": "expansion",
															"value": "modified,scheduledUsersFullNames"
														},
														{
															"key": "useCache",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The id of the delivery settings to return"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"proident ea in\",\n  \"definition\": {},\n  \"name\": \"pariatur esse\",\n  \"owner\": {\n    \"id\": 19695662,\n    \"imsUserId\": \"sint est ipsum\"\n  },\n  \"isDeleted\": false,\n  \"modified\": \"1945-04-07T11:59:19.779Z\"\n}"
										}
									]
								},
								{
									"name": "Updates a delivery setting",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"proident ea in\",\n  \"definition\": {},\n  \"name\": \"pariatur esse\",\n  \"owner\": {\n    \"id\": 19695662,\n    \"imsUserId\": \"sint est ipsum\"\n  },\n  \"isDeleted\": false,\n  \"modified\": \"1945-04-07T11:59:19.779Z\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/scheduler/deliverysettings/:id?expansion=scheduledUsersFullNames,isDeleted",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scheduler",
												"deliverysettings",
												":id"
											],
											"query": [
												{
													"key": "expansion",
													"value": "scheduledUsersFullNames,isDeleted",
													"description": "Comma-delimited list of additional delivery settings metadata fields to include on response."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The id of the delivery settings to return"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/scheduler/deliverysettings/:id?expansion=modified,scheduledUsersFullNames",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scheduler",
														"deliverysettings",
														":id"
													],
													"query": [
														{
															"key": "expansion",
															"value": "modified,scheduledUsersFullNames"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The id of the delivery settings to return"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"proident ea in\",\n  \"definition\": {},\n  \"name\": \"pariatur esse\",\n  \"owner\": {\n    \"id\": 19695662,\n    \"imsUserId\": \"sint est ipsum\"\n  },\n  \"isDeleted\": false,\n  \"modified\": \"1945-04-07T11:59:19.779Z\"\n}"
										}
									]
								},
								{
									"name": "Removes a delivery setting",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/scheduler/deliverysettings/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scheduler",
												"deliverysettings",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The id of the delivery settings to return"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/scheduler/deliverysettings/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scheduler",
														"deliverysettings",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The id of the delivery settings to return"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"proident ea in\",\n  \"definition\": {},\n  \"name\": \"pariatur esse\",\n  \"owner\": {\n    \"id\": 19695662,\n    \"imsUserId\": \"sint est ipsum\"\n  },\n  \"isDeleted\": false,\n  \"modified\": \"1945-04-07T11:59:19.779Z\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Retrieves paginated list of delivery settings",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/scheduler/deliverysettings?expansion=scheduledUsersFullNames,isDeleted&ownerId=43407647&imsUserId=aliqua&filterByIds=aliqua&filterByModifiedAfter=aliqua&includeType=deleted,deleted&limit=10&page=0&sortDirection=ASC&sortProperty=id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scheduler",
										"deliverysettings"
									],
									"query": [
										{
											"key": "expansion",
											"value": "scheduledUsersFullNames,isDeleted",
											"description": "Comma-delimited list of additional delivery settings metadata fields to include on response."
										},
										{
											"key": "ownerId",
											"value": "43407647",
											"description": "Filter list to only include delivery settings owned by the specified loginId. This will be ORed with the filterByIds parameter. This will be used only for Analytics and ignored for CJA."
										},
										{
											"key": "imsUserId",
											"value": "aliqua",
											"description": "Filter list to only include delivery settings owned by the specified imsUserId. This will be ORed with the filterByIds parameter. This will be used only for CJA and ignored for Analytics."
										},
										{
											"key": "filterByIds",
											"value": "aliqua",
											"description": "Filter list to only include delivery settings in the specified list (comma-delimited list of IDs). This is ORed with the ownerId parameter"
										},
										{
											"key": "filterByModifiedAfter",
											"value": "aliqua",
											"description": "Filter list to only include calculated metrics modified since this date (ISO8601 format)"
										},
										{
											"key": "includeType",
											"value": "deleted,deleted",
											"description": "Include delivery settings with the following parameters in the return list."
										},
										{
											"key": "limit",
											"value": "10",
											"description": "Number of results per page"
										},
										{
											"key": "page",
											"value": "0",
											"description": "Page number (base 0 - first page is \"0\")"
										},
										{
											"key": "sortDirection",
											"value": "ASC",
											"description": "Sort direction (ASC or DESC"
										},
										{
											"key": "sortProperty",
											"value": "id",
											"description": "Property to sort by (only modified_date is currently allowed)"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/scheduler/deliverysettings?expansion=modified,scheduledUsersFullNames&ownerId=43407647&imsUserId=aliqua&filterByIds=aliqua&filterByModifiedAfter=aliqua&includeType=deleted,deleted&limit=10&page=0&sortDirection=ASC&sortProperty=id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scheduler",
												"deliverysettings"
											],
											"query": [
												{
													"key": "expansion",
													"value": "modified,scheduledUsersFullNames"
												},
												{
													"key": "ownerId",
													"value": "43407647"
												},
												{
													"key": "imsUserId",
													"value": "aliqua"
												},
												{
													"key": "filterByIds",
													"value": "aliqua"
												},
												{
													"key": "filterByModifiedAfter",
													"value": "aliqua"
												},
												{
													"key": "includeType",
													"value": "deleted,deleted"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "sortDirection",
													"value": "ASC"
												},
												{
													"key": "sortProperty",
													"value": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"proident ea in\",\n  \"definition\": {},\n  \"name\": \"pariatur esse\",\n  \"owner\": {\n    \"id\": 19695662,\n    \"imsUserId\": \"sint est ipsum\"\n  },\n  \"isDeleted\": false,\n  \"modified\": \"1945-04-07T11:59:19.779Z\"\n}"
								}
							]
						},
						{
							"name": "Creates a delivery setting",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"proident ea in\",\n  \"definition\": {},\n  \"name\": \"pariatur esse\",\n  \"owner\": {\n    \"id\": 19695662,\n    \"imsUserId\": \"sint est ipsum\"\n  },\n  \"isDeleted\": false,\n  \"modified\": \"1945-04-07T11:59:19.779Z\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/scheduler/deliverysettings?expansion=scheduledUsersFullNames,isDeleted",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scheduler",
										"deliverysettings"
									],
									"query": [
										{
											"key": "expansion",
											"value": "scheduledUsersFullNames,isDeleted",
											"description": "Comma-delimited list of additional delivery settings metadata fields to include on response."
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/scheduler/deliverysettings?expansion=modified,scheduledUsersFullNames",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scheduler",
												"deliverysettings"
											],
											"query": [
												{
													"key": "expansion",
													"value": "modified,scheduledUsersFullNames"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"proident ea in\",\n  \"definition\": {},\n  \"name\": \"pariatur esse\",\n  \"owner\": {\n    \"id\": 19695662,\n    \"imsUserId\": \"sint est ipsum\"\n  },\n  \"isDeleted\": false,\n  \"modified\": \"1945-04-07T11:59:19.779Z\"\n}"
								}
							]
						},
						{
							"name": "Validate phone numbers and email addresses",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"proident ea in\",\n  \"definition\": {},\n  \"name\": \"pariatur esse\",\n  \"owner\": {\n    \"id\": 19695662,\n    \"imsUserId\": \"sint est ipsum\"\n  },\n  \"isDeleted\": false,\n  \"modified\": \"1945-04-07T11:59:19.779Z\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/scheduler/deliverysettings/validate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scheduler",
										"deliverysettings",
										"validate"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/scheduler/deliverysettings/validate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scheduler",
												"deliverysettings",
												"validate"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"Lorem_6\": {},\n  \"consectetur1b7\": {}\n}"
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/scheduler/deliverysettings/validate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scheduler",
												"deliverysettings",
												"validate"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"io_error\",\n  \"errorDescription\": \"reprehenderit sit aliqua\",\n  \"errorId\": \"magna\",\n  \"errorDetails\": {\n    \"velitf00\": {}\n  },\n  \"rootCauseService\": \"eu tempor ullamco ipsum\"\n}"
								},
								{
									"name": "Internal error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/scheduler/deliverysettings/validate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scheduler",
												"deliverysettings",
												"validate"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"io_error\",\n  \"errorDescription\": \"reprehenderit sit aliqua\",\n  \"errorId\": \"magna\",\n  \"errorDetails\": {\n    \"velitf00\": {}\n  },\n  \"rootCauseService\": \"eu tempor ullamco ipsum\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "jobinstances",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Returns the specified job instance.  This looks for the job in the active jobs and then falls back to the completed jobs.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/scheduler/jobinstances/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scheduler",
												"jobinstances",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) Job instance Id of the job"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/scheduler/jobinstances/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scheduler",
														"jobinstances",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) Job instance Id of the job"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"instanceId\": \"cupidatat fugiat\",\n  \"downloadId\": \"laboris cupidatat quis\",\n  \"startYmdt\": \"2007-12-28T16:09:17.235Z\",\n  \"endYmdt\": \"1971-06-25T08:30:07.055Z\",\n  \"scheduledFireTime\": \"1980-03-17T04:10:07.944Z\",\n  \"history\": [\n    {\n      \"reprehenderit7\": {},\n      \"reprehenderit_46\": {}\n    },\n    {\n      \"veniam_31_\": {},\n      \"deserunt_3_\": {},\n      \"do9\": {}\n    }\n  ],\n  \"job\": {\n    \"id\": \"exercitation quis\",\n    \"globalCompanyId\": \"ipsum Duis enim\",\n    \"description\": \"tempor non sed\",\n    \"tasks\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"schedule\": {\n      \"esse_48\": {},\n      \"quis_ec\": {}\n    },\n    \"owner\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"imsUserId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"version\": \"labore magna aute\",\n    \"locale\": \"laboris eiusmod in ea\",\n    \"debugAttachArtifacts\": true,\n    \"disabled\": true,\n    \"failureReason\": \"NO_DELIVERIES\",\n    \"lastFailedJobInstance\": \"nostrud quis sed est commodo\",\n    \"solution\": \"RECOMMENDATIONS\",\n    \"rsid\": \"labore ipsum proident dolor\",\n    \"deliverySettingIds\": [\n      \"aliqua eu anim ipsum\",\n      \"exercitation aliquip\"\n    ],\n    \"modified\": \"1962-03-29T20:22:04.452Z\"\n  },\n  \"recreatedFromId\": \"aute cup\",\n  \"abortRequestedBy\": \"non deserunt cill\",\n  \"jobFailed\": false,\n  \"processedDeliveries\": true,\n  \"sentDeliveries\": true,\n  \"failureReason\": \"UNKNOWN\",\n  \"owner\": {\n    \"id\": -4532654,\n    \"imsUserId\": \"sint nostrud esse enim\"\n  },\n  \"rsid\": \"ad labore\"\n}"
										},
										{
											"name": "Unexpected error; job instance get failed for unknown error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/scheduler/jobinstances/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scheduler",
														"jobinstances",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) Job instance Id of the job"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Requests that the specified job instance be aborted.  Any steps in the process that have started will complete",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/scheduler/jobinstances/:id/abortrequest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scheduler",
												"jobinstances",
												":id",
												"abortrequest"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) Job instance Id of the job instance that is to be cancelled"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/scheduler/jobinstances/:id/abortrequest",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scheduler",
														"jobinstances",
														":id",
														"abortrequest"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) Job instance Id of the job instance that is to be cancelled"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"instanceId\": \"voluptate Duis reprehenderit cupidatat eiusmod\",\n  \"downloadId\": \"deserunt dolor\",\n  \"startYmdt\": \"1999-08-30T15:01:23.235Z\",\n  \"endYmdt\": \"1993-08-03T15:39:27.494Z\",\n  \"scheduledFireTime\": \"1947-05-11T13:47:31.671Z\",\n  \"history\": [\n    {\n      \"quis_10\": {},\n      \"proident_9\": {},\n      \"laboruma4b\": {},\n      \"pariatur_80b\": {}\n    },\n    {\n      \"officia_ed\": {}\n    }\n  ],\n  \"job\": {\n    \"id\": \"anim laboris quis proident id\",\n    \"globalCompanyId\": \"occaecat dolore sed est\",\n    \"description\": \"laboris adipisicing t\",\n    \"tasks\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"schedule\": {\n      \"Duis31\": {},\n      \"qui_3\": {},\n      \"minim_d7\": {}\n    },\n    \"owner\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"imsUserId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"version\": \"deserunt non tempor\",\n    \"locale\": \"in mollit dolor\",\n    \"debugAttachArtifacts\": true,\n    \"disabled\": true,\n    \"failureReason\": \"NO_DELIVERIES\",\n    \"lastFailedJobInstance\": \"ex\",\n    \"solution\": \"WORKSPACE\",\n    \"rsid\": \"veniam non\",\n    \"deliverySettingIds\": [\n      \"culpa\",\n      \"sit\"\n    ],\n    \"modified\": \"1952-10-15T19:48:56.313Z\"\n  },\n  \"recreatedFromId\": \"adipisicing in\",\n  \"abortRequestedBy\": \"Ut sunt quis elit nostrud\",\n  \"jobFailed\": true,\n  \"processedDeliveries\": false,\n  \"sentDeliveries\": false,\n  \"failureReason\": \"INITIALIZATION_ERROR\",\n  \"owner\": {\n    \"id\": -11093350,\n    \"imsUserId\": \"sunt veniam Duis\"\n  },\n  \"rsid\": \"ad sunt\"\n}"
										},
										{
											"name": "Unexpected error; job instance abort failed for unknown error",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/scheduler/jobinstances/:id/abortrequest",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scheduler",
														"jobinstances",
														":id",
														"abortrequest"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) Job instance Id of the job instance that is to be cancelled"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Retrieves paginated list of job instances",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/scheduler/jobinstances?jobId=aliqua&jobInstanceId=aliqua&ownerId=43407647&imsUserId=aliqua&rsid=aliqua&startYmdt=aliqua&endYmdt=aliqua&locale=en_US&solutions=WORKSPACE,WORKSPACE&includeType=inProgress,inProgress&limit=10&page=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scheduler",
										"jobinstances"
									],
									"query": [
										{
											"key": "jobId",
											"value": "aliqua",
											"description": "Filter list to only include job Instances by job Id"
										},
										{
											"key": "jobInstanceId",
											"value": "aliqua",
											"description": "Filter list to only include job Instances by job instance Id"
										},
										{
											"key": "ownerId",
											"value": "43407647",
											"description": "Filter list to only include job Instances owned by the specified loginId (This will be used only for Analytics and ignored for CJA.)"
										},
										{
											"key": "imsUserId",
											"value": "aliqua",
											"description": "Filter list to only include job Instances owned by the specified imsUserId (This will be used only for CJA and ignored for Analytics.)"
										},
										{
											"key": "rsid",
											"value": "aliqua",
											"description": "Filter list to only include job Instances tied to specified RSID "
										},
										{
											"key": "startYmdt",
											"value": "aliqua",
											"description": "Filter list to only include job Instances with specified start time "
										},
										{
											"key": "endYmdt",
											"value": "aliqua",
											"description": "Filter list to only include job Instances with specified end time "
										},
										{
											"key": "locale",
											"value": "en_US",
											"description": "Locale"
										},
										{
											"key": "solutions",
											"value": "WORKSPACE,WORKSPACE",
											"description": "Solution types to include"
										},
										{
											"key": "includeType",
											"value": "inProgress,inProgress",
											"description": "(Required) Include job History with one of these statuses. In order to get a response back, you need to select one or more includeTypes"
										},
										{
											"key": "limit",
											"value": "10",
											"description": "Number of results per page"
										},
										{
											"key": "page",
											"value": "0",
											"description": "Page number (base 0 - first page is \"0\")"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/scheduler/jobinstances?jobId=aliqua&jobInstanceId=aliqua&ownerId=43407647&imsUserId=aliqua&rsid=aliqua&startYmdt=aliqua&endYmdt=aliqua&locale=en_US&solutions=ALERTS,WORKSPACE&includeType=failedCompleted,inProgress&limit=10&page=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scheduler",
												"jobinstances"
											],
											"query": [
												{
													"key": "jobId",
													"value": "aliqua"
												},
												{
													"key": "jobInstanceId",
													"value": "aliqua"
												},
												{
													"key": "ownerId",
													"value": "43407647"
												},
												{
													"key": "imsUserId",
													"value": "aliqua"
												},
												{
													"key": "rsid",
													"value": "aliqua"
												},
												{
													"key": "startYmdt",
													"value": "aliqua"
												},
												{
													"key": "endYmdt",
													"value": "aliqua"
												},
												{
													"key": "locale",
													"value": "en_US"
												},
												{
													"key": "solutions",
													"value": "ALERTS,WORKSPACE"
												},
												{
													"key": "includeType",
													"value": "failedCompleted,inProgress"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "0"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"totalElements\": 1081237,\n  \"totalPages\": -88268639,\n  \"sort\": {\n    \"sorted\": false,\n    \"unsorted\": true,\n    \"empty\": true\n  },\n  \"first\": false,\n  \"last\": true,\n  \"number\": -42583214,\n  \"numberOfElements\": 73024132,\n  \"pageable\": {\n    \"sort\": {\n      \"sorted\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"unsorted\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"empty\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"pageSize\": -99391921,\n    \"pageNumber\": -67768054,\n    \"paged\": true,\n    \"unpaged\": true,\n    \"offset\": 94459458\n  },\n  \"size\": -44008485,\n  \"empty\": false\n}"
								},
								{
									"name": "Unexpected error; jobs history retrieval failed for unknown error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/scheduler/jobinstances?jobId=aliqua&jobInstanceId=aliqua&ownerId=43407647&imsUserId=aliqua&rsid=aliqua&startYmdt=aliqua&endYmdt=aliqua&locale=en_US&solutions=ALERTS,WORKSPACE&includeType=failedCompleted,inProgress&limit=10&page=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scheduler",
												"jobinstances"
											],
											"query": [
												{
													"key": "jobId",
													"value": "aliqua"
												},
												{
													"key": "jobInstanceId",
													"value": "aliqua"
												},
												{
													"key": "ownerId",
													"value": "43407647"
												},
												{
													"key": "imsUserId",
													"value": "aliqua"
												},
												{
													"key": "rsid",
													"value": "aliqua"
												},
												{
													"key": "startYmdt",
													"value": "aliqua"
												},
												{
													"key": "endYmdt",
													"value": "aliqua"
												},
												{
													"key": "locale",
													"value": "en_US"
												},
												{
													"key": "solutions",
													"value": "ALERTS,WORKSPACE"
												},
												{
													"key": "includeType",
													"value": "failedCompleted,inProgress"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "0"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"io_error\",\n  \"errorDescription\": \"reprehenderit sit aliqua\",\n  \"errorId\": \"magna\",\n  \"errorDetails\": {\n    \"velitf00\": {}\n  },\n  \"rootCauseService\": \"eu tempor ullamco ipsum\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "scheduledjobs",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Retrives a scheduled job by Id",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/scheduler/scheduledjobs/:id?expansion=deliverySetting,favorite&locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scheduler",
												"scheduledjobs",
												":id"
											],
											"query": [
												{
													"key": "expansion",
													"value": "deliverySetting,favorite",
													"description": "Comma-delimited list of additional job metadata fields to include on response."
												},
												{
													"key": "locale",
													"value": "en_US",
													"description": "Locale"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The Id of the scheduled job to be retrieved"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/scheduler/scheduledjobs/:id?expansion=isDeleted,deliverySetting&locale=en_US",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scheduler",
														"scheduledjobs",
														":id"
													],
													"query": [
														{
															"key": "expansion",
															"value": "isDeleted,deliverySetting"
														},
														{
															"key": "locale",
															"value": "en_US"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The Id of the scheduled job to be retrieved"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"dolore labore\",\n  \"name\": \"incididunt culpa reprehenderit exercitation\",\n  \"description\": \"in fugiat\",\n  \"rsid\": \"id aliquip laborum amet\",\n  \"reportSuiteName\": \"sunt sint reprehenderit veniam\",\n  \"owner\": {\n    \"id\": 40719595,\n    \"imsUserId\": \"ea esse Excepteur\"\n  },\n  \"isDeleted\": true,\n  \"migratedIds\": [\n    \"Lorem \",\n    \"sit qui\"\n  ],\n  \"internal\": true,\n  \"scheduledItemName\": \"sed eu\",\n  \"failureReasonMessage\": \"Ut irure quis ut nulla\",\n  \"complexity\": {\n    \"adipisicing_4\": {}\n  },\n  \"version\": \"reprehenderit\",\n  \"locale\": \"sed eu\",\n  \"schedule\": {\n    \"do8f\": {},\n    \"sint_272\": {}\n  },\n  \"tags\": [\n    {\n      \"id\": -62367441,\n      \"name\": \"elit ut consectetur magna\",\n      \"description\": \"sunt aliqua\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": 50785381,\n      \"name\": \"occaecat dolore\",\n      \"description\": \"culpa incididunt sed enim\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"failureReason\": \"UNKNOWN\",\n  \"tasks\": [\n    {\n      \"requestParams\": {\n        \"qui_8_3\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"eu6\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"artifactType\": \"l\",\n      \"deliverySetting\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tasktype\": \"culpa sint irure nos\",\n      \"tasksubtype\": \"officia adipisicing\",\n      \"type\": \"adipisicing nostrud consequat\",\n      \"subType\": \"consectetur velit enim\",\n      \"deliverySettingId\": \"voluptate eu irure\",\n      \"attemptnum\": -82469952\n    },\n    {\n      \"requestParams\": {\n        \"Duis_8\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"artifactType\": \"dolor dolore\",\n      \"deliverySetting\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tasktype\": \"enim Lorem\",\n      \"tasksubtype\": \"o\",\n      \"type\": \"id\",\n      \"subType\": \"enim deserunt reprehenderit\",\n      \"deliverySettingId\": \"cillum proident\",\n      \"attemptnum\": 81004290\n    }\n  ],\n  \"globalCompanyId\": \"voluptate ipsum\",\n  \"shares\": [\n    {\n      \"componentId\": \"laborum\",\n      \"shareToId\": -1734228,\n      \"shareToType\": \"elit mollit eu nisi ullamco\",\n      \"shareId\": 35036314,\n      \"componentType\": \"non\",\n      \"shareToDisplayName\": \"Ut enim proident occaecat\",\n      \"shareToLogin\": \"Excepteur aliquip\",\n      \"shareToImsUserId\": \"proident reprehenderit eu\",\n      \"accessLevel\": \"pariatur magna\"\n    },\n    {\n      \"componentId\": \"ea\",\n      \"shareToId\": -68515920,\n      \"shareToType\": \"dolore irure\",\n      \"shareId\": 1852268,\n      \"componentType\": \"id et\",\n      \"shareToDisplayName\": \"minim eu\",\n      \"shareToLogin\": \"commodo ad sit ulla\",\n      \"shareToImsUserId\": \"sit amet elit proident\",\n      \"accessLevel\": \"ea fugiat\"\n    }\n  ],\n  \"approved\": false,\n  \"favorite\": true,\n  \"usageSummary\": {\n    \"count\": 98681571,\n    \"mostRecentTimestamp\": \"1973-07-31T09:45:04.137Z\",\n    \"itemId\": \"tempor repreh\",\n    \"relevancyScore\": -30874100.527518377,\n    \"companyCount\": 72384085\n  },\n  \"debugAttachArtifacts\": true,\n  \"alternateVariableNames\": {\n    \"name\": \"dolor ut cupidatat\",\n    \"baseName\": \"et nisi culpa exercitation ipsum\",\n    \"curatedName\": \"dolor ipsum irure Lorem\"\n  },\n  \"siteTitle\": \"aliqua ullamco anim\",\n  \"modified\": \"1963-06-19T02:12:39.237Z\"\n}"
										},
										{
											"name": "Internal Error, update of scheduled job failed.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/scheduler/scheduledjobs/:id?expansion=isDeleted,deliverySetting&locale=en_US",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scheduler",
														"scheduledjobs",
														":id"
													],
													"query": [
														{
															"key": "expansion",
															"value": "isDeleted,deliverySetting"
														},
														{
															"key": "locale",
															"value": "en_US"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The Id of the scheduled job to be retrieved"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"io_error\",\n  \"errorDescription\": \"reprehenderit sit aliqua\",\n  \"errorId\": \"magna\",\n  \"errorDetails\": {\n    \"velitf00\": {}\n  },\n  \"rootCauseService\": \"eu tempor ullamco ipsum\"\n}"
										}
									]
								},
								{
									"name": "Update a scheduled job by Id",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"est ullamco\",\n  \"description\": \"cupidatat\",\n  \"rsid\": \"Lorem do id\",\n  \"owner\": {\n    \"id\": 78565633,\n    \"imsUserId\": \"dolore in elit Excepteur anim\"\n  },\n  \"isDeleted\": true,\n  \"migratedIds\": [\n    \"ullamco\",\n    \"nisi nostrud anim exercitation aute\"\n  ],\n  \"internal\": true,\n  \"scheduledItemName\": \"Lorem dolore occaecat\",\n  \"failureReasonMessage\": \"nostrud incididunt\",\n  \"complexity\": {\n    \"cupidatat8f_\": {},\n    \"dolore_833\": {}\n  },\n  \"version\": \"exercitation Duis velit\",\n  \"locale\": \"eiusmod laborum aute dolor\",\n  \"schedule\": {\n    \"consectetur6\": {},\n    \"est_f\": {}\n  },\n  \"tags\": [\n    {\n      \"id\": -61500452,\n      \"name\": \"Ut incididu\",\n      \"description\": \"id aliquip \",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": 54032368,\n      \"name\": \"fugiat voluptate\",\n      \"description\": \"Lorem ipsum\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"failureReason\": \"INITIALIZATION_ERROR\",\n  \"tasks\": [\n    {\n      \"requestParams\": {\n        \"ipsum_16\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"artifactType\": \"exercitati\",\n      \"deliverySetting\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tasktype\": \"ut est id voluptate\",\n      \"tasksubtype\": \"consequat laborum\",\n      \"type\": \"quis sit\",\n      \"subType\": \"deserunt minim mollit ullamco\",\n      \"deliverySettingId\": \"id voluptate\",\n      \"attemptnum\": -78140918\n    },\n    {\n      \"requestParams\": {\n        \"aliquaf\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"occaecatc0\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"deserunt_b\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"artifactType\": \"proident labore commodo\",\n      \"deliverySetting\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tasktype\": \"dolore ut\",\n      \"tasksubtype\": \"eiusmod elit quis\",\n      \"type\": \"ut consequat elit mollit\",\n      \"subType\": \"velit cillum voluptate\",\n      \"deliverySettingId\": \"proident\",\n      \"attemptnum\": 94800818\n    }\n  ],\n  \"globalCompanyId\": \"non voluptate sint\",\n  \"shares\": [\n    {\n      \"componentId\": \"cupidatat magna Lorem culpa\",\n      \"shareToId\": -65849284,\n      \"shareToType\": \"pariatur aliqua p\",\n      \"shareId\": -65810003,\n      \"componentType\": \"labore officia ut\",\n      \"shareToDisplayName\": \"in et in do\",\n      \"shareToLogin\": \"laboris enim\",\n      \"shareToImsUserId\": \"sit exercitation\",\n      \"accessLevel\": \"commodo non qui pariatur\"\n    },\n    {\n      \"componentId\": \"consectetur minim reprehenderit\",\n      \"shareToId\": 4756583,\n      \"shareToType\": \"consequat\",\n      \"shareId\": 83894391,\n      \"componentType\": \"sit quis est occaecat proident\",\n      \"shareToDisplayName\": \"nostrud\",\n      \"shareToLogin\": \"pariatur nisi\",\n      \"shareToImsUserId\": \"Duis proident tempor\",\n      \"accessLevel\": \"deserunt dolor\"\n    }\n  ],\n  \"approved\": false,\n  \"favorite\": true,\n  \"usageSummary\": {\n    \"count\": 15135006,\n    \"mostRecentTimestamp\": \"1963-11-19T09:53:51.530Z\",\n    \"itemId\": \"magna do qui\",\n    \"relevancyScore\": 28442229.280470148,\n    \"companyCount\": -28844103\n  },\n  \"debugAttachArtifacts\": true,\n  \"alternateVariableNames\": {\n    \"name\": \"cillum velit magna\",\n    \"baseName\": \"irure sint ullamco\",\n    \"curatedName\": \"irure\"\n  },\n  \"siteTitle\": \"dolor ut\",\n  \"modified\": \"1969-05-17T12:31:40.021Z\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/scheduler/scheduledjobs/:id?expansion=deliverySetting,favorite&locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scheduler",
												"scheduledjobs",
												":id"
											],
											"query": [
												{
													"key": "expansion",
													"value": "deliverySetting,favorite",
													"description": "Comma-delimited list of additional job metadata fields to include on response."
												},
												{
													"key": "locale",
													"value": "en_US",
													"description": "Locale"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The Id of the scheduled job to be updated"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/scheduler/scheduledjobs/:id?expansion=isDeleted,deliverySetting&locale=en_US",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scheduler",
														"scheduledjobs",
														":id"
													],
													"query": [
														{
															"key": "expansion",
															"value": "isDeleted,deliverySetting"
														},
														{
															"key": "locale",
															"value": "en_US"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The Id of the scheduled job to be updated"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"dolore labore\",\n  \"name\": \"incididunt culpa reprehenderit exercitation\",\n  \"description\": \"in fugiat\",\n  \"rsid\": \"id aliquip laborum amet\",\n  \"reportSuiteName\": \"sunt sint reprehenderit veniam\",\n  \"owner\": {\n    \"id\": 40719595,\n    \"imsUserId\": \"ea esse Excepteur\"\n  },\n  \"isDeleted\": true,\n  \"migratedIds\": [\n    \"Lorem \",\n    \"sit qui\"\n  ],\n  \"internal\": true,\n  \"scheduledItemName\": \"sed eu\",\n  \"failureReasonMessage\": \"Ut irure quis ut nulla\",\n  \"complexity\": {\n    \"adipisicing_4\": {}\n  },\n  \"version\": \"reprehenderit\",\n  \"locale\": \"sed eu\",\n  \"schedule\": {\n    \"do8f\": {},\n    \"sint_272\": {}\n  },\n  \"tags\": [\n    {\n      \"id\": -62367441,\n      \"name\": \"elit ut consectetur magna\",\n      \"description\": \"sunt aliqua\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": 50785381,\n      \"name\": \"occaecat dolore\",\n      \"description\": \"culpa incididunt sed enim\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"failureReason\": \"UNKNOWN\",\n  \"tasks\": [\n    {\n      \"requestParams\": {\n        \"qui_8_3\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"eu6\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"artifactType\": \"l\",\n      \"deliverySetting\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tasktype\": \"culpa sint irure nos\",\n      \"tasksubtype\": \"officia adipisicing\",\n      \"type\": \"adipisicing nostrud consequat\",\n      \"subType\": \"consectetur velit enim\",\n      \"deliverySettingId\": \"voluptate eu irure\",\n      \"attemptnum\": -82469952\n    },\n    {\n      \"requestParams\": {\n        \"Duis_8\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"artifactType\": \"dolor dolore\",\n      \"deliverySetting\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tasktype\": \"enim Lorem\",\n      \"tasksubtype\": \"o\",\n      \"type\": \"id\",\n      \"subType\": \"enim deserunt reprehenderit\",\n      \"deliverySettingId\": \"cillum proident\",\n      \"attemptnum\": 81004290\n    }\n  ],\n  \"globalCompanyId\": \"voluptate ipsum\",\n  \"shares\": [\n    {\n      \"componentId\": \"laborum\",\n      \"shareToId\": -1734228,\n      \"shareToType\": \"elit mollit eu nisi ullamco\",\n      \"shareId\": 35036314,\n      \"componentType\": \"non\",\n      \"shareToDisplayName\": \"Ut enim proident occaecat\",\n      \"shareToLogin\": \"Excepteur aliquip\",\n      \"shareToImsUserId\": \"proident reprehenderit eu\",\n      \"accessLevel\": \"pariatur magna\"\n    },\n    {\n      \"componentId\": \"ea\",\n      \"shareToId\": -68515920,\n      \"shareToType\": \"dolore irure\",\n      \"shareId\": 1852268,\n      \"componentType\": \"id et\",\n      \"shareToDisplayName\": \"minim eu\",\n      \"shareToLogin\": \"commodo ad sit ulla\",\n      \"shareToImsUserId\": \"sit amet elit proident\",\n      \"accessLevel\": \"ea fugiat\"\n    }\n  ],\n  \"approved\": false,\n  \"favorite\": true,\n  \"usageSummary\": {\n    \"count\": 98681571,\n    \"mostRecentTimestamp\": \"1973-07-31T09:45:04.137Z\",\n    \"itemId\": \"tempor repreh\",\n    \"relevancyScore\": -30874100.527518377,\n    \"companyCount\": 72384085\n  },\n  \"debugAttachArtifacts\": true,\n  \"alternateVariableNames\": {\n    \"name\": \"dolor ut cupidatat\",\n    \"baseName\": \"et nisi culpa exercitation ipsum\",\n    \"curatedName\": \"dolor ipsum irure Lorem\"\n  },\n  \"siteTitle\": \"aliqua ullamco anim\",\n  \"modified\": \"1963-06-19T02:12:39.237Z\"\n}"
										},
										{
											"name": "Internal Error, update of scheduled job failed.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/scheduler/scheduledjobs/:id?expansion=isDeleted,deliverySetting&locale=en_US",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scheduler",
														"scheduledjobs",
														":id"
													],
													"query": [
														{
															"key": "expansion",
															"value": "isDeleted,deliverySetting"
														},
														{
															"key": "locale",
															"value": "en_US"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The Id of the scheduled job to be updated"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"io_error\",\n  \"errorDescription\": \"reprehenderit sit aliqua\",\n  \"errorId\": \"magna\",\n  \"errorDetails\": {\n    \"velitf00\": {}\n  },\n  \"rootCauseService\": \"eu tempor ullamco ipsum\"\n}"
										}
									]
								},
								{
									"name": "Delete a scheduled job by Id and companyId",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/scheduler/scheduledjobs/:id?locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scheduler",
												"scheduledjobs",
												":id"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US",
													"description": "Locale"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The Id of the scheduled job to be deleted"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/scheduler/scheduledjobs/:id?locale=en_US",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scheduler",
														"scheduledjobs",
														":id"
													],
													"query": [
														{
															"key": "locale",
															"value": "en_US"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The Id of the scheduled job to be deleted"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"result\": \"proident sit\",\n  \"message\": \"est tempor do sed et\"\n}"
										},
										{
											"name": "Internal Error, delete scheduled job failed.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/scheduler/scheduledjobs/:id?locale=en_US",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scheduler",
														"scheduledjobs",
														":id"
													],
													"query": [
														{
															"key": "locale",
															"value": "en_US"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The Id of the scheduled job to be deleted"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"io_error\",\n  \"errorDescription\": \"reprehenderit sit aliqua\",\n  \"errorId\": \"magna\",\n  \"errorDetails\": {\n    \"velitf00\": {}\n  },\n  \"rootCauseService\": \"eu tempor ullamco ipsum\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Retrieves paginated list of scheduled jobs",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/scheduler/scheduledjobs?expansion=deliverySetting,favorite&locale=en_US&solutions=WORKSPACE,WORKSPACE&ownerId=43407647&imsUserId=aliqua&filterByModifiedAfter=aliqua&includeType=deleted,deleted&limit=10&page=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scheduler",
										"scheduledjobs"
									],
									"query": [
										{
											"key": "expansion",
											"value": "deliverySetting,favorite",
											"description": "Comma-delimited list of additional job metadata fields to include on response."
										},
										{
											"key": "locale",
											"value": "en_US",
											"description": "Locale"
										},
										{
											"key": "solutions",
											"value": "WORKSPACE,WORKSPACE",
											"description": "Solution types to include"
										},
										{
											"key": "ownerId",
											"value": "43407647",
											"description": "Retrieve only jobs owned by the specified loginId (This will be used only for Analytics and ignored for CJA)"
										},
										{
											"key": "imsUserId",
											"value": "aliqua",
											"description": "Retrieve only jobs owned by the specified imsUserId (This will be used only for CJA and ignored for Analytics)"
										},
										{
											"key": "filterByModifiedAfter",
											"value": "aliqua",
											"description": "Filter list to only include jobs modified since this date (ISO8601 format)"
										},
										{
											"key": "includeType",
											"value": "deleted,deleted",
											"description": "Include different types of jobs"
										},
										{
											"key": "limit",
											"value": "10",
											"description": "Number of results per page"
										},
										{
											"key": "page",
											"value": "0",
											"description": "Page number (base 0 - first page is \"0\")"
										}
									]
								},
								"description": "Returns a list of scheduled jobs for the user. If the user is an Admin user AND the 'includeType' parameter is passed with a value of 'all' the method returns all scheduledjobs within the user's company."
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/scheduler/scheduledjobs?expansion=isDeleted,deliverySetting&locale=en_US&solutions=ALERTS,WORKSPACE&ownerId=43407647&imsUserId=aliqua&filterByModifiedAfter=aliqua&includeType=expired,deleted&limit=10&page=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scheduler",
												"scheduledjobs"
											],
											"query": [
												{
													"key": "expansion",
													"value": "isDeleted,deliverySetting"
												},
												{
													"key": "locale",
													"value": "en_US"
												},
												{
													"key": "solutions",
													"value": "ALERTS,WORKSPACE"
												},
												{
													"key": "ownerId",
													"value": "43407647"
												},
												{
													"key": "imsUserId",
													"value": "aliqua"
												},
												{
													"key": "filterByModifiedAfter",
													"value": "aliqua"
												},
												{
													"key": "includeType",
													"value": "expired,deleted"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "0"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"tempor amet\",\n  \"name\": \"est\",\n  \"description\": \"consequat culpa deserunt\",\n  \"rsid\": \"a\",\n  \"reportSuiteName\": \"in culpa dolor\",\n  \"owner\": {\n    \"id\": -52557165,\n    \"imsUserId\": \"anim sit ad\"\n  },\n  \"isDeleted\": false,\n  \"migratedIds\": [\n    \"ullamco elit Excepteur consequat laborum\",\n    \"mollit dolore in\"\n  ],\n  \"internal\": true,\n  \"scheduledItemName\": \"irure consectetur\",\n  \"failureReasonMessage\": \"sint officia quis velit\",\n  \"complexity\": {\n    \"aute_92\": {},\n    \"Duisd3b\": {},\n    \"amet_1\": {}\n  },\n  \"version\": \"nulla non\",\n  \"locale\": \"deserunt culpa Duis\",\n  \"schedule\": {\n    \"cillum_45\": {},\n    \"aliqua8\": {},\n    \"Lorem895\": {}\n  },\n  \"tags\": [\n    {\n      \"id\": 96276737,\n      \"name\": \"es\",\n      \"description\": \"in\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": -76185766,\n      \"name\": \"amet qui\",\n      \"description\": \"voluptate eu\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"failureReason\": \"INVALID\",\n  \"tasks\": [\n    {\n      \"requestParams\": {\n        \"nisia\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"doloreeb\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"artifactType\": \"qui Duis reprehenderit\",\n      \"deliverySetting\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tasktype\": \"veniam\",\n      \"tasksubtype\": \"Ut deserunt\",\n      \"type\": \"commodo\",\n      \"subType\": \"id aute do\",\n      \"deliverySettingId\": \"Excepteur ut aliqua id\",\n      \"attemptnum\": -13046196\n    },\n    {\n      \"requestParams\": {\n        \"commodo_368\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"qui24_\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"artifactType\": \"exercitation do dolore id et\",\n      \"deliverySetting\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tasktype\": \"adipisicing laborum occaecat Duis\",\n      \"tasksubtype\": \"labore cillum sit\",\n      \"type\": \"elit Lorem anim culpa\",\n      \"subType\": \"aliquip eu\",\n      \"deliverySettingId\": \"Excepteur\",\n      \"attemptnum\": -8366600\n    }\n  ],\n  \"globalCompanyId\": \"ad dese\",\n  \"shares\": [\n    {\n      \"componentId\": \"deseru\",\n      \"shareToId\": -116216,\n      \"shareToType\": \"adipisicing eu\",\n      \"shareId\": 59970010,\n      \"componentType\": \"esse exercitation in\",\n      \"shareToDisplayName\": \"eiusmod aute Ut deserunt\",\n      \"shareToLogin\": \"consecte\",\n      \"shareToImsUserId\": \"sint in labore enim\",\n      \"accessLevel\": \"minim eiusmod et occa\"\n    },\n    {\n      \"componentId\": \"dolor pariatur\",\n      \"shareToId\": -5039762,\n      \"shareToType\": \"amet in\",\n      \"shareId\": 34592937,\n      \"componentType\": \"consectetur\",\n      \"shareToDisplayName\": \"Lorem commodo aliquip\",\n      \"shareToLogin\": \"sint esse velit Duis cupidatat\",\n      \"shareToImsUserId\": \"minim in voluptate sunt\",\n      \"accessLevel\": \"aute consectetur\"\n    }\n  ],\n  \"approved\": false,\n  \"favorite\": false,\n  \"usageSummary\": {\n    \"count\": -57348797,\n    \"mostRecentTimestamp\": \"1964-04-14T11:59:44.799Z\",\n    \"itemId\": \"anim dolor proident\",\n    \"relevancyScore\": -75044339.46264096,\n    \"companyCount\": 58655190\n  },\n  \"debugAttachArtifacts\": true,\n  \"alternateVariableNames\": {\n    \"name\": \"u\",\n    \"baseName\": \"sit quis et\",\n    \"curatedName\": \"incididunt Duis\"\n  },\n  \"siteTitle\": \"consectetur sint eu in dolore\",\n  \"modified\": \"1975-10-13T15:07:32.709Z\"\n}"
								},
								{
									"name": "Unexpected error; scheduled jobs retrieval failed for unknown error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/scheduler/scheduledjobs?expansion=isDeleted,deliverySetting&locale=en_US&solutions=ALERTS,WORKSPACE&ownerId=43407647&imsUserId=aliqua&filterByModifiedAfter=aliqua&includeType=expired,deleted&limit=10&page=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scheduler",
												"scheduledjobs"
											],
											"query": [
												{
													"key": "expansion",
													"value": "isDeleted,deliverySetting"
												},
												{
													"key": "locale",
													"value": "en_US"
												},
												{
													"key": "solutions",
													"value": "ALERTS,WORKSPACE"
												},
												{
													"key": "ownerId",
													"value": "43407647"
												},
												{
													"key": "imsUserId",
													"value": "aliqua"
												},
												{
													"key": "filterByModifiedAfter",
													"value": "aliqua"
												},
												{
													"key": "includeType",
													"value": "expired,deleted"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "0"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Creates a scheduled job in the kronos system",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"est ullamco\",\n  \"description\": \"cupidatat\",\n  \"rsid\": \"Lorem do id\",\n  \"owner\": {\n    \"id\": 78565633,\n    \"imsUserId\": \"dolore in elit Excepteur anim\"\n  },\n  \"isDeleted\": true,\n  \"migratedIds\": [\n    \"ullamco\",\n    \"nisi nostrud anim exercitation aute\"\n  ],\n  \"internal\": true,\n  \"scheduledItemName\": \"Lorem dolore occaecat\",\n  \"failureReasonMessage\": \"nostrud incididunt\",\n  \"complexity\": {\n    \"cupidatat8f_\": {},\n    \"dolore_833\": {}\n  },\n  \"version\": \"exercitation Duis velit\",\n  \"locale\": \"eiusmod laborum aute dolor\",\n  \"schedule\": {\n    \"consectetur6\": {},\n    \"est_f\": {}\n  },\n  \"tags\": [\n    {\n      \"id\": -61500452,\n      \"name\": \"Ut incididu\",\n      \"description\": \"id aliquip \",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": 54032368,\n      \"name\": \"fugiat voluptate\",\n      \"description\": \"Lorem ipsum\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"failureReason\": \"INITIALIZATION_ERROR\",\n  \"tasks\": [\n    {\n      \"requestParams\": {\n        \"ipsum_16\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"artifactType\": \"exercitati\",\n      \"deliverySetting\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tasktype\": \"ut est id voluptate\",\n      \"tasksubtype\": \"consequat laborum\",\n      \"type\": \"quis sit\",\n      \"subType\": \"deserunt minim mollit ullamco\",\n      \"deliverySettingId\": \"id voluptate\",\n      \"attemptnum\": -78140918\n    },\n    {\n      \"requestParams\": {\n        \"aliquaf\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"occaecatc0\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"deserunt_b\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"artifactType\": \"proident labore commodo\",\n      \"deliverySetting\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tasktype\": \"dolore ut\",\n      \"tasksubtype\": \"eiusmod elit quis\",\n      \"type\": \"ut consequat elit mollit\",\n      \"subType\": \"velit cillum voluptate\",\n      \"deliverySettingId\": \"proident\",\n      \"attemptnum\": 94800818\n    }\n  ],\n  \"globalCompanyId\": \"non voluptate sint\",\n  \"shares\": [\n    {\n      \"componentId\": \"cupidatat magna Lorem culpa\",\n      \"shareToId\": -65849284,\n      \"shareToType\": \"pariatur aliqua p\",\n      \"shareId\": -65810003,\n      \"componentType\": \"labore officia ut\",\n      \"shareToDisplayName\": \"in et in do\",\n      \"shareToLogin\": \"laboris enim\",\n      \"shareToImsUserId\": \"sit exercitation\",\n      \"accessLevel\": \"commodo non qui pariatur\"\n    },\n    {\n      \"componentId\": \"consectetur minim reprehenderit\",\n      \"shareToId\": 4756583,\n      \"shareToType\": \"consequat\",\n      \"shareId\": 83894391,\n      \"componentType\": \"sit quis est occaecat proident\",\n      \"shareToDisplayName\": \"nostrud\",\n      \"shareToLogin\": \"pariatur nisi\",\n      \"shareToImsUserId\": \"Duis proident tempor\",\n      \"accessLevel\": \"deserunt dolor\"\n    }\n  ],\n  \"approved\": false,\n  \"favorite\": true,\n  \"usageSummary\": {\n    \"count\": 15135006,\n    \"mostRecentTimestamp\": \"1963-11-19T09:53:51.530Z\",\n    \"itemId\": \"magna do qui\",\n    \"relevancyScore\": 28442229.280470148,\n    \"companyCount\": -28844103\n  },\n  \"debugAttachArtifacts\": true,\n  \"alternateVariableNames\": {\n    \"name\": \"cillum velit magna\",\n    \"baseName\": \"irure sint ullamco\",\n    \"curatedName\": \"irure\"\n  },\n  \"siteTitle\": \"dolor ut\",\n  \"modified\": \"1969-05-17T12:31:40.021Z\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/scheduler/scheduledjobs?expansion=deliverySetting,favorite&locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scheduler",
										"scheduledjobs"
									],
									"query": [
										{
											"key": "expansion",
											"value": "deliverySetting,favorite",
											"description": "Comma-delimited list of additional job metadata fields to include on response."
										},
										{
											"key": "locale",
											"value": "en_US",
											"description": "Locale"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/scheduler/scheduledjobs?expansion=isDeleted,deliverySetting&locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scheduler",
												"scheduledjobs"
											],
											"query": [
												{
													"key": "expansion",
													"value": "isDeleted,deliverySetting"
												},
												{
													"key": "locale",
													"value": "en_US"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"dolore labore\",\n  \"name\": \"incididunt culpa reprehenderit exercitation\",\n  \"description\": \"in fugiat\",\n  \"rsid\": \"id aliquip laborum amet\",\n  \"reportSuiteName\": \"sunt sint reprehenderit veniam\",\n  \"owner\": {\n    \"id\": 40719595,\n    \"imsUserId\": \"ea esse Excepteur\"\n  },\n  \"isDeleted\": true,\n  \"migratedIds\": [\n    \"Lorem \",\n    \"sit qui\"\n  ],\n  \"internal\": true,\n  \"scheduledItemName\": \"sed eu\",\n  \"failureReasonMessage\": \"Ut irure quis ut nulla\",\n  \"complexity\": {\n    \"adipisicing_4\": {}\n  },\n  \"version\": \"reprehenderit\",\n  \"locale\": \"sed eu\",\n  \"schedule\": {\n    \"do8f\": {},\n    \"sint_272\": {}\n  },\n  \"tags\": [\n    {\n      \"id\": -62367441,\n      \"name\": \"elit ut consectetur magna\",\n      \"description\": \"sunt aliqua\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": 50785381,\n      \"name\": \"occaecat dolore\",\n      \"description\": \"culpa incididunt sed enim\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"failureReason\": \"UNKNOWN\",\n  \"tasks\": [\n    {\n      \"requestParams\": {\n        \"qui_8_3\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"eu6\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"artifactType\": \"l\",\n      \"deliverySetting\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tasktype\": \"culpa sint irure nos\",\n      \"tasksubtype\": \"officia adipisicing\",\n      \"type\": \"adipisicing nostrud consequat\",\n      \"subType\": \"consectetur velit enim\",\n      \"deliverySettingId\": \"voluptate eu irure\",\n      \"attemptnum\": -82469952\n    },\n    {\n      \"requestParams\": {\n        \"Duis_8\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"artifactType\": \"dolor dolore\",\n      \"deliverySetting\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tasktype\": \"enim Lorem\",\n      \"tasksubtype\": \"o\",\n      \"type\": \"id\",\n      \"subType\": \"enim deserunt reprehenderit\",\n      \"deliverySettingId\": \"cillum proident\",\n      \"attemptnum\": 81004290\n    }\n  ],\n  \"globalCompanyId\": \"voluptate ipsum\",\n  \"shares\": [\n    {\n      \"componentId\": \"laborum\",\n      \"shareToId\": -1734228,\n      \"shareToType\": \"elit mollit eu nisi ullamco\",\n      \"shareId\": 35036314,\n      \"componentType\": \"non\",\n      \"shareToDisplayName\": \"Ut enim proident occaecat\",\n      \"shareToLogin\": \"Excepteur aliquip\",\n      \"shareToImsUserId\": \"proident reprehenderit eu\",\n      \"accessLevel\": \"pariatur magna\"\n    },\n    {\n      \"componentId\": \"ea\",\n      \"shareToId\": -68515920,\n      \"shareToType\": \"dolore irure\",\n      \"shareId\": 1852268,\n      \"componentType\": \"id et\",\n      \"shareToDisplayName\": \"minim eu\",\n      \"shareToLogin\": \"commodo ad sit ulla\",\n      \"shareToImsUserId\": \"sit amet elit proident\",\n      \"accessLevel\": \"ea fugiat\"\n    }\n  ],\n  \"approved\": false,\n  \"favorite\": true,\n  \"usageSummary\": {\n    \"count\": 98681571,\n    \"mostRecentTimestamp\": \"1973-07-31T09:45:04.137Z\",\n    \"itemId\": \"tempor repreh\",\n    \"relevancyScore\": -30874100.527518377,\n    \"companyCount\": 72384085\n  },\n  \"debugAttachArtifacts\": true,\n  \"alternateVariableNames\": {\n    \"name\": \"dolor ut cupidatat\",\n    \"baseName\": \"et nisi culpa exercitation ipsum\",\n    \"curatedName\": \"dolor ipsum irure Lorem\"\n  },\n  \"siteTitle\": \"aliqua ullamco anim\",\n  \"modified\": \"1963-06-19T02:12:39.237Z\"\n}"
								},
								{
									"name": "Unexpected error; create schedule job failed for unknown reason",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/scheduler/scheduledjobs?expansion=isDeleted,deliverySetting&locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scheduler",
												"scheduledjobs"
											],
											"query": [
												{
													"key": "expansion",
													"value": "isDeleted,deliverySetting"
												},
												{
													"key": "locale",
													"value": "en_US"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"io_error\",\n  \"errorDescription\": \"reprehenderit sit aliqua\",\n  \"errorId\": \"magna\",\n  \"errorDetails\": {\n    \"velitf00\": {}\n  },\n  \"rootCauseService\": \"eu tempor ullamco ipsum\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Runs the action for the scheduler guid",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/scheduler/guidaction/:guidId/execute",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"scheduler",
								"guidaction",
								":guidId",
								"execute"
							],
							"variable": [
								{
									"key": "guidId",
									"value": "aliqua",
									"description": "(Required) The id of the scheduler guids to return"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/scheduler/guidaction/:guidId/execute",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scheduler",
										"guidaction",
										":guidId",
										"execute"
									],
									"variable": [
										{
											"key": "guidId",
											"value": "aliqua",
											"description": "(Required) The id of the scheduler guids to return"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"globalCompanyId\": \"cupidatat velit officia nisi\",\n  \"action\": \"ullamco\",\n  \"payload\": \"ex amet cupidatat veniam laborum\",\n  \"jobId\": \"consectetur occaecat amet\",\n  \"_id\": \"enim anim\",\n  \"guidActionId\": \"elit eu in\",\n  \"createdYmdt\": \"1949-04-21T11:53:38.938Z\",\n  \"actionType\": \"commodo ea in\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "auditlogs",
			"item": [
				{
					"name": "Retrieves audit logs for given filters",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/auditlogs?logType=aliqua&rsid=aliqua&requestId=aliqua&clientId=aliqua&loginLdap=aliqua&logCode=aliqua&startDateTime=aliqua&endDateTime=aliqua&limit=10&page=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auditlogs"
							],
							"query": [
								{
									"key": "logType",
									"value": "aliqua",
									"description": "The log types"
								},
								{
									"key": "rsid",
									"value": "aliqua",
									"description": "The rsid of the report suite"
								},
								{
									"key": "requestId",
									"value": "aliqua",
									"description": "The requestId of the client"
								},
								{
									"key": "clientId",
									"value": "aliqua",
									"description": "The clientId of the client"
								},
								{
									"key": "loginLdap",
									"value": "aliqua",
									"description": "login"
								},
								{
									"key": "logCode",
									"value": "aliqua",
									"description": "logCode"
								},
								{
									"key": "startDateTime",
									"value": "aliqua",
									"description": "startDateTime in yyyy-MM-dd HH:mm:ss"
								},
								{
									"key": "endDateTime",
									"value": "aliqua",
									"description": "endDateTime in yyyy-MM-dd HH:mm:ss"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Number of results per page"
								},
								{
									"key": "page",
									"value": "0",
									"description": "Page number (base 0 - first page is \"0\")"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auditlogs?logType=aliqua&rsid=aliqua&requestId=aliqua&clientId=aliqua&loginLdap=aliqua&logCode=aliqua&startDateTime=aliqua&endDateTime=aliqua&limit=10&page=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auditlogs"
									],
									"query": [
										{
											"key": "logType",
											"value": "aliqua"
										},
										{
											"key": "rsid",
											"value": "aliqua"
										},
										{
											"key": "requestId",
											"value": "aliqua"
										},
										{
											"key": "clientId",
											"value": "aliqua"
										},
										{
											"key": "loginLdap",
											"value": "aliqua"
										},
										{
											"key": "logCode",
											"value": "aliqua"
										},
										{
											"key": "startDateTime",
											"value": "aliqua"
										},
										{
											"key": "endDateTime",
											"value": "aliqua"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"companyLogin\": \"id sed\",\n  \"loginLdap\": \"aliqua qui minim adipisic\",\n  \"isMadeByAdobe\": false,\n  \"globalCompanyId\": \"enim ut\",\n  \"logCode\": \"Ut irure quis proident ullamco\",\n  \"logParameters\": {\n    \"logParameters\": {\n      \"minim_01\": \"commodo consequat ut\",\n      \"utb0\": \"proident aliqua\"\n    }\n  },\n  \"logText\": \"velit sit\",\n  \"rsid\": \"nulla dolor qui\",\n  \"eventType\": \"nostrud do\",\n  \"ipAddress\": \"Duis veniam\",\n  \"requestId\": \"ut sit in sint\",\n  \"clientId\": \"labore\",\n  \"dateCreated\": \"2022-02-28T00:17:18.913Z\",\n  \"isInternal\": false,\n  \"id\": \"sunt labore officia\"\n}"
						},
						{
							"name": "Invalid Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auditlogs?logType=aliqua&rsid=aliqua&requestId=aliqua&clientId=aliqua&loginLdap=aliqua&logCode=aliqua&startDateTime=aliqua&endDateTime=aliqua&limit=10&page=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auditlogs"
									],
									"query": [
										{
											"key": "logType",
											"value": "aliqua"
										},
										{
											"key": "rsid",
											"value": "aliqua"
										},
										{
											"key": "requestId",
											"value": "aliqua"
										},
										{
											"key": "clientId",
											"value": "aliqua"
										},
										{
											"key": "loginLdap",
											"value": "aliqua"
										},
										{
											"key": "logCode",
											"value": "aliqua"
										},
										{
											"key": "startDateTime",
											"value": "aliqua"
										},
										{
											"key": "endDateTime",
											"value": "aliqua"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "0"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unexpected error; data cannot be retrieved due to an internal error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auditlogs?logType=aliqua&rsid=aliqua&requestId=aliqua&clientId=aliqua&loginLdap=aliqua&logCode=aliqua&startDateTime=aliqua&endDateTime=aliqua&limit=10&page=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auditlogs"
									],
									"query": [
										{
											"key": "logType",
											"value": "aliqua"
										},
										{
											"key": "rsid",
											"value": "aliqua"
										},
										{
											"key": "requestId",
											"value": "aliqua"
										},
										{
											"key": "clientId",
											"value": "aliqua"
										},
										{
											"key": "loginLdap",
											"value": "aliqua"
										},
										{
											"key": "logCode",
											"value": "aliqua"
										},
										{
											"key": "startDateTime",
											"value": "aliqua"
										},
										{
											"key": "endDateTime",
											"value": "aliqua"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "0"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Pushes an audit log",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"companyLogin\": \"id sed\",\n  \"loginLdap\": \"aliqua qui minim adipisic\",\n  \"isMadeByAdobe\": false,\n  \"globalCompanyId\": \"enim ut\",\n  \"logCode\": \"Ut irure quis proident ullamco\",\n  \"logParameters\": {\n    \"logParameters\": {\n      \"minim_01\": \"commodo consequat ut\",\n      \"utb0\": \"proident aliqua\"\n    }\n  },\n  \"logText\": \"velit sit\",\n  \"rsid\": \"nulla dolor qui\",\n  \"eventType\": \"nostrud do\",\n  \"ipAddress\": \"Duis veniam\",\n  \"requestId\": \"ut sit in sint\",\n  \"clientId\": \"labore\",\n  \"dateCreated\": \"2022-02-28T00:17:18.913Z\",\n  \"isInternal\": false,\n  \"id\": \"sunt labore officia\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auditlogs?logType=internal",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auditlogs"
							],
							"query": [
								{
									"key": "logType",
									"value": "internal",
									"description": "Log type."
								}
							]
						}
					},
					"response": [
						{
							"name": "Invalid Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"companyLogin\": \"id sed\",\n  \"loginLdap\": \"aliqua qui minim adipisic\",\n  \"isMadeByAdobe\": false,\n  \"globalCompanyId\": \"enim ut\",\n  \"logCode\": \"Ut irure quis proident ullamco\",\n  \"logParameters\": {\n    \"logParameters\": {\n      \"minim_01\": \"commodo consequat ut\",\n      \"utb0\": \"proident aliqua\"\n    }\n  },\n  \"logText\": \"velit sit\",\n  \"rsid\": \"nulla dolor qui\",\n  \"eventType\": \"nostrud do\",\n  \"ipAddress\": \"Duis veniam\",\n  \"requestId\": \"ut sit in sint\",\n  \"clientId\": \"labore\",\n  \"dateCreated\": \"2022-02-28T00:17:18.913Z\",\n  \"isInternal\": false,\n  \"id\": \"sunt labore officia\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auditlogs?logType=internal",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auditlogs"
									],
									"query": [
										{
											"key": "logType",
											"value": "internal"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unexpected error; retrieval on logging entries failed due to an internal error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"companyLogin\": \"id sed\",\n  \"loginLdap\": \"aliqua qui minim adipisic\",\n  \"isMadeByAdobe\": false,\n  \"globalCompanyId\": \"enim ut\",\n  \"logCode\": \"Ut irure quis proident ullamco\",\n  \"logParameters\": {\n    \"logParameters\": {\n      \"minim_01\": \"commodo consequat ut\",\n      \"utb0\": \"proident aliqua\"\n    }\n  },\n  \"logText\": \"velit sit\",\n  \"rsid\": \"nulla dolor qui\",\n  \"eventType\": \"nostrud do\",\n  \"ipAddress\": \"Duis veniam\",\n  \"requestId\": \"ut sit in sint\",\n  \"clientId\": \"labore\",\n  \"dateCreated\": \"2022-02-28T00:17:18.913Z\",\n  \"isInternal\": false,\n  \"id\": \"sunt labore officia\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auditlogs?logType=internal",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auditlogs"
									],
									"query": [
										{
											"key": "logType",
											"value": "internal"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Retrieves all the logging entries of a report suite ",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/auditlogs/:logId?logType=aliqua",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auditlogs",
								":logId"
							],
							"query": [
								{
									"key": "logType",
									"value": "aliqua",
									"description": "Log Type(Internal,Company or Reportsuite"
								}
							],
							"variable": [
								{
									"key": "logId",
									"value": "aliqua",
									"description": "(Required) The logid containing the logs"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auditlogs/:logId?logType=aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auditlogs",
										":logId"
									],
									"query": [
										{
											"key": "logType",
											"value": "aliqua"
										}
									],
									"variable": [
										{
											"key": "logId",
											"value": "aliqua",
											"description": "(Required) The logid containing the logs"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"companyLogin\": \"id sed\",\n  \"loginLdap\": \"aliqua qui minim adipisic\",\n  \"isMadeByAdobe\": false,\n  \"globalCompanyId\": \"enim ut\",\n  \"logCode\": \"Ut irure quis proident ullamco\",\n  \"logParameters\": {\n    \"logParameters\": {\n      \"minim_01\": \"commodo consequat ut\",\n      \"utb0\": \"proident aliqua\"\n    }\n  },\n  \"logText\": \"velit sit\",\n  \"rsid\": \"nulla dolor qui\",\n  \"eventType\": \"nostrud do\",\n  \"ipAddress\": \"Duis veniam\",\n  \"requestId\": \"ut sit in sint\",\n  \"clientId\": \"labore\",\n  \"dateCreated\": \"2022-02-28T00:17:18.913Z\",\n  \"isInternal\": false,\n  \"id\": \"sunt labore officia\"\n}"
						},
						{
							"name": "Invalid Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auditlogs/:logId?logType=aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auditlogs",
										":logId"
									],
									"query": [
										{
											"key": "logType",
											"value": "aliqua"
										}
									],
									"variable": [
										{
											"key": "logId",
											"value": "aliqua",
											"description": "(Required) The logid containing the logs"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unexpected error; retrieval on logging entries failed due to an internal error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auditlogs/:logId?logType=aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auditlogs",
										":logId"
									],
									"query": [
										{
											"key": "logType",
											"value": "aliqua"
										}
									],
									"variable": [
										{
											"key": "logId",
											"value": "aliqua",
											"description": "(Required) The logid containing the logs"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Retrieves audit logs for given filters",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"eventType\": \"aliquip fugiat\",\n  \"logText\": \"veniam in nisi magna\",\n  \"globalCompanyId\": \"voluptate anim\",\n  \"companyLogin\": \"ut labore sunt et\",\n  \"ipAddress\": \"irure labore mollit culpa est\",\n  \"requestId\": \"mollit esse\",\n  \"operator\": \"deserunt\",\n  \"clientId\": \"dolor \",\n  \"logCode\": \"anim velit eiusmod Ut ut\",\n  \"rsid\": \"elit\",\n  \"logType\": \"ea\",\n  \"startDateTime\": \"ipsum nisi quis\",\n  \"endDateTime\": \"proident\",\n  \"dateCreated\": \"1945-05-13T08:10:27.927Z\",\n  \"isMadeByAdobe\": false,\n  \"logParameters\": {\n    \"logParameters\": {\n      \"dolor_2a2\": \"commodo et irure fugiat\",\n      \"cillum_1e\": \"nisi cupidatat in\",\n      \"magna1\": \"eu ex ipsum labore consequat\",\n      \"sed926\": \"veniam\"\n    }\n  },\n  \"containsList\": [\n    \"ad pariatur sit veniam\",\n    \"ullamco reprehenderit aliquip\"\n  ],\n  \"internal\": true,\n  \"loginLdap\": \"non in\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auditlogs/search?limit=10&page=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auditlogs",
								"search"
							],
							"query": [
								{
									"key": "limit",
									"value": "10",
									"description": "Number of results per page"
								},
								{
									"key": "page",
									"value": "0",
									"description": "Page number (base 0 - first page is \"0\")"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"eventType\": \"ut dolore\",\n  \"logText\": \"sint\",\n  \"globalCompanyId\": \"Duis officia\",\n  \"companyLogin\": \"minim\",\n  \"ipAddress\": \"officia Lorem aliqua\",\n  \"requestId\": \"pariatur ullamco\",\n  \"operator\": \"do Duis ullamco\",\n  \"clientId\": \"aliqua ipsum in\",\n  \"logCode\": \"labore fugiat eiusmod magna\",\n  \"rsid\": \"ex sed esse minim sint\",\n  \"logType\": \"venia\",\n  \"startDateTime\": \"fugiat ex nostrud culpa nulla\",\n  \"endDateTime\": \"sunt Excepteur Lorem\",\n  \"dateCreated\": \"1952-10-15T00:03:25.798Z\",\n  \"isMadeByAdobe\": false,\n  \"logParameters\": {\n    \"logParameters\": {\n      \"aliqua_0\": \"incididunt dol\",\n      \"id4\": \"labore amet ex\"\n    }\n  },\n  \"containsList\": [\n    \"sint cupidatat esse sed adipisicing\",\n    \"consectetur mo\"\n  ],\n  \"internal\": true,\n  \"loginLdap\": \"eu non Duis cillum in\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auditlogs/search?limit=10&page=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auditlogs",
										"search"
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"companyLogin\": \"id sed\",\n  \"loginLdap\": \"aliqua qui minim adipisic\",\n  \"isMadeByAdobe\": false,\n  \"globalCompanyId\": \"enim ut\",\n  \"logCode\": \"Ut irure quis proident ullamco\",\n  \"logParameters\": {\n    \"logParameters\": {\n      \"minim_01\": \"commodo consequat ut\",\n      \"utb0\": \"proident aliqua\"\n    }\n  },\n  \"logText\": \"velit sit\",\n  \"rsid\": \"nulla dolor qui\",\n  \"eventType\": \"nostrud do\",\n  \"ipAddress\": \"Duis veniam\",\n  \"requestId\": \"ut sit in sint\",\n  \"clientId\": \"labore\",\n  \"dateCreated\": \"2022-02-28T00:17:18.913Z\",\n  \"isInternal\": false,\n  \"id\": \"sunt labore officia\"\n}"
						},
						{
							"name": "Invalid Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"eventType\": \"ut dolore\",\n  \"logText\": \"sint\",\n  \"globalCompanyId\": \"Duis officia\",\n  \"companyLogin\": \"minim\",\n  \"ipAddress\": \"officia Lorem aliqua\",\n  \"requestId\": \"pariatur ullamco\",\n  \"operator\": \"do Duis ullamco\",\n  \"clientId\": \"aliqua ipsum in\",\n  \"logCode\": \"labore fugiat eiusmod magna\",\n  \"rsid\": \"ex sed esse minim sint\",\n  \"logType\": \"venia\",\n  \"startDateTime\": \"fugiat ex nostrud culpa nulla\",\n  \"endDateTime\": \"sunt Excepteur Lorem\",\n  \"dateCreated\": \"1952-10-15T00:03:25.798Z\",\n  \"isMadeByAdobe\": false,\n  \"logParameters\": {\n    \"logParameters\": {\n      \"aliqua_0\": \"incididunt dol\",\n      \"id4\": \"labore amet ex\"\n    }\n  },\n  \"containsList\": [\n    \"sint cupidatat esse sed adipisicing\",\n    \"consectetur mo\"\n  ],\n  \"internal\": true,\n  \"loginLdap\": \"eu non Duis cillum in\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auditlogs/search?limit=10&page=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auditlogs",
										"search"
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "0"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unexpected error; data cannot be retrieved due to an internal error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"eventType\": \"ut dolore\",\n  \"logText\": \"sint\",\n  \"globalCompanyId\": \"Duis officia\",\n  \"companyLogin\": \"minim\",\n  \"ipAddress\": \"officia Lorem aliqua\",\n  \"requestId\": \"pariatur ullamco\",\n  \"operator\": \"do Duis ullamco\",\n  \"clientId\": \"aliqua ipsum in\",\n  \"logCode\": \"labore fugiat eiusmod magna\",\n  \"rsid\": \"ex sed esse minim sint\",\n  \"logType\": \"venia\",\n  \"startDateTime\": \"fugiat ex nostrud culpa nulla\",\n  \"endDateTime\": \"sunt Excepteur Lorem\",\n  \"dateCreated\": \"1952-10-15T00:03:25.798Z\",\n  \"isMadeByAdobe\": false,\n  \"logParameters\": {\n    \"logParameters\": {\n      \"aliqua_0\": \"incididunt dol\",\n      \"id4\": \"labore amet ex\"\n    }\n  },\n  \"containsList\": [\n    \"sint cupidatat esse sed adipisicing\",\n    \"consectetur mo\"\n  ],\n  \"internal\": true,\n  \"loginLdap\": \"eu non Duis cillum in\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auditlogs/search?limit=10&page=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auditlogs",
										"search"
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "0"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "calculatedmetrics",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Retrieve a single calculated metric by id",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/calculatedmetrics/:id?expansion=definition,shares&includeHidden=false&toBeUsedInRsid=aliqua&locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calculatedmetrics",
										":id"
									],
									"query": [
										{
											"key": "expansion",
											"value": "definition,shares",
											"description": "Comma-delimited list of additional calculated metric metadata fields to include on response."
										},
										{
											"key": "includeHidden",
											"value": "false",
											"description": "Whether to include variables that are hidden in the UI or that the user doesn't have permission to."
										},
										{
											"key": "toBeUsedInRsid",
											"value": "aliqua",
											"description": "The report suite where the calculated metric is intended to be used. This report suite will be used to determine things like compatibility and permissions.  If it is not specified then the permissions will be calculated based on the union of all metrics authorized in all groups the user belongs to.  If the compatibility expansion is specified and toBeUsedInRsid is not then the compatibility returned is based off the compatibility from the last time the calculated metric was saved."
										},
										{
											"key": "locale",
											"value": "en_US",
											"description": "Locale"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The calculated metric ID to retrieve"
										}
									]
								},
								"description": "A calculated metric response will always include these default items: *id, name, description, rsid, owner, polarity, precision, type* \n\nOther attributes can be optionally requested through the 'expansion' field:\n\n* *modified*: Date that the metric was last modified (ISO 8601)\n* *definition*: Calculated metric definition as JSON object\n* *compatibility*: Products that the metric is compatible with\n* *reportSuiteName*: Also return the friendly Report Suite name for the RSID\n* *tags*: Gives all existing tags associated with the calculated metric\n\nFor more information about calculated metrics go [here](https://github.com/AdobeDocs/analytics-2.0-apis/blob/master/calculatedmetrics.md)\n\n"
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/calculatedmetrics/:id?expansion=ownerFullName,approved&includeHidden=false&toBeUsedInRsid=aliqua&locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedmetrics",
												":id"
											],
											"query": [
												{
													"key": "expansion",
													"value": "ownerFullName,approved"
												},
												{
													"key": "includeHidden",
													"value": "false"
												},
												{
													"key": "toBeUsedInRsid",
													"value": "aliqua"
												},
												{
													"key": "locale",
													"value": "en_US"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The calculated metric ID to retrieve"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"definition\": {\n    \"formula\": {\n      \"occaecat_2e\": {},\n      \"ut373\": {}\n    },\n    \"func\": \"Lorem\",\n    \"version\": [\n      -68042946,\n      -93085616\n    ],\n    \"filters\": [\n      {\n        \"cupidatat_29\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"anim_2\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"exercitation__00\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"proident0\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"proident_\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"proident_bb\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ]\n  },\n  \"id\": \"consequat culpa Ut sint\",\n  \"name\": \"aute eu veniam esse\",\n  \"description\": \"eu Duis in irure\",\n  \"rsid\": \"elit\",\n  \"reportSuiteName\": \"sit sunt fugiat proident ut\",\n  \"owner\": {\n    \"id\": 63006406,\n    \"imsUserId\": \"ut eu qui non\"\n  },\n  \"isDeleted\": true,\n  \"migratedIds\": [\n    \"ad\",\n    \"sint\"\n  ],\n  \"internal\": false,\n  \"polarity\": \"negative\",\n  \"precision\": 45536629,\n  \"type\": \"currency\",\n  \"compatibility\": {\n    \"valid\": true,\n    \"message\": \"eiusmod cillum Duis culpa\",\n    \"identityMetrics\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"identityDimensions\": [\n      \"sunt l\",\n      \"aliquip in\"\n    ],\n    \"segments\": [\n      \"ex dolore aliquip\",\n      \"Excepteur aliqua exercitation culpa\"\n    ],\n    \"functions\": [\n      \"commodo\",\n      \"occaecat enim\"\n    ],\n    \"validator_version\": \"incididunt labore\",\n    \"supported_products\": [\n      \"aliquip voluptate nostrud tempor eiusmod\",\n      \"sit ipsum\"\n    ],\n    \"supported_schema\": [\n      \"l\",\n      \"ad minim\"\n    ]\n  },\n  \"legacyId\": \"incididunt adipisicing\",\n  \"template\": false,\n  \"authorization\": {\n    \"authorized\": true,\n    \"permissioned\": false,\n    \"unAuthorizedMetricIdentities\": [\n      \"aliqua\",\n      \"dolore\"\n    ],\n    \"unAuthorizedSegmentIds\": [\n      \"aliquip nulla\",\n      \"Lorem quis culpa\"\n    ],\n    \"notAllowedForReportingMetricIdentities\": [\n      \"mollit ea\",\n      \"proident\"\n    ],\n    \"allowedForReporting\": false\n  },\n  \"dataGroup\": \"non mollit occaecat\",\n  \"curatedItem\": false,\n  \"alternateVariableNames\": {\n    \"name\": \"ea tempor\",\n    \"baseName\": \"in quis enim\",\n    \"curatedName\": \"ad minim ullamco qui\"\n  },\n  \"reportTimeAttribution\": false,\n  \"solution\": false,\n  \"categories\": [\n    \"Duis velit\",\n    \"dolor in\"\n  ],\n  \"warning\": {\n    \"title\": \"ipsu\",\n    \"text\": \"magna culpa Duis ullamco\",\n    \"helpLink\": \"quis do amet officia\"\n  },\n  \"tags\": [\n    {\n      \"id\": 19255839,\n      \"name\": \"labore laboris aute non\",\n      \"description\": \"commodo veniam incididunt occaecat dolore\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": -88624355,\n      \"name\": \"sint\",\n      \"description\": \"tempor nisi in et est\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"usageSummary\": {\n    \"count\": 39627982,\n    \"mostRecentTimestamp\": \"1980-01-05T19:16:53.887Z\",\n    \"itemId\": \"est sint\",\n    \"relevancyScore\": -38746441.30134741,\n    \"companyCount\": 25178941\n  },\n  \"shares\": [\n    {\n      \"componentId\": \"adipisicing ut nulla\",\n      \"shareToId\": -38955629,\n      \"shareToType\": \"elit dolore dolor\",\n      \"shareId\": -7367148,\n      \"componentType\": \"qui f\",\n      \"shareToDisplayName\": \"cillum fugiat Duis\",\n      \"shareToLogin\": \"ad\",\n      \"shareToImsUserId\": \"sunt aliqua elit nisi\",\n      \"accessLevel\": \"officia\"\n    },\n    {\n      \"componentId\": \"eiusmod magna id\",\n      \"shareToId\": -69199711,\n      \"shareToType\": \"incididunt \",\n      \"shareId\": 29648198,\n      \"componentType\": \"Lorem nostrud enim amet\",\n      \"shareToDisplayName\": \"cupidatat\",\n      \"shareToLogin\": \"in adipisicing\",\n      \"shareToImsUserId\": \"ad cupidatat velit\",\n      \"accessLevel\": \"officia\"\n    }\n  ],\n  \"approved\": true,\n  \"favorite\": true,\n  \"siteTitle\": \"laborum commodo eu\",\n  \"modified\": \"1979-05-30T14:33:40.194Z\",\n  \"created\": \"1942-11-15T04:55:01.397Z\"\n}"
								},
								{
									"name": "Requesting non-shared calculated metrics for other users is restricted to admin users",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/calculatedmetrics/:id?expansion=ownerFullName,approved&includeHidden=false&toBeUsedInRsid=aliqua&locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedmetrics",
												":id"
											],
											"query": [
												{
													"key": "expansion",
													"value": "ownerFullName,approved"
												},
												{
													"key": "includeHidden",
													"value": "false"
												},
												{
													"key": "toBeUsedInRsid",
													"value": "aliqua"
												},
												{
													"key": "locale",
													"value": "en_US"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The calculated metric ID to retrieve"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"invalid_dimension_access\",\n  \"errorDescription\": \"dolor\",\n  \"errorId\": \"veniam ut ea commodo mol\",\n  \"errorDetails\": {\n    \"culpad\": {},\n    \"ea4\": {}\n  },\n  \"rootCauseService\": \"nisi ullamco nostrud enim\"\n}"
								},
								{
									"name": "External API error; calculated metric retrieval failed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/calculatedmetrics/:id?expansion=ownerFullName,approved&includeHidden=false&toBeUsedInRsid=aliqua&locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedmetrics",
												":id"
											],
											"query": [
												{
													"key": "expansion",
													"value": "ownerFullName,approved"
												},
												{
													"key": "includeHidden",
													"value": "false"
												},
												{
													"key": "toBeUsedInRsid",
													"value": "aliqua"
												},
												{
													"key": "locale",
													"value": "en_US"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The calculated metric ID to retrieve"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"invalid_dimension_access\",\n  \"errorDescription\": \"dolor\",\n  \"errorId\": \"veniam ut ea commodo mol\",\n  \"errorDetails\": {\n    \"culpad\": {},\n    \"ea4\": {}\n  },\n  \"rootCauseService\": \"nisi ullamco nostrud enim\"\n}"
								}
							]
						},
						{
							"name": "Update an existing calculated metric",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"Lorem_6\": {},\n  \"consectetur1b7\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/calculatedmetrics/:id?expansion=definition,shares&locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calculatedmetrics",
										":id"
									],
									"query": [
										{
											"key": "expansion",
											"value": "definition,shares",
											"description": "Comma-delimited list of additional calculated metric metadata fields to include on response."
										},
										{
											"key": "locale",
											"value": "en_US",
											"description": "Locale"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) Calculated Metric ID to be updated"
										}
									]
								},
								"description": "The following fields can be modified through this endpoint: <br><b>name, description, definition, owner, rsid</b>\nExample \"defintion\" for use in testing API below (\"Visits per visitor\"):<br>\n\"definition\": {\r\n      \"formula\": {\r\n        \"func\": \"divide\",\r\n        \"col1\": {\r\n          \"func\": \"metric\",\r\n          \"name\": \"metrics/visits\",\r\n          \"description\": \"Visits\"\r\n        },\r\n        \"col2\": {\r\n          \"func\": \"metric\",\r\n          \"name\": \"metrics/visitors\",\r\n          \"description\": \"Unique Visitors\"\r\n        }\r\n      },\r\n      \"func\": \"calc-metric\",\r\n      \"version\": [\r\n        1,\r\n        0,\r\n        0\r\n      ]\r\n    }<br><br>Response will be the newly modified calculated metric object after the update request completes.<br><br><b><span style=\"text-decoration: underline;\">CalculatedMetricResponse</span></b><br>A calculated metric response will always include these default items:* id, name, description, rsid, owner* \n\nOther attributes can be optionally requested through the 'expansion' field as defined/documented in the GET endpoints (see GET \"/calculatedmetrics\" or GET \"/calculatedmetrics/{id}\" for more documentation)."
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/calculatedmetrics/:id?expansion=ownerFullName,approved&locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedmetrics",
												":id"
											],
											"query": [
												{
													"key": "expansion",
													"value": "ownerFullName,approved"
												},
												{
													"key": "locale",
													"value": "en_US"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) Calculated Metric ID to be updated"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"definition\": {\n    \"formula\": {\n      \"occaecat_2e\": {},\n      \"ut373\": {}\n    },\n    \"func\": \"Lorem\",\n    \"version\": [\n      -68042946,\n      -93085616\n    ],\n    \"filters\": [\n      {\n        \"cupidatat_29\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"anim_2\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"exercitation__00\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"proident0\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"proident_\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"proident_bb\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ]\n  },\n  \"id\": \"consequat culpa Ut sint\",\n  \"name\": \"aute eu veniam esse\",\n  \"description\": \"eu Duis in irure\",\n  \"rsid\": \"elit\",\n  \"reportSuiteName\": \"sit sunt fugiat proident ut\",\n  \"owner\": {\n    \"id\": 63006406,\n    \"imsUserId\": \"ut eu qui non\"\n  },\n  \"isDeleted\": true,\n  \"migratedIds\": [\n    \"ad\",\n    \"sint\"\n  ],\n  \"internal\": false,\n  \"polarity\": \"negative\",\n  \"precision\": 45536629,\n  \"type\": \"currency\",\n  \"compatibility\": {\n    \"valid\": true,\n    \"message\": \"eiusmod cillum Duis culpa\",\n    \"identityMetrics\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"identityDimensions\": [\n      \"sunt l\",\n      \"aliquip in\"\n    ],\n    \"segments\": [\n      \"ex dolore aliquip\",\n      \"Excepteur aliqua exercitation culpa\"\n    ],\n    \"functions\": [\n      \"commodo\",\n      \"occaecat enim\"\n    ],\n    \"validator_version\": \"incididunt labore\",\n    \"supported_products\": [\n      \"aliquip voluptate nostrud tempor eiusmod\",\n      \"sit ipsum\"\n    ],\n    \"supported_schema\": [\n      \"l\",\n      \"ad minim\"\n    ]\n  },\n  \"legacyId\": \"incididunt adipisicing\",\n  \"template\": false,\n  \"authorization\": {\n    \"authorized\": true,\n    \"permissioned\": false,\n    \"unAuthorizedMetricIdentities\": [\n      \"aliqua\",\n      \"dolore\"\n    ],\n    \"unAuthorizedSegmentIds\": [\n      \"aliquip nulla\",\n      \"Lorem quis culpa\"\n    ],\n    \"notAllowedForReportingMetricIdentities\": [\n      \"mollit ea\",\n      \"proident\"\n    ],\n    \"allowedForReporting\": false\n  },\n  \"dataGroup\": \"non mollit occaecat\",\n  \"curatedItem\": false,\n  \"alternateVariableNames\": {\n    \"name\": \"ea tempor\",\n    \"baseName\": \"in quis enim\",\n    \"curatedName\": \"ad minim ullamco qui\"\n  },\n  \"reportTimeAttribution\": false,\n  \"solution\": false,\n  \"categories\": [\n    \"Duis velit\",\n    \"dolor in\"\n  ],\n  \"warning\": {\n    \"title\": \"ipsu\",\n    \"text\": \"magna culpa Duis ullamco\",\n    \"helpLink\": \"quis do amet officia\"\n  },\n  \"tags\": [\n    {\n      \"id\": 19255839,\n      \"name\": \"labore laboris aute non\",\n      \"description\": \"commodo veniam incididunt occaecat dolore\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": -88624355,\n      \"name\": \"sint\",\n      \"description\": \"tempor nisi in et est\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"usageSummary\": {\n    \"count\": 39627982,\n    \"mostRecentTimestamp\": \"1980-01-05T19:16:53.887Z\",\n    \"itemId\": \"est sint\",\n    \"relevancyScore\": -38746441.30134741,\n    \"companyCount\": 25178941\n  },\n  \"shares\": [\n    {\n      \"componentId\": \"adipisicing ut nulla\",\n      \"shareToId\": -38955629,\n      \"shareToType\": \"elit dolore dolor\",\n      \"shareId\": -7367148,\n      \"componentType\": \"qui f\",\n      \"shareToDisplayName\": \"cillum fugiat Duis\",\n      \"shareToLogin\": \"ad\",\n      \"shareToImsUserId\": \"sunt aliqua elit nisi\",\n      \"accessLevel\": \"officia\"\n    },\n    {\n      \"componentId\": \"eiusmod magna id\",\n      \"shareToId\": -69199711,\n      \"shareToType\": \"incididunt \",\n      \"shareId\": 29648198,\n      \"componentType\": \"Lorem nostrud enim amet\",\n      \"shareToDisplayName\": \"cupidatat\",\n      \"shareToLogin\": \"in adipisicing\",\n      \"shareToImsUserId\": \"ad cupidatat velit\",\n      \"accessLevel\": \"officia\"\n    }\n  ],\n  \"approved\": true,\n  \"favorite\": true,\n  \"siteTitle\": \"laborum commodo eu\",\n  \"modified\": \"1979-05-30T14:33:40.194Z\",\n  \"created\": \"1942-11-15T04:55:01.397Z\"\n}"
								},
								{
									"name": "Definition must be formatted as a JSON Object",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/calculatedmetrics/:id?expansion=ownerFullName,approved&locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedmetrics",
												":id"
											],
											"query": [
												{
													"key": "expansion",
													"value": "ownerFullName,approved"
												},
												{
													"key": "locale",
													"value": "en_US"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) Calculated Metric ID to be updated"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"invalid_dimension_access\",\n  \"errorDescription\": \"dolor\",\n  \"errorId\": \"veniam ut ea commodo mol\",\n  \"errorDetails\": {\n    \"culpad\": {},\n    \"ea4\": {}\n  },\n  \"rootCauseService\": \"nisi ullamco nostrud enim\"\n}"
								},
								{
									"name": "Company mismatch; calculated metric ownership can only be transferred within the same organization",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/calculatedmetrics/:id?expansion=ownerFullName,approved&locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedmetrics",
												":id"
											],
											"query": [
												{
													"key": "expansion",
													"value": "ownerFullName,approved"
												},
												{
													"key": "locale",
													"value": "en_US"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) Calculated Metric ID to be updated"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"invalid_dimension_access\",\n  \"errorDescription\": \"dolor\",\n  \"errorId\": \"veniam ut ea commodo mol\",\n  \"errorDetails\": {\n    \"culpad\": {},\n    \"ea4\": {}\n  },\n  \"rootCauseService\": \"nisi ullamco nostrud enim\"\n}"
								},
								{
									"name": "User does not have permission to update this calculated metric",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/calculatedmetrics/:id?expansion=ownerFullName,approved&locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedmetrics",
												":id"
											],
											"query": [
												{
													"key": "expansion",
													"value": "ownerFullName,approved"
												},
												{
													"key": "locale",
													"value": "en_US"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) Calculated Metric ID to be updated"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"invalid_dimension_access\",\n  \"errorDescription\": \"dolor\",\n  \"errorId\": \"veniam ut ea commodo mol\",\n  \"errorDetails\": {\n    \"culpad\": {},\n    \"ea4\": {}\n  },\n  \"rootCauseService\": \"nisi ullamco nostrud enim\"\n}"
								},
								{
									"name": "External API error; Calculated metric update or retrieval failed",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/calculatedmetrics/:id?expansion=ownerFullName,approved&locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedmetrics",
												":id"
											],
											"query": [
												{
													"key": "expansion",
													"value": "ownerFullName,approved"
												},
												{
													"key": "locale",
													"value": "en_US"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) Calculated Metric ID to be updated"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"invalid_dimension_access\",\n  \"errorDescription\": \"dolor\",\n  \"errorId\": \"veniam ut ea commodo mol\",\n  \"errorDetails\": {\n    \"culpad\": {},\n    \"ea4\": {}\n  },\n  \"rootCauseService\": \"nisi ullamco nostrud enim\"\n}"
								}
							]
						},
						{
							"name": "Deletion of Calculated Metrics by Id",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/calculatedmetrics/:id?locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calculatedmetrics",
										":id"
									],
									"query": [
										{
											"key": "locale",
											"value": "en_US",
											"description": "Locale"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The calculated metric ID to be deleted"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/calculatedmetrics/:id?locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedmetrics",
												":id"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The calculated metric ID to be deleted"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"result\": \"proident sit\",\n  \"message\": \"est tempor do sed et\"\n}"
								},
								{
									"name": "External API error; Calculated metric delete failed",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/calculatedmetrics/:id?locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedmetrics",
												":id"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The calculated metric ID to be deleted"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"invalid_dimension_access\",\n  \"errorDescription\": \"dolor\",\n  \"errorId\": \"veniam ut ea commodo mol\",\n  \"errorDetails\": {\n    \"culpad\": {},\n    \"ea4\": {}\n  },\n  \"rootCauseService\": \"nisi ullamco nostrud enim\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "functions",
					"item": [
						{
							"name": "Retrieve calculated metric functions",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/calculatedmetrics/functions?locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calculatedmetrics",
										"functions"
									],
									"query": [
										{
											"key": "locale",
											"value": "en_US",
											"description": "Locale"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/calculatedmetrics/functions?locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedmetrics",
												"functions"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "External API error; Calculated metric functions retrieval failed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/calculatedmetrics/functions?locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedmetrics",
												"functions"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"invalid_dimension_access\",\n  \"errorDescription\": \"dolor\",\n  \"errorId\": \"veniam ut ea commodo mol\",\n  \"errorDetails\": {\n    \"culpad\": {},\n    \"ea4\": {}\n  },\n  \"rootCauseService\": \"nisi ullamco nostrud enim\"\n}"
								}
							]
						},
						{
							"name": "Retrieve a calculated metric function by id",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/calculatedmetrics/functions/:id?locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calculatedmetrics",
										"functions",
										":id"
									],
									"query": [
										{
											"key": "locale",
											"value": "en_US",
											"description": "Locale"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The function ID to retrieve"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/calculatedmetrics/functions/:id?locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedmetrics",
												"functions",
												":id"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The function ID to retrieve"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"Lorem_6\": {},\n  \"consectetur1b7\": {}\n}"
								},
								{
									"name": "Calculated metric function not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/calculatedmetrics/functions/:id?locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedmetrics",
												"functions",
												":id"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The function ID to retrieve"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"invalid_dimension_access\",\n  \"errorDescription\": \"dolor\",\n  \"errorId\": \"veniam ut ea commodo mol\",\n  \"errorDetails\": {\n    \"culpad\": {},\n    \"ea4\": {}\n  },\n  \"rootCauseService\": \"nisi ullamco nostrud enim\"\n}"
								},
								{
									"name": "External API error; Calculated metric function retrieval failed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/calculatedmetrics/functions/:id?locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedmetrics",
												"functions",
												":id"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The function ID to retrieve"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"invalid_dimension_access\",\n  \"errorDescription\": \"dolor\",\n  \"errorId\": \"veniam ut ea commodo mol\",\n  \"errorDetails\": {\n    \"culpad\": {},\n    \"ea4\": {}\n  },\n  \"rootCauseService\": \"nisi ullamco nostrud enim\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Retrieve many calculated metrics",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/calculatedmetrics?expansion=definition,shares&includeType=deleted,internal&rsids=aliqua&dataType=marketing_channel&ownerId=43407647&calculatedMetricFilter=aliqua&filterByIds=aliqua&toBeUsedInRsid=aliqua&locale=en_US&name=aliqua&dataGroup=aliqua&tagNames=aliqua&favorite=true&approved=true&pagination=true&filterByModifiedAfter=aliqua&includeDeleted=aliqua&curatedRsid=aliqua&limit=10&page=0&sortDirection=ASC&sortProperty=id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"calculatedmetrics"
							],
							"query": [
								{
									"key": "expansion",
									"value": "definition,shares",
									"description": "Comma-delimited list of additional calculated metric metadata fields to include on response."
								},
								{
									"key": "includeType",
									"value": "deleted,internal",
									"description": "Include additional calculated metrics not owned by user. The \"all\" option takes precedence over \"shared\""
								},
								{
									"key": "rsids",
									"value": "aliqua",
									"description": "Filter list to only include calculated metrics tied to specified RSID list (comma-delimited)"
								},
								{
									"key": "dataType",
									"value": "marketing_channel",
									"description": "Filter list to only include calculated metrics compatible with the specified product"
								},
								{
									"key": "ownerId",
									"value": "43407647",
									"description": "Filter list to only include calculated metrics owned by the specified loginId"
								},
								{
									"key": "calculatedMetricFilter",
									"value": "aliqua",
									"description": "Filter list to only include calculated metrics in the specified list (comma-delimited list of IDs)"
								},
								{
									"key": "filterByIds",
									"value": "aliqua",
									"description": "Filter list to only include calculated metrics in the specified list (comma-delimited list of IDs) (this is the same as calculatedMetricFilter, and is overwritten by calculatedMetricFilter"
								},
								{
									"key": "toBeUsedInRsid",
									"value": "aliqua",
									"description": "The report suite where the calculated metric intended to be used.  This report suite will be used to determine things like compatibility and permissions.  If it is not specified then the permissions will be calculated based on the union of all metrics authorized in all groups the user belongs to.  If the compatibility expansion is specified and toBeUsedInRsid is not then the compatibility returned is based off the compatibility from the last time the calculated metric was saved."
								},
								{
									"key": "locale",
									"value": "en_US",
									"description": "Locale"
								},
								{
									"key": "name",
									"value": "aliqua",
									"description": "Filter list to only include calculated metrics that contains the Name"
								},
								{
									"key": "dataGroup",
									"value": "aliqua",
									"description": "Filter list to only include calculated metrics with the given dataGroup"
								},
								{
									"key": "tagNames",
									"value": "aliqua",
									"description": "Filter list to only include calculated metrics that contains one of the tags"
								},
								{
									"key": "favorite",
									"value": "true",
									"description": "Filter list to only include calculated metrics that are favorites"
								},
								{
									"key": "approved",
									"value": "true",
									"description": "Filter list to only include calculated metrics that are approved"
								},
								{
									"key": "pagination",
									"value": "true",
									"description": "return paginated results"
								},
								{
									"key": "filterByModifiedAfter",
									"value": "aliqua",
									"description": "Filter list to only include calculated metrics modified since this date (ISO8601 format)"
								},
								{
									"key": "includeDeleted",
									"value": "aliqua",
									"description": "DEPRECATED use deleted includeType - include disabled calculated metrics in results"
								},
								{
									"key": "curatedRsid",
									"value": "aliqua",
									"description": "Add curatedItem and alternateVariableNames based on the Rsid"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Number of results per page"
								},
								{
									"key": "page",
									"value": "0",
									"description": "Page number (base 0 - first page is \"0\")"
								},
								{
									"key": "sortDirection",
									"value": "ASC",
									"description": "Sort direction (ASC or DESC)"
								},
								{
									"key": "sortProperty",
									"value": "id",
									"description": "Property to sort by (name, modified_date, id is currently allowed)"
								}
							]
						},
						"description": "A calculated metric response will always include these default items: *id, name, description, rsid, owner, polarity, precision, type* \n\nOther attributes can be optionally requested through the 'expansion' field:\n\n* *modified*: Date that the metric was last modified (ISO 8601)\n* *definition*: Calculated metric definition as JSON object\n* *compatibility*: Products that the metric is compatible with\n* *reportSuiteName*: Also return the friendly Report Suite name for the RSID\n* *tags*: Gives all existing tags associated with the calculated metric\n\nFor more information about calculated metrics go [here](https://github.com/AdobeDocs/analytics-2.0-apis/blob/master/calculatedmetrics.md)\n\n"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/calculatedmetrics?expansion=ownerFullName,approved&includeType=all,curatedItem&rsids=aliqua&dataType=marketing_channel&ownerId=43407647&calculatedMetricFilter=aliqua&filterByIds=aliqua&toBeUsedInRsid=aliqua&locale=en_US&name=aliqua&dataGroup=aliqua&tagNames=aliqua&favorite=true&approved=true&pagination=true&filterByModifiedAfter=aliqua&includeDeleted=aliqua&curatedRsid=aliqua&limit=10&page=0&sortDirection=ASC&sortProperty=id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calculatedmetrics"
									],
									"query": [
										{
											"key": "expansion",
											"value": "ownerFullName,approved"
										},
										{
											"key": "includeType",
											"value": "all,curatedItem"
										},
										{
											"key": "rsids",
											"value": "aliqua"
										},
										{
											"key": "dataType",
											"value": "marketing_channel"
										},
										{
											"key": "ownerId",
											"value": "43407647"
										},
										{
											"key": "calculatedMetricFilter",
											"value": "aliqua"
										},
										{
											"key": "filterByIds",
											"value": "aliqua"
										},
										{
											"key": "toBeUsedInRsid",
											"value": "aliqua"
										},
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "name",
											"value": "aliqua"
										},
										{
											"key": "dataGroup",
											"value": "aliqua"
										},
										{
											"key": "tagNames",
											"value": "aliqua"
										},
										{
											"key": "favorite",
											"value": "true"
										},
										{
											"key": "approved",
											"value": "true"
										},
										{
											"key": "pagination",
											"value": "true"
										},
										{
											"key": "filterByModifiedAfter",
											"value": "aliqua"
										},
										{
											"key": "includeDeleted",
											"value": "aliqua"
										},
										{
											"key": "curatedRsid",
											"value": "aliqua"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "sortDirection",
											"value": "ASC"
										},
										{
											"key": "sortProperty",
											"value": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"definition\": {\n      \"formula\": {\n        \"non_5d\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"func\": \"ex Lorem enim adipisicing elit\",\n      \"version\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"filters\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"id\": \"dolore\",\n    \"name\": \"Duis velit\",\n    \"description\": \"enim esse\",\n    \"rsid\": \"dolore dolore\",\n    \"reportSuiteName\": \"aute veniam\",\n    \"owner\": {\n      \"id\": 30199416,\n      \"imsUserId\": \"occaecat nisi veniam fugiat\"\n    },\n    \"isDeleted\": true,\n    \"migratedIds\": [\n      \"ipsum nostrud proident ullamco deserunt\",\n      \"anim\"\n    ],\n    \"internal\": false,\n    \"polarity\": \"positive\",\n    \"precision\": 96533271,\n    \"type\": \"percent\",\n    \"compatibility\": {\n      \"valid\": true,\n      \"message\": \"ut dolor ullamco\",\n      \"identityMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"identityDimensions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"segments\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"functions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"validator_version\": \"pariatur ad anim\",\n      \"supported_products\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"supported_schema\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"legacyId\": \"Duis eu cupi\",\n    \"template\": false,\n    \"authorization\": {\n      \"authorized\": false,\n      \"permissioned\": false,\n      \"unAuthorizedMetricIdentities\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"unAuthorizedSegmentIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"notAllowedForReportingMetricIdentities\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"allowedForReporting\": true\n    },\n    \"dataGroup\": \"enim consectetur velit nisi\",\n    \"curatedItem\": true,\n    \"alternateVariableNames\": {\n      \"name\": \"laborum non\",\n      \"baseName\": \"ipsum laboris Excepteur pariatur\",\n      \"curatedName\": \"consequat\"\n    },\n    \"reportTimeAttribution\": true,\n    \"solution\": false,\n    \"categories\": [\n      \"consectetur deserunt occaecat\",\n      \"nostrud Duis\"\n    ],\n    \"warning\": {\n      \"title\": \"pariatur in do sunt\",\n      \"text\": \"mollit adipisicing\",\n      \"helpLink\": \"sit minim velit veni\"\n    },\n    \"tags\": [\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"components\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"components\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"usageSummary\": {\n      \"count\": -19472603,\n      \"mostRecentTimestamp\": \"2003-07-02T18:06:18.397Z\",\n      \"itemId\": \"ex id\",\n      \"relevancyScore\": -32582332.484203875,\n      \"companyCount\": 45652821\n    },\n    \"shares\": [\n      {\n        \"componentId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToType\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"componentType\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToDisplayName\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToLogin\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToImsUserId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"accessLevel\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"componentId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToType\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"componentType\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToDisplayName\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToLogin\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToImsUserId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"accessLevel\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"approved\": true,\n    \"favorite\": false,\n    \"siteTitle\": \"do eiusmod\",\n    \"modified\": \"1997-02-09T09:18:02.970Z\",\n    \"created\": \"1989-04-19T11:14:24.944Z\"\n  },\n  {\n    \"definition\": {\n      \"formula\": {\n        \"ipsum5e\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dolor08a\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"func\": \"adipisicing nostrud ut in dolor\",\n      \"version\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"filters\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"id\": \"dolor ea in laboris mollit\",\n    \"name\": \"aliquip consectetur do Duis\",\n    \"description\": \"ullamco in anim\",\n    \"rsid\": \"ut id ea Duis\",\n    \"reportSuiteName\": \"sed ex laboris labore\",\n    \"owner\": {\n      \"id\": 21865732,\n      \"imsUserId\": \"pariatur in laboris ipsum\"\n    },\n    \"isDeleted\": true,\n    \"migratedIds\": [\n      \"ipsum esse dolor cupidatat est\",\n      \"esse magna\"\n    ],\n    \"internal\": false,\n    \"polarity\": \"negative\",\n    \"precision\": 45749046,\n    \"type\": \"decimal\",\n    \"compatibility\": {\n      \"valid\": true,\n      \"message\": \"laboris ad\",\n      \"identityMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"identityDimensions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"segments\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"functions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"validator_version\": \"nisi laboris est ut\",\n      \"supported_products\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"supported_schema\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"legacyId\": \"cillum ipsum tempor al\",\n    \"template\": true,\n    \"authorization\": {\n      \"authorized\": true,\n      \"permissioned\": true,\n      \"unAuthorizedMetricIdentities\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"unAuthorizedSegmentIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"notAllowedForReportingMetricIdentities\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"allowedForReporting\": true\n    },\n    \"dataGroup\": \"laborum nulla eu id deserunt\",\n    \"curatedItem\": false,\n    \"alternateVariableNames\": {\n      \"name\": \"Ut\",\n      \"baseName\": \"nulla\",\n      \"curatedName\": \"dolore ipsum incididunt id\"\n    },\n    \"reportTimeAttribution\": true,\n    \"solution\": false,\n    \"categories\": [\n      \"minim fugiat\",\n      \"ex\"\n    ],\n    \"warning\": {\n      \"title\": \"nostrud ullamco\",\n      \"text\": \"Ut enim ex ut eiusmod\",\n      \"helpLink\": \"aliqua id mollit ea\"\n    },\n    \"tags\": [\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"components\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"components\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"usageSummary\": {\n      \"count\": 717066,\n      \"mostRecentTimestamp\": \"1953-04-02T15:53:10.806Z\",\n      \"itemId\": \"pariatur nisi\",\n      \"relevancyScore\": 3818542.286938563,\n      \"companyCount\": -11781867\n    },\n    \"shares\": [\n      {\n        \"componentId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToType\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"componentType\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToDisplayName\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToLogin\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToImsUserId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"accessLevel\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"componentId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToType\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"componentType\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToDisplayName\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToLogin\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToImsUserId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"accessLevel\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"approved\": false,\n    \"favorite\": false,\n    \"siteTitle\": \"do non ipsum nostrud\",\n    \"modified\": \"1965-12-27T16:33:29.996Z\",\n    \"created\": \"1994-12-07T10:29:57.694Z\"\n  }\n]"
						},
						{
							"name": "Unable to retrieve list of calculated metrics shared with user",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/calculatedmetrics?expansion=ownerFullName,approved&includeType=all,curatedItem&rsids=aliqua&dataType=marketing_channel&ownerId=43407647&calculatedMetricFilter=aliqua&filterByIds=aliqua&toBeUsedInRsid=aliqua&locale=en_US&name=aliqua&dataGroup=aliqua&tagNames=aliqua&favorite=true&approved=true&pagination=true&filterByModifiedAfter=aliqua&includeDeleted=aliqua&curatedRsid=aliqua&limit=10&page=0&sortDirection=ASC&sortProperty=id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calculatedmetrics"
									],
									"query": [
										{
											"key": "expansion",
											"value": "ownerFullName,approved"
										},
										{
											"key": "includeType",
											"value": "all,curatedItem"
										},
										{
											"key": "rsids",
											"value": "aliqua"
										},
										{
											"key": "dataType",
											"value": "marketing_channel"
										},
										{
											"key": "ownerId",
											"value": "43407647"
										},
										{
											"key": "calculatedMetricFilter",
											"value": "aliqua"
										},
										{
											"key": "filterByIds",
											"value": "aliqua"
										},
										{
											"key": "toBeUsedInRsid",
											"value": "aliqua"
										},
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "name",
											"value": "aliqua"
										},
										{
											"key": "dataGroup",
											"value": "aliqua"
										},
										{
											"key": "tagNames",
											"value": "aliqua"
										},
										{
											"key": "favorite",
											"value": "true"
										},
										{
											"key": "approved",
											"value": "true"
										},
										{
											"key": "pagination",
											"value": "true"
										},
										{
											"key": "filterByModifiedAfter",
											"value": "aliqua"
										},
										{
											"key": "includeDeleted",
											"value": "aliqua"
										},
										{
											"key": "curatedRsid",
											"value": "aliqua"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "sortDirection",
											"value": "ASC"
										},
										{
											"key": "sortProperty",
											"value": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"invalid_dimension_access\",\n  \"errorDescription\": \"dolor\",\n  \"errorId\": \"veniam ut ea commodo mol\",\n  \"errorDetails\": {\n    \"culpad\": {},\n    \"ea4\": {}\n  },\n  \"rootCauseService\": \"nisi ullamco nostrud enim\"\n}"
						},
						{
							"name": "Owner filter error; user specified is not in the same company as the requesting user",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/calculatedmetrics?expansion=ownerFullName,approved&includeType=all,curatedItem&rsids=aliqua&dataType=marketing_channel&ownerId=43407647&calculatedMetricFilter=aliqua&filterByIds=aliqua&toBeUsedInRsid=aliqua&locale=en_US&name=aliqua&dataGroup=aliqua&tagNames=aliqua&favorite=true&approved=true&pagination=true&filterByModifiedAfter=aliqua&includeDeleted=aliqua&curatedRsid=aliqua&limit=10&page=0&sortDirection=ASC&sortProperty=id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calculatedmetrics"
									],
									"query": [
										{
											"key": "expansion",
											"value": "ownerFullName,approved"
										},
										{
											"key": "includeType",
											"value": "all,curatedItem"
										},
										{
											"key": "rsids",
											"value": "aliqua"
										},
										{
											"key": "dataType",
											"value": "marketing_channel"
										},
										{
											"key": "ownerId",
											"value": "43407647"
										},
										{
											"key": "calculatedMetricFilter",
											"value": "aliqua"
										},
										{
											"key": "filterByIds",
											"value": "aliqua"
										},
										{
											"key": "toBeUsedInRsid",
											"value": "aliqua"
										},
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "name",
											"value": "aliqua"
										},
										{
											"key": "dataGroup",
											"value": "aliqua"
										},
										{
											"key": "tagNames",
											"value": "aliqua"
										},
										{
											"key": "favorite",
											"value": "true"
										},
										{
											"key": "approved",
											"value": "true"
										},
										{
											"key": "pagination",
											"value": "true"
										},
										{
											"key": "filterByModifiedAfter",
											"value": "aliqua"
										},
										{
											"key": "includeDeleted",
											"value": "aliqua"
										},
										{
											"key": "curatedRsid",
											"value": "aliqua"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "sortDirection",
											"value": "ASC"
										},
										{
											"key": "sortProperty",
											"value": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"invalid_dimension_access\",\n  \"errorDescription\": \"dolor\",\n  \"errorId\": \"veniam ut ea commodo mol\",\n  \"errorDetails\": {\n    \"culpad\": {},\n    \"ea4\": {}\n  },\n  \"rootCauseService\": \"nisi ullamco nostrud enim\"\n}"
						},
						{
							"name": "Requesting non-shared calculated metrics for other users is restricted to admin users",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/calculatedmetrics?expansion=ownerFullName,approved&includeType=all,curatedItem&rsids=aliqua&dataType=marketing_channel&ownerId=43407647&calculatedMetricFilter=aliqua&filterByIds=aliqua&toBeUsedInRsid=aliqua&locale=en_US&name=aliqua&dataGroup=aliqua&tagNames=aliqua&favorite=true&approved=true&pagination=true&filterByModifiedAfter=aliqua&includeDeleted=aliqua&curatedRsid=aliqua&limit=10&page=0&sortDirection=ASC&sortProperty=id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calculatedmetrics"
									],
									"query": [
										{
											"key": "expansion",
											"value": "ownerFullName,approved"
										},
										{
											"key": "includeType",
											"value": "all,curatedItem"
										},
										{
											"key": "rsids",
											"value": "aliqua"
										},
										{
											"key": "dataType",
											"value": "marketing_channel"
										},
										{
											"key": "ownerId",
											"value": "43407647"
										},
										{
											"key": "calculatedMetricFilter",
											"value": "aliqua"
										},
										{
											"key": "filterByIds",
											"value": "aliqua"
										},
										{
											"key": "toBeUsedInRsid",
											"value": "aliqua"
										},
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "name",
											"value": "aliqua"
										},
										{
											"key": "dataGroup",
											"value": "aliqua"
										},
										{
											"key": "tagNames",
											"value": "aliqua"
										},
										{
											"key": "favorite",
											"value": "true"
										},
										{
											"key": "approved",
											"value": "true"
										},
										{
											"key": "pagination",
											"value": "true"
										},
										{
											"key": "filterByModifiedAfter",
											"value": "aliqua"
										},
										{
											"key": "includeDeleted",
											"value": "aliqua"
										},
										{
											"key": "curatedRsid",
											"value": "aliqua"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "sortDirection",
											"value": "ASC"
										},
										{
											"key": "sortProperty",
											"value": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"invalid_dimension_access\",\n  \"errorDescription\": \"dolor\",\n  \"errorId\": \"veniam ut ea commodo mol\",\n  \"errorDetails\": {\n    \"culpad\": {},\n    \"ea4\": {}\n  },\n  \"rootCauseService\": \"nisi ullamco nostrud enim\"\n}"
						},
						{
							"name": "External API error; Calculated metric retrieval failed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/calculatedmetrics?expansion=ownerFullName,approved&includeType=all,curatedItem&rsids=aliqua&dataType=marketing_channel&ownerId=43407647&calculatedMetricFilter=aliqua&filterByIds=aliqua&toBeUsedInRsid=aliqua&locale=en_US&name=aliqua&dataGroup=aliqua&tagNames=aliqua&favorite=true&approved=true&pagination=true&filterByModifiedAfter=aliqua&includeDeleted=aliqua&curatedRsid=aliqua&limit=10&page=0&sortDirection=ASC&sortProperty=id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calculatedmetrics"
									],
									"query": [
										{
											"key": "expansion",
											"value": "ownerFullName,approved"
										},
										{
											"key": "includeType",
											"value": "all,curatedItem"
										},
										{
											"key": "rsids",
											"value": "aliqua"
										},
										{
											"key": "dataType",
											"value": "marketing_channel"
										},
										{
											"key": "ownerId",
											"value": "43407647"
										},
										{
											"key": "calculatedMetricFilter",
											"value": "aliqua"
										},
										{
											"key": "filterByIds",
											"value": "aliqua"
										},
										{
											"key": "toBeUsedInRsid",
											"value": "aliqua"
										},
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "name",
											"value": "aliqua"
										},
										{
											"key": "dataGroup",
											"value": "aliqua"
										},
										{
											"key": "tagNames",
											"value": "aliqua"
										},
										{
											"key": "favorite",
											"value": "true"
										},
										{
											"key": "approved",
											"value": "true"
										},
										{
											"key": "pagination",
											"value": "true"
										},
										{
											"key": "filterByModifiedAfter",
											"value": "aliqua"
										},
										{
											"key": "includeDeleted",
											"value": "aliqua"
										},
										{
											"key": "curatedRsid",
											"value": "aliqua"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "sortDirection",
											"value": "ASC"
										},
										{
											"key": "sortProperty",
											"value": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"invalid_dimension_access\",\n  \"errorDescription\": \"dolor\",\n  \"errorId\": \"veniam ut ea commodo mol\",\n  \"errorDetails\": {\n    \"culpad\": {},\n    \"ea4\": {}\n  },\n  \"rootCauseService\": \"nisi ullamco nostrud enim\"\n}"
						}
					]
				},
				{
					"name": "Create a new Calculated Metric",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"Lorem_6\": {},\n  \"consectetur1b7\": {}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/calculatedmetrics?expansion=definition,shares&locale=en_US",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"calculatedmetrics"
							],
							"query": [
								{
									"key": "expansion",
									"value": "definition,shares",
									"description": "Comma-delimited list of additional calculated metric metadata fields to include on response."
								},
								{
									"key": "locale",
									"value": "en_US",
									"description": "Locale"
								}
							]
						},
						"description": "Creates a new calculated metric. The following attributes are available when creating a calculated metric:\n\nIMPORTANT: Required Fields: name, definition, rsid\n\nOptional fields: description\n\nExample definition for use in testing API below (\"Visits per visitor\"):\n\n```json\n\n\"definition\": {\r\n      \"formula\": {\r\n        \"func\": \"divide\",\r\n        \"col1\": {\r\n          \"func\": \"metric\",\r\n          \"name\": \"metrics/visits\",\r\n          \"description\": \"Visits\"\r\n        },\r\n        \"col2\": {\r\n          \"func\": \"metric\",\r\n          \"name\": \"metrics/visitors\",\r\n          \"description\": \"Unique Visitors\"\r\n        }\r\n      },\r\n      \"func\": \"calc-metric\",\r\n      \"version\": [\r\n        1,\r\n        0,\r\n        0\r\n      ]\r\n    }\n```\n\nA calculated metric response will always include these default items:* id, name, description, rsid, owner* \n\nOther attributes can be optionally requested through the 'expansion' field as defined/documented in the GET endpoints (see GET \"/calculatedmetrics\" or GET \"/calculatedmetrics/{id}\" for more documentation)."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"Lorem_6\": {},\n  \"consectetur1b7\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/calculatedmetrics?expansion=ownerFullName,approved&locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calculatedmetrics"
									],
									"query": [
										{
											"key": "expansion",
											"value": "ownerFullName,approved"
										},
										{
											"key": "locale",
											"value": "en_US"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"definition\": {\n    \"formula\": {\n      \"occaecat_2e\": {},\n      \"ut373\": {}\n    },\n    \"func\": \"Lorem\",\n    \"version\": [\n      -68042946,\n      -93085616\n    ],\n    \"filters\": [\n      {\n        \"cupidatat_29\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"anim_2\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"exercitation__00\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"proident0\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"proident_\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"proident_bb\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ]\n  },\n  \"id\": \"consequat culpa Ut sint\",\n  \"name\": \"aute eu veniam esse\",\n  \"description\": \"eu Duis in irure\",\n  \"rsid\": \"elit\",\n  \"reportSuiteName\": \"sit sunt fugiat proident ut\",\n  \"owner\": {\n    \"id\": 63006406,\n    \"imsUserId\": \"ut eu qui non\"\n  },\n  \"isDeleted\": true,\n  \"migratedIds\": [\n    \"ad\",\n    \"sint\"\n  ],\n  \"internal\": false,\n  \"polarity\": \"negative\",\n  \"precision\": 45536629,\n  \"type\": \"currency\",\n  \"compatibility\": {\n    \"valid\": true,\n    \"message\": \"eiusmod cillum Duis culpa\",\n    \"identityMetrics\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"identityDimensions\": [\n      \"sunt l\",\n      \"aliquip in\"\n    ],\n    \"segments\": [\n      \"ex dolore aliquip\",\n      \"Excepteur aliqua exercitation culpa\"\n    ],\n    \"functions\": [\n      \"commodo\",\n      \"occaecat enim\"\n    ],\n    \"validator_version\": \"incididunt labore\",\n    \"supported_products\": [\n      \"aliquip voluptate nostrud tempor eiusmod\",\n      \"sit ipsum\"\n    ],\n    \"supported_schema\": [\n      \"l\",\n      \"ad minim\"\n    ]\n  },\n  \"legacyId\": \"incididunt adipisicing\",\n  \"template\": false,\n  \"authorization\": {\n    \"authorized\": true,\n    \"permissioned\": false,\n    \"unAuthorizedMetricIdentities\": [\n      \"aliqua\",\n      \"dolore\"\n    ],\n    \"unAuthorizedSegmentIds\": [\n      \"aliquip nulla\",\n      \"Lorem quis culpa\"\n    ],\n    \"notAllowedForReportingMetricIdentities\": [\n      \"mollit ea\",\n      \"proident\"\n    ],\n    \"allowedForReporting\": false\n  },\n  \"dataGroup\": \"non mollit occaecat\",\n  \"curatedItem\": false,\n  \"alternateVariableNames\": {\n    \"name\": \"ea tempor\",\n    \"baseName\": \"in quis enim\",\n    \"curatedName\": \"ad minim ullamco qui\"\n  },\n  \"reportTimeAttribution\": false,\n  \"solution\": false,\n  \"categories\": [\n    \"Duis velit\",\n    \"dolor in\"\n  ],\n  \"warning\": {\n    \"title\": \"ipsu\",\n    \"text\": \"magna culpa Duis ullamco\",\n    \"helpLink\": \"quis do amet officia\"\n  },\n  \"tags\": [\n    {\n      \"id\": 19255839,\n      \"name\": \"labore laboris aute non\",\n      \"description\": \"commodo veniam incididunt occaecat dolore\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": -88624355,\n      \"name\": \"sint\",\n      \"description\": \"tempor nisi in et est\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"usageSummary\": {\n    \"count\": 39627982,\n    \"mostRecentTimestamp\": \"1980-01-05T19:16:53.887Z\",\n    \"itemId\": \"est sint\",\n    \"relevancyScore\": -38746441.30134741,\n    \"companyCount\": 25178941\n  },\n  \"shares\": [\n    {\n      \"componentId\": \"adipisicing ut nulla\",\n      \"shareToId\": -38955629,\n      \"shareToType\": \"elit dolore dolor\",\n      \"shareId\": -7367148,\n      \"componentType\": \"qui f\",\n      \"shareToDisplayName\": \"cillum fugiat Duis\",\n      \"shareToLogin\": \"ad\",\n      \"shareToImsUserId\": \"sunt aliqua elit nisi\",\n      \"accessLevel\": \"officia\"\n    },\n    {\n      \"componentId\": \"eiusmod magna id\",\n      \"shareToId\": -69199711,\n      \"shareToType\": \"incididunt \",\n      \"shareId\": 29648198,\n      \"componentType\": \"Lorem nostrud enim amet\",\n      \"shareToDisplayName\": \"cupidatat\",\n      \"shareToLogin\": \"in adipisicing\",\n      \"shareToImsUserId\": \"ad cupidatat velit\",\n      \"accessLevel\": \"officia\"\n    }\n  ],\n  \"approved\": true,\n  \"favorite\": true,\n  \"siteTitle\": \"laborum commodo eu\",\n  \"modified\": \"1979-05-30T14:33:40.194Z\",\n  \"created\": \"1942-11-15T04:55:01.397Z\"\n}"
						},
						{
							"name": "Invalid input; name, rsid, and definition are all required. Definition must be formatted as a JSON Object.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"Lorem_6\": {},\n  \"consectetur1b7\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/calculatedmetrics?expansion=ownerFullName,approved&locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calculatedmetrics"
									],
									"query": [
										{
											"key": "expansion",
											"value": "ownerFullName,approved"
										},
										{
											"key": "locale",
											"value": "en_US"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"invalid_dimension_access\",\n  \"errorDescription\": \"dolor\",\n  \"errorId\": \"veniam ut ea commodo mol\",\n  \"errorDetails\": {\n    \"culpad\": {},\n    \"ea4\": {}\n  },\n  \"rootCauseService\": \"nisi ullamco nostrud enim\"\n}"
						},
						{
							"name": "External API error; Calculated metric create or retrieval failed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"Lorem_6\": {},\n  \"consectetur1b7\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/calculatedmetrics?expansion=ownerFullName,approved&locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calculatedmetrics"
									],
									"query": [
										{
											"key": "expansion",
											"value": "ownerFullName,approved"
										},
										{
											"key": "locale",
											"value": "en_US"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"invalid_dimension_access\",\n  \"errorDescription\": \"dolor\",\n  \"errorId\": \"veniam ut ea commodo mol\",\n  \"errorDetails\": {\n    \"culpad\": {},\n    \"ea4\": {}\n  },\n  \"rootCauseService\": \"nisi ullamco nostrud enim\"\n}"
						}
					]
				},
				{
					"name": "Validate a calculated metric definition",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"definition\": {\n    \"formula\": {\n      \"temporccc\": {},\n      \"nostrudf\": {}\n    },\n    \"func\": \"cupidatat\",\n    \"version\": [\n      -98802791,\n      62333365\n    ],\n    \"filters\": [\n      {\n        \"anim_c\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"deserunt_58\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"occaecat21b\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"laboris_069\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"laboris_e8b\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ]\n  },\n  \"name\": \"cupidatat magna Lorem\",\n  \"description\": \"qui sed\",\n  \"rsid\": \"culpa id\",\n  \"owner\": {\n    \"id\": -5141980,\n    \"imsUserId\": \"aliquip\"\n  },\n  \"isDeleted\": true,\n  \"migratedIds\": [\n    \"id consectetur qui ipsum\",\n    \"laboris \"\n  ],\n  \"internal\": true,\n  \"polarity\": \"negative\",\n  \"precision\": 17927127,\n  \"type\": \"percent\",\n  \"compatibility\": {\n    \"valid\": true,\n    \"message\": \"do culpa laboris\",\n    \"identityMetrics\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"identityDimensions\": [\n      \"esse occaecat irure\",\n      \"est veniam dolor nostrud\"\n    ],\n    \"segments\": [\n      \"incididunt nostrud\",\n      \"esse ea eiusmod\"\n    ],\n    \"functions\": [\n      \"Lorem dolor aute\",\n      \"qui dolore Excepteur laboris\"\n    ],\n    \"validator_version\": \"reprehenderit eu\",\n    \"supported_products\": [\n      \"reprehenderit anim\",\n      \"ex fugiat\"\n    ],\n    \"supported_schema\": [\n      \"in et minim Excepteur\",\n      \"sunt enim tempor ad\"\n    ]\n  },\n  \"legacyId\": \"magna\",\n  \"template\": true,\n  \"authorization\": {\n    \"authorized\": false,\n    \"permissioned\": true,\n    \"unAuthorizedMetricIdentities\": [\n      \"qui dol\",\n      \"cupi\"\n    ],\n    \"unAuthorizedSegmentIds\": [\n      \"labore\",\n      \"irure ut\"\n    ],\n    \"notAllowedForReportingMetricIdentities\": [\n      \"non\",\n      \"commodo aute dolore\"\n    ],\n    \"allowedForReporting\": true\n  },\n  \"dataGroup\": \"amet est qui\",\n  \"curatedItem\": true,\n  \"alternateVariableNames\": {\n    \"name\": \"enim deserunt quis ea\",\n    \"baseName\": \"nisi enim nulla\",\n    \"curatedName\": \"incid\"\n  },\n  \"reportTimeAttribution\": true,\n  \"solution\": false,\n  \"categories\": [\n    \"laboris ullamco\",\n    \"fugiat aliqu\"\n  ],\n  \"warning\": {\n    \"title\": \"pariatu\",\n    \"text\": \"cupidatat ullamco\",\n    \"helpLink\": \"ea es\"\n  },\n  \"tags\": [\n    {\n      \"id\": 15191650,\n      \"name\": \"non ullamco pariatur laborum id\",\n      \"description\": \"tempor in\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": -80817292,\n      \"name\": \"velit in proident\",\n      \"description\": \"cupidata\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"usageSummary\": {\n    \"count\": 45534083,\n    \"mostRecentTimestamp\": \"2021-09-17T01:22:22.378Z\",\n    \"itemId\": \"dolore enim\",\n    \"relevancyScore\": 61939212.51955125,\n    \"companyCount\": -84672431\n  },\n  \"shares\": [\n    {\n      \"componentId\": \"proident in ea dolor\",\n      \"shareToId\": -52583951,\n      \"shareToType\": \"quis id qui\",\n      \"shareId\": -59630658,\n      \"componentType\": \"commodo tempor\",\n      \"shareToDisplayName\": \"incididunt\",\n      \"shareToLogin\": \"cupidatat labore aute\",\n      \"shareToImsUserId\": \"aliqua enim esse\",\n      \"accessLevel\": \"dolor in culpa\"\n    },\n    {\n      \"componentId\": \"veniam dolore eu dolor\",\n      \"shareToId\": 5061944,\n      \"shareToType\": \"velit eiusmod\",\n      \"shareId\": -56015318,\n      \"componentType\": \"eu dolor ipsum veniam\",\n      \"shareToDisplayName\": \"incididunt in ad\",\n      \"shareToLogin\": \"aute commodo sunt adipisicing\",\n      \"shareToImsUserId\": \"dolore est\",\n      \"accessLevel\": \"officia qui\"\n    }\n  ],\n  \"approved\": false,\n  \"favorite\": true,\n  \"siteTitle\": \"ut qui in labore\",\n  \"modified\": \"1970-01-24T09:47:48.005Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/calculatedmetrics/validate?locale=en_US&migrating=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"calculatedmetrics",
								"validate"
							],
							"query": [
								{
									"key": "locale",
									"value": "en_US",
									"description": "Locale"
								},
								{
									"key": "migrating",
									"value": "false",
									"description": "Include migration functions in validation"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"definition\": {\n    \"formula\": {\n      \"temporccc\": {},\n      \"nostrudf\": {}\n    },\n    \"func\": \"cupidatat\",\n    \"version\": [\n      -98802791,\n      62333365\n    ],\n    \"filters\": [\n      {\n        \"anim_c\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"deserunt_58\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"occaecat21b\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"laboris_069\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"laboris_e8b\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ]\n  },\n  \"name\": \"cupidatat magna Lorem\",\n  \"description\": \"qui sed\",\n  \"rsid\": \"culpa id\",\n  \"owner\": {\n    \"id\": -5141980,\n    \"imsUserId\": \"aliquip\"\n  },\n  \"isDeleted\": true,\n  \"migratedIds\": [\n    \"id consectetur qui ipsum\",\n    \"laboris \"\n  ],\n  \"internal\": true,\n  \"polarity\": \"negative\",\n  \"precision\": 17927127,\n  \"type\": \"percent\",\n  \"compatibility\": {\n    \"valid\": true,\n    \"message\": \"do culpa laboris\",\n    \"identityMetrics\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"identityDimensions\": [\n      \"esse occaecat irure\",\n      \"est veniam dolor nostrud\"\n    ],\n    \"segments\": [\n      \"incididunt nostrud\",\n      \"esse ea eiusmod\"\n    ],\n    \"functions\": [\n      \"Lorem dolor aute\",\n      \"qui dolore Excepteur laboris\"\n    ],\n    \"validator_version\": \"reprehenderit eu\",\n    \"supported_products\": [\n      \"reprehenderit anim\",\n      \"ex fugiat\"\n    ],\n    \"supported_schema\": [\n      \"in et minim Excepteur\",\n      \"sunt enim tempor ad\"\n    ]\n  },\n  \"legacyId\": \"magna\",\n  \"template\": true,\n  \"authorization\": {\n    \"authorized\": false,\n    \"permissioned\": true,\n    \"unAuthorizedMetricIdentities\": [\n      \"qui dol\",\n      \"cupi\"\n    ],\n    \"unAuthorizedSegmentIds\": [\n      \"labore\",\n      \"irure ut\"\n    ],\n    \"notAllowedForReportingMetricIdentities\": [\n      \"non\",\n      \"commodo aute dolore\"\n    ],\n    \"allowedForReporting\": true\n  },\n  \"dataGroup\": \"amet est qui\",\n  \"curatedItem\": true,\n  \"alternateVariableNames\": {\n    \"name\": \"enim deserunt quis ea\",\n    \"baseName\": \"nisi enim nulla\",\n    \"curatedName\": \"incid\"\n  },\n  \"reportTimeAttribution\": true,\n  \"solution\": false,\n  \"categories\": [\n    \"laboris ullamco\",\n    \"fugiat aliqu\"\n  ],\n  \"warning\": {\n    \"title\": \"pariatu\",\n    \"text\": \"cupidatat ullamco\",\n    \"helpLink\": \"ea es\"\n  },\n  \"tags\": [\n    {\n      \"id\": 15191650,\n      \"name\": \"non ullamco pariatur laborum id\",\n      \"description\": \"tempor in\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": -80817292,\n      \"name\": \"velit in proident\",\n      \"description\": \"cupidata\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"usageSummary\": {\n    \"count\": 45534083,\n    \"mostRecentTimestamp\": \"2021-09-17T01:22:22.378Z\",\n    \"itemId\": \"dolore enim\",\n    \"relevancyScore\": 61939212.51955125,\n    \"companyCount\": -84672431\n  },\n  \"shares\": [\n    {\n      \"componentId\": \"proident in ea dolor\",\n      \"shareToId\": -52583951,\n      \"shareToType\": \"quis id qui\",\n      \"shareId\": -59630658,\n      \"componentType\": \"commodo tempor\",\n      \"shareToDisplayName\": \"incididunt\",\n      \"shareToLogin\": \"cupidatat labore aute\",\n      \"shareToImsUserId\": \"aliqua enim esse\",\n      \"accessLevel\": \"dolor in culpa\"\n    },\n    {\n      \"componentId\": \"veniam dolore eu dolor\",\n      \"shareToId\": 5061944,\n      \"shareToType\": \"velit eiusmod\",\n      \"shareId\": -56015318,\n      \"componentType\": \"eu dolor ipsum veniam\",\n      \"shareToDisplayName\": \"incididunt in ad\",\n      \"shareToLogin\": \"aute commodo sunt adipisicing\",\n      \"shareToImsUserId\": \"dolore est\",\n      \"accessLevel\": \"officia qui\"\n    }\n  ],\n  \"approved\": false,\n  \"favorite\": true,\n  \"siteTitle\": \"ut qui in labore\",\n  \"modified\": \"1970-01-24T09:47:48.005Z\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/calculatedmetrics/validate?locale=en_US&migrating=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calculatedmetrics",
										"validate"
									],
									"query": [
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "migrating",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"definition\": {\n    \"formula\": {\n      \"occaecat_2e\": {},\n      \"ut373\": {}\n    },\n    \"func\": \"Lorem\",\n    \"version\": [\n      -68042946,\n      -93085616\n    ],\n    \"filters\": [\n      {\n        \"cupidatat_29\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"anim_2\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"exercitation__00\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"proident0\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"proident_\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"proident_bb\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ]\n  },\n  \"id\": \"consequat culpa Ut sint\",\n  \"name\": \"aute eu veniam esse\",\n  \"description\": \"eu Duis in irure\",\n  \"rsid\": \"elit\",\n  \"reportSuiteName\": \"sit sunt fugiat proident ut\",\n  \"owner\": {\n    \"id\": 63006406,\n    \"imsUserId\": \"ut eu qui non\"\n  },\n  \"isDeleted\": true,\n  \"migratedIds\": [\n    \"ad\",\n    \"sint\"\n  ],\n  \"internal\": false,\n  \"polarity\": \"negative\",\n  \"precision\": 45536629,\n  \"type\": \"currency\",\n  \"compatibility\": {\n    \"valid\": true,\n    \"message\": \"eiusmod cillum Duis culpa\",\n    \"identityMetrics\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"identityDimensions\": [\n      \"sunt l\",\n      \"aliquip in\"\n    ],\n    \"segments\": [\n      \"ex dolore aliquip\",\n      \"Excepteur aliqua exercitation culpa\"\n    ],\n    \"functions\": [\n      \"commodo\",\n      \"occaecat enim\"\n    ],\n    \"validator_version\": \"incididunt labore\",\n    \"supported_products\": [\n      \"aliquip voluptate nostrud tempor eiusmod\",\n      \"sit ipsum\"\n    ],\n    \"supported_schema\": [\n      \"l\",\n      \"ad minim\"\n    ]\n  },\n  \"legacyId\": \"incididunt adipisicing\",\n  \"template\": false,\n  \"authorization\": {\n    \"authorized\": true,\n    \"permissioned\": false,\n    \"unAuthorizedMetricIdentities\": [\n      \"aliqua\",\n      \"dolore\"\n    ],\n    \"unAuthorizedSegmentIds\": [\n      \"aliquip nulla\",\n      \"Lorem quis culpa\"\n    ],\n    \"notAllowedForReportingMetricIdentities\": [\n      \"mollit ea\",\n      \"proident\"\n    ],\n    \"allowedForReporting\": false\n  },\n  \"dataGroup\": \"non mollit occaecat\",\n  \"curatedItem\": false,\n  \"alternateVariableNames\": {\n    \"name\": \"ea tempor\",\n    \"baseName\": \"in quis enim\",\n    \"curatedName\": \"ad minim ullamco qui\"\n  },\n  \"reportTimeAttribution\": false,\n  \"solution\": false,\n  \"categories\": [\n    \"Duis velit\",\n    \"dolor in\"\n  ],\n  \"warning\": {\n    \"title\": \"ipsu\",\n    \"text\": \"magna culpa Duis ullamco\",\n    \"helpLink\": \"quis do amet officia\"\n  },\n  \"tags\": [\n    {\n      \"id\": 19255839,\n      \"name\": \"labore laboris aute non\",\n      \"description\": \"commodo veniam incididunt occaecat dolore\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": -88624355,\n      \"name\": \"sint\",\n      \"description\": \"tempor nisi in et est\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"usageSummary\": {\n    \"count\": 39627982,\n    \"mostRecentTimestamp\": \"1980-01-05T19:16:53.887Z\",\n    \"itemId\": \"est sint\",\n    \"relevancyScore\": -38746441.30134741,\n    \"companyCount\": 25178941\n  },\n  \"shares\": [\n    {\n      \"componentId\": \"adipisicing ut nulla\",\n      \"shareToId\": -38955629,\n      \"shareToType\": \"elit dolore dolor\",\n      \"shareId\": -7367148,\n      \"componentType\": \"qui f\",\n      \"shareToDisplayName\": \"cillum fugiat Duis\",\n      \"shareToLogin\": \"ad\",\n      \"shareToImsUserId\": \"sunt aliqua elit nisi\",\n      \"accessLevel\": \"officia\"\n    },\n    {\n      \"componentId\": \"eiusmod magna id\",\n      \"shareToId\": -69199711,\n      \"shareToType\": \"incididunt \",\n      \"shareId\": 29648198,\n      \"componentType\": \"Lorem nostrud enim amet\",\n      \"shareToDisplayName\": \"cupidatat\",\n      \"shareToLogin\": \"in adipisicing\",\n      \"shareToImsUserId\": \"ad cupidatat velit\",\n      \"accessLevel\": \"officia\"\n    }\n  ],\n  \"approved\": true,\n  \"favorite\": true,\n  \"siteTitle\": \"laborum commodo eu\",\n  \"modified\": \"1979-05-30T14:33:40.194Z\",\n  \"created\": \"1942-11-15T04:55:01.397Z\"\n}"
						},
						{
							"name": "Invalid input; name, rsid, and definition are all required. Definition must be formatted as a JSON Object.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"definition\": {\n    \"formula\": {\n      \"temporccc\": {},\n      \"nostrudf\": {}\n    },\n    \"func\": \"cupidatat\",\n    \"version\": [\n      -98802791,\n      62333365\n    ],\n    \"filters\": [\n      {\n        \"anim_c\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"deserunt_58\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"occaecat21b\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"laboris_069\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"laboris_e8b\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ]\n  },\n  \"name\": \"cupidatat magna Lorem\",\n  \"description\": \"qui sed\",\n  \"rsid\": \"culpa id\",\n  \"owner\": {\n    \"id\": -5141980,\n    \"imsUserId\": \"aliquip\"\n  },\n  \"isDeleted\": true,\n  \"migratedIds\": [\n    \"id consectetur qui ipsum\",\n    \"laboris \"\n  ],\n  \"internal\": true,\n  \"polarity\": \"negative\",\n  \"precision\": 17927127,\n  \"type\": \"percent\",\n  \"compatibility\": {\n    \"valid\": true,\n    \"message\": \"do culpa laboris\",\n    \"identityMetrics\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"identityDimensions\": [\n      \"esse occaecat irure\",\n      \"est veniam dolor nostrud\"\n    ],\n    \"segments\": [\n      \"incididunt nostrud\",\n      \"esse ea eiusmod\"\n    ],\n    \"functions\": [\n      \"Lorem dolor aute\",\n      \"qui dolore Excepteur laboris\"\n    ],\n    \"validator_version\": \"reprehenderit eu\",\n    \"supported_products\": [\n      \"reprehenderit anim\",\n      \"ex fugiat\"\n    ],\n    \"supported_schema\": [\n      \"in et minim Excepteur\",\n      \"sunt enim tempor ad\"\n    ]\n  },\n  \"legacyId\": \"magna\",\n  \"template\": true,\n  \"authorization\": {\n    \"authorized\": false,\n    \"permissioned\": true,\n    \"unAuthorizedMetricIdentities\": [\n      \"qui dol\",\n      \"cupi\"\n    ],\n    \"unAuthorizedSegmentIds\": [\n      \"labore\",\n      \"irure ut\"\n    ],\n    \"notAllowedForReportingMetricIdentities\": [\n      \"non\",\n      \"commodo aute dolore\"\n    ],\n    \"allowedForReporting\": true\n  },\n  \"dataGroup\": \"amet est qui\",\n  \"curatedItem\": true,\n  \"alternateVariableNames\": {\n    \"name\": \"enim deserunt quis ea\",\n    \"baseName\": \"nisi enim nulla\",\n    \"curatedName\": \"incid\"\n  },\n  \"reportTimeAttribution\": true,\n  \"solution\": false,\n  \"categories\": [\n    \"laboris ullamco\",\n    \"fugiat aliqu\"\n  ],\n  \"warning\": {\n    \"title\": \"pariatu\",\n    \"text\": \"cupidatat ullamco\",\n    \"helpLink\": \"ea es\"\n  },\n  \"tags\": [\n    {\n      \"id\": 15191650,\n      \"name\": \"non ullamco pariatur laborum id\",\n      \"description\": \"tempor in\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": -80817292,\n      \"name\": \"velit in proident\",\n      \"description\": \"cupidata\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"usageSummary\": {\n    \"count\": 45534083,\n    \"mostRecentTimestamp\": \"2021-09-17T01:22:22.378Z\",\n    \"itemId\": \"dolore enim\",\n    \"relevancyScore\": 61939212.51955125,\n    \"companyCount\": -84672431\n  },\n  \"shares\": [\n    {\n      \"componentId\": \"proident in ea dolor\",\n      \"shareToId\": -52583951,\n      \"shareToType\": \"quis id qui\",\n      \"shareId\": -59630658,\n      \"componentType\": \"commodo tempor\",\n      \"shareToDisplayName\": \"incididunt\",\n      \"shareToLogin\": \"cupidatat labore aute\",\n      \"shareToImsUserId\": \"aliqua enim esse\",\n      \"accessLevel\": \"dolor in culpa\"\n    },\n    {\n      \"componentId\": \"veniam dolore eu dolor\",\n      \"shareToId\": 5061944,\n      \"shareToType\": \"velit eiusmod\",\n      \"shareId\": -56015318,\n      \"componentType\": \"eu dolor ipsum veniam\",\n      \"shareToDisplayName\": \"incididunt in ad\",\n      \"shareToLogin\": \"aute commodo sunt adipisicing\",\n      \"shareToImsUserId\": \"dolore est\",\n      \"accessLevel\": \"officia qui\"\n    }\n  ],\n  \"approved\": false,\n  \"favorite\": true,\n  \"siteTitle\": \"ut qui in labore\",\n  \"modified\": \"1970-01-24T09:47:48.005Z\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/calculatedmetrics/validate?locale=en_US&migrating=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calculatedmetrics",
										"validate"
									],
									"query": [
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "migrating",
											"value": "false"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"invalid_dimension_access\",\n  \"errorDescription\": \"dolor\",\n  \"errorId\": \"veniam ut ea commodo mol\",\n  \"errorDetails\": {\n    \"culpad\": {},\n    \"ea4\": {}\n  },\n  \"rootCauseService\": \"nisi ullamco nostrud enim\"\n}"
						},
						{
							"name": "External API error; Calculated metric validation failed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"definition\": {\n    \"formula\": {\n      \"temporccc\": {},\n      \"nostrudf\": {}\n    },\n    \"func\": \"cupidatat\",\n    \"version\": [\n      -98802791,\n      62333365\n    ],\n    \"filters\": [\n      {\n        \"anim_c\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"deserunt_58\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"occaecat21b\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"laboris_069\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"laboris_e8b\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ]\n  },\n  \"name\": \"cupidatat magna Lorem\",\n  \"description\": \"qui sed\",\n  \"rsid\": \"culpa id\",\n  \"owner\": {\n    \"id\": -5141980,\n    \"imsUserId\": \"aliquip\"\n  },\n  \"isDeleted\": true,\n  \"migratedIds\": [\n    \"id consectetur qui ipsum\",\n    \"laboris \"\n  ],\n  \"internal\": true,\n  \"polarity\": \"negative\",\n  \"precision\": 17927127,\n  \"type\": \"percent\",\n  \"compatibility\": {\n    \"valid\": true,\n    \"message\": \"do culpa laboris\",\n    \"identityMetrics\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"identityDimensions\": [\n      \"esse occaecat irure\",\n      \"est veniam dolor nostrud\"\n    ],\n    \"segments\": [\n      \"incididunt nostrud\",\n      \"esse ea eiusmod\"\n    ],\n    \"functions\": [\n      \"Lorem dolor aute\",\n      \"qui dolore Excepteur laboris\"\n    ],\n    \"validator_version\": \"reprehenderit eu\",\n    \"supported_products\": [\n      \"reprehenderit anim\",\n      \"ex fugiat\"\n    ],\n    \"supported_schema\": [\n      \"in et minim Excepteur\",\n      \"sunt enim tempor ad\"\n    ]\n  },\n  \"legacyId\": \"magna\",\n  \"template\": true,\n  \"authorization\": {\n    \"authorized\": false,\n    \"permissioned\": true,\n    \"unAuthorizedMetricIdentities\": [\n      \"qui dol\",\n      \"cupi\"\n    ],\n    \"unAuthorizedSegmentIds\": [\n      \"labore\",\n      \"irure ut\"\n    ],\n    \"notAllowedForReportingMetricIdentities\": [\n      \"non\",\n      \"commodo aute dolore\"\n    ],\n    \"allowedForReporting\": true\n  },\n  \"dataGroup\": \"amet est qui\",\n  \"curatedItem\": true,\n  \"alternateVariableNames\": {\n    \"name\": \"enim deserunt quis ea\",\n    \"baseName\": \"nisi enim nulla\",\n    \"curatedName\": \"incid\"\n  },\n  \"reportTimeAttribution\": true,\n  \"solution\": false,\n  \"categories\": [\n    \"laboris ullamco\",\n    \"fugiat aliqu\"\n  ],\n  \"warning\": {\n    \"title\": \"pariatu\",\n    \"text\": \"cupidatat ullamco\",\n    \"helpLink\": \"ea es\"\n  },\n  \"tags\": [\n    {\n      \"id\": 15191650,\n      \"name\": \"non ullamco pariatur laborum id\",\n      \"description\": \"tempor in\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": -80817292,\n      \"name\": \"velit in proident\",\n      \"description\": \"cupidata\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"usageSummary\": {\n    \"count\": 45534083,\n    \"mostRecentTimestamp\": \"2021-09-17T01:22:22.378Z\",\n    \"itemId\": \"dolore enim\",\n    \"relevancyScore\": 61939212.51955125,\n    \"companyCount\": -84672431\n  },\n  \"shares\": [\n    {\n      \"componentId\": \"proident in ea dolor\",\n      \"shareToId\": -52583951,\n      \"shareToType\": \"quis id qui\",\n      \"shareId\": -59630658,\n      \"componentType\": \"commodo tempor\",\n      \"shareToDisplayName\": \"incididunt\",\n      \"shareToLogin\": \"cupidatat labore aute\",\n      \"shareToImsUserId\": \"aliqua enim esse\",\n      \"accessLevel\": \"dolor in culpa\"\n    },\n    {\n      \"componentId\": \"veniam dolore eu dolor\",\n      \"shareToId\": 5061944,\n      \"shareToType\": \"velit eiusmod\",\n      \"shareId\": -56015318,\n      \"componentType\": \"eu dolor ipsum veniam\",\n      \"shareToDisplayName\": \"incididunt in ad\",\n      \"shareToLogin\": \"aute commodo sunt adipisicing\",\n      \"shareToImsUserId\": \"dolore est\",\n      \"accessLevel\": \"officia qui\"\n    }\n  ],\n  \"approved\": false,\n  \"favorite\": true,\n  \"siteTitle\": \"ut qui in labore\",\n  \"modified\": \"1970-01-24T09:47:48.005Z\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/calculatedmetrics/validate?locale=en_US&migrating=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calculatedmetrics",
										"validate"
									],
									"query": [
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "migrating",
											"value": "false"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"invalid_dimension_access\",\n  \"errorDescription\": \"dolor\",\n  \"errorId\": \"veniam ut ea commodo mol\",\n  \"errorDetails\": {\n    \"culpad\": {},\n    \"ea4\": {}\n  },\n  \"rootCauseService\": \"nisi ullamco nostrud enim\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "collections/suites",
			"item": [
				{
					"name": "Retrieves report suites that match the given filters.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/collections/suites?types=rollup,base&includeType=deleted,deleted&expansion=currency,dataCurrentAsOf&permission=aliqua&relevantOnly=false&userGroupId=43407647&cached=true&rsids=aliqua&rsidContains=aliqua&enabledSolutions=aliqua&limit=10&page=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"collections",
								"suites"
							],
							"query": [
								{
									"key": "types",
									"value": "rollup,base",
									"description": "Comma-delimited list of types of report suites to return.  No selection returns all types."
								},
								{
									"key": "includeType",
									"value": "deleted,deleted",
									"description": "Include report suites with the following parameters in the return list.  Including blocked requires a single companyId in the companyIds query param"
								},
								{
									"key": "expansion",
									"value": "currency,dataCurrentAsOf",
									"description": "Comma-delimited list of additional metadata fields to include on response."
								},
								{
									"key": "permission",
									"value": "aliqua",
									"description": "Filter list to only include suites that have this permission."
								},
								{
									"key": "relevantOnly",
									"value": "false",
									"description": "Return only report suites that are considered recent."
								},
								{
									"key": "userGroupId",
									"value": "43407647",
									"description": "Filter list to only include suites that are in the given userGroupId"
								},
								{
									"key": "cached",
									"value": "true",
									"description": "return cached results"
								},
								{
									"key": "rsids",
									"value": "aliqua",
									"description": "Filter list to only include suites in this RSID list (comma-delimited)"
								},
								{
									"key": "rsidContains",
									"value": "aliqua",
									"description": "Filter list to only include suites whose rsid contains rsidContains."
								},
								{
									"key": "enabledSolutions",
									"value": "aliqua",
									"description": "Filter list to only include suites whose enabled solutions includes"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Number of results per page"
								},
								{
									"key": "page",
									"value": "0",
									"description": "Page number (base 0 - first page is \"0\")"
								}
							]
						},
						"description": "Returns all report suite types in a single collection."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/collections/suites?types=base,vrs&includeType=deleted,deleted&expansion=name,taxonomist&permission=aliqua&relevantOnly=false&userGroupId=43407647&cached=true&rsids=aliqua&rsidContains=aliqua&enabledSolutions=aliqua&limit=10&page=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collections",
										"suites"
									],
									"query": [
										{
											"key": "types",
											"value": "base,vrs"
										},
										{
											"key": "includeType",
											"value": "deleted,deleted"
										},
										{
											"key": "expansion",
											"value": "name,taxonomist"
										},
										{
											"key": "permission",
											"value": "aliqua"
										},
										{
											"key": "relevantOnly",
											"value": "false"
										},
										{
											"key": "userGroupId",
											"value": "43407647"
										},
										{
											"key": "cached",
											"value": "true"
										},
										{
											"key": "rsids",
											"value": "aliqua"
										},
										{
											"key": "rsidContains",
											"value": "aliqua"
										},
										{
											"key": "enabledSolutions",
											"value": "aliqua"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"calendarType\": {\n    \"rsid\": \"Duis dolor\",\n    \"type\": \"GREGORIAN\",\n    \"anchorDate\": \"1991-10-15T12:52:24.236Z\",\n    \"firstDayOfWeek\": -43605029,\n    \"firstMonthOfYear\": -52972291,\n    \"firstDayOfYear\": \"1951-12-21T03:39:43.061Z\",\n    \"anomalyYear\": \"do officia ad esse\"\n  },\n  \"currency\": \"deserunt\",\n  \"timezoneZoneInfo\": \"nostrud commodo officia in id\",\n  \"numericRsid\": 31630523,\n  \"isBlocked\": true,\n  \"isDeleted\": false,\n  \"currentTimezoneOffset\": 70207917.36582917,\n  \"axleConfig\": {\n    \"axleData\": false,\n    \"axleStart\": \"sunt amet incididunt dolore\"\n  },\n  \"enabledSolutions\": [\n    \"in Duis do\",\n    \"exercitation nisi\"\n  ],\n  \"taxonomist\": true,\n  \"dataSchema\": \"veniam nostrud et\",\n  \"remoteLoading\": true,\n  \"tntConfig\": {\n    \"tnt\": false,\n    \"tntExpireType\": -84485049,\n    \"tntExpirePeriods\": 87342067,\n    \"tntAllocationType\": -44621412,\n    \"tntA4tDateEnabled\": true,\n    \"tntClientCode\": \"dolore sunt enim ullamco\"\n  },\n  \"dataCurrentAsOf\": \"1959-11-26T09:59:04.491Z\",\n  \"parentRsid\": \"dolor dolor\",\n  \"collectionItemType\": \"virtualreportsuite\",\n  \"numGroups\": -39802909,\n  \"name\": \"laboris magna voluptate Exc\",\n  \"type\": \"commodo ipsum aliquip Excepteur esse\",\n  \"rsid\": \"cillum ut\"\n}"
						},
						{
							"name": "Unexpected error; report suite retrieval failed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/collections/suites?types=base,vrs&includeType=deleted,deleted&expansion=name,taxonomist&permission=aliqua&relevantOnly=false&userGroupId=43407647&cached=true&rsids=aliqua&rsidContains=aliqua&enabledSolutions=aliqua&limit=10&page=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collections",
										"suites"
									],
									"query": [
										{
											"key": "types",
											"value": "base,vrs"
										},
										{
											"key": "includeType",
											"value": "deleted,deleted"
										},
										{
											"key": "expansion",
											"value": "name,taxonomist"
										},
										{
											"key": "permission",
											"value": "aliqua"
										},
										{
											"key": "relevantOnly",
											"value": "false"
										},
										{
											"key": "userGroupId",
											"value": "43407647"
										},
										{
											"key": "cached",
											"value": "true"
										},
										{
											"key": "rsids",
											"value": "aliqua"
										},
										{
											"key": "rsidContains",
											"value": "aliqua"
										},
										{
											"key": "enabledSolutions",
											"value": "aliqua"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "0"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Retrieves report suite by id",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/collections/suites/:rsid?expansion=currency,dataCurrentAsOf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"collections",
								"suites",
								":rsid"
							],
							"query": [
								{
									"key": "expansion",
									"value": "currency,dataCurrentAsOf",
									"description": "Comma-delimited list of additional metadata fields to include on response."
								}
							],
							"variable": [
								{
									"key": "rsid",
									"value": "aliqua",
									"description": "(Required) The rsid of the suite to return"
								}
							]
						},
						"description": "Returns all report suite types in a single collection."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/collections/suites/:rsid?expansion=name,taxonomist",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collections",
										"suites",
										":rsid"
									],
									"query": [
										{
											"key": "expansion",
											"value": "name,taxonomist"
										}
									],
									"variable": [
										{
											"key": "rsid",
											"value": "aliqua",
											"description": "(Required) The rsid of the suite to return"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"calendarType\": {\n    \"rsid\": \"ex Excepteur\",\n    \"type\": \"CUSTOM_454\",\n    \"anchorDate\": \"1973-01-07T17:40:55.393Z\",\n    \"firstDayOfWeek\": -62858455,\n    \"firstMonthOfYear\": -51057330,\n    \"firstDayOfYear\": \"2013-07-12T00:21:17.713Z\",\n    \"anomalyYear\": \"sint Excepteur Lorem\"\n  },\n  \"currency\": \"Lorem mollit qui do\",\n  \"timezoneZoneInfo\": \"aliqui\",\n  \"numericRsid\": -92788687,\n  \"isBlocked\": false,\n  \"isDeleted\": true,\n  \"currentTimezoneOffset\": -43870026.369091965,\n  \"axleConfig\": {\n    \"axleData\": true,\n    \"axleStart\": \"id\"\n  },\n  \"enabledSolutions\": [\n    \"amet pariatur in\",\n    \"labore Ut\"\n  ],\n  \"taxonomist\": false,\n  \"dataSchema\": \"amet cillum dolor\",\n  \"remoteLoading\": false,\n  \"tntConfig\": {\n    \"tnt\": true,\n    \"tntExpireType\": -88497881,\n    \"tntExpirePeriods\": 56074901,\n    \"tntAllocationType\": 52292,\n    \"tntA4tDateEnabled\": false,\n    \"tntClientCode\": \"culpa dolore dolore sit\"\n  },\n  \"dataCurrentAsOf\": \"1993-02-21T22:59:11.432Z\",\n  \"parentRsid\": \"aute eu\",\n  \"collectionItemType\": \"reportsuite\",\n  \"numGroups\": 26229294,\n  \"name\": \"ut sint\",\n  \"type\": \"nostrud sint tempor dolor\",\n  \"rsid\": \"commodo dolore pr\"\n}"
						},
						{
							"name": "Unexpected error; report suite retrieval failed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/collections/suites/:rsid?expansion=name,taxonomist",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collections",
										"suites",
										":rsid"
									],
									"query": [
										{
											"key": "expansion",
											"value": "name,taxonomist"
										}
									],
									"variable": [
										{
											"key": "rsid",
											"value": "aliqua",
											"description": "(Required) The rsid of the suite to return"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Resets the cache for the report suites beloging to the current login company",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/collections/suites/cacheReset",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"collections",
								"suites",
								"cacheReset"
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/collections/suites/cacheReset",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collections",
										"suites",
										"cacheReset"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "true"
						}
					]
				}
			]
		},
		{
			"name": "companies",
			"item": [
				{
					"name": "me",
					"item": [
						{
							"name": "preferences",
							"item": [
								{
									"name": "Gets the preferences for the company of the user making the call. Returns a 204 if the company has never set preferences. Return a 200 with an empty object if company preferences has been cleared.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/companies/me/preferences",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												"me",
												"preferences"
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/companies/me/preferences",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"companies",
														"me",
														"preferences"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"hideReportsPanel\": true,\n  \"authenticateWithAdobeForNoLoginLinks\": false,\n  \"passwordRequiredForNoLoginLinks\": true\n}"
										},
										{
											"name": "Unexpected error; getting company preference failed",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/companies/me/preferences",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"companies",
														"me",
														"preferences"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Replaces the preferences for the company of the current admin. Return a 200 with an empty object if company preferences has been cleared.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"hideReportsPanel\": true,\n  \"authenticateWithAdobeForNoLoginLinks\": false,\n  \"passwordRequiredForNoLoginLinks\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/companies/me/preferences",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												"me",
												"preferences"
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"hideReportsPanel\": true,\n  \"authenticateWithAdobeForNoLoginLinks\": false,\n  \"passwordRequiredForNoLoginLinks\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/companies/me/preferences",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"companies",
														"me",
														"preferences"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"hideReportsPanel\": true,\n  \"authenticateWithAdobeForNoLoginLinks\": false,\n  \"passwordRequiredForNoLoginLinks\": true\n}"
										},
										{
											"name": "Unexpected error; replacing company preference failed",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"hideReportsPanel\": true,\n  \"authenticateWithAdobeForNoLoginLinks\": false,\n  \"passwordRequiredForNoLoginLinks\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/companies/me/preferences",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"companies",
														"me",
														"preferences"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Retrieves information about the login company for the current user.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/companies/me?expansion=companySecurity,imsUserMigration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"companies",
										"me"
									],
									"query": [
										{
											"key": "expansion",
											"value": "companySecurity,imsUserMigration",
											"description": "Comma-delimited list of company expansions."
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/companies/me?expansion=companySecurity,allowAdobeEmails",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												"me"
											],
											"query": [
												{
													"key": "expansion",
													"value": "companySecurity,allowAdobeEmails"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"billingCustomerId\": -16947458,\n  \"description\": \"consectetur Duis nisi\",\n  \"globalCompanyKey\": \"velit dolor\",\n  \"imsOrgid\": \"sint labore ipsum\",\n  \"name\": \"tempor enim velit\",\n  \"namespace\": \"mollit\",\n  \"adminLogin\": \"et ad in reprehenderit non\",\n  \"eccId\": 44913180,\n  \"billingTabAccess\": true,\n  \"companyPrefix\": \"dolore veniam dolor\",\n  \"disabled\": false,\n  \"accessType\": \"premiumAttribution\",\n  \"billingCustomerName\": \"in esse Ut ut exercitation\",\n  \"validEmails\": [\n    \"sit adipisicing fugiat sed\",\n    \"consectetur minim\"\n  ],\n  \"allowAdobeEmails\": true,\n  \"companySecurity\": {\n    \"strongPasswords\": true,\n    \"emailRestrictions\": true,\n    \"ipRestrictions\": true,\n    \"passwordExpiration\": true,\n    \"passwordRecovery\": true\n  },\n  \"imsUserMigrationStartDate\": \"1980-04-20\",\n  \"imsUserMigrationDeadline\": \"1945-07-23\",\n  \"imsUserMigrationActive\": true,\n  \"imsUserMigrationComplete\": true,\n  \"marketingCloudOnly\": true,\n  \"imsProductId\": \"aliquip elit\",\n  \"imsIdent\": \"magna consectetur enim laborum\",\n  \"featureAccessOverrides\": {\n    \"tempor_8ee\": {\n      \"Ut2da\": \"dolore\",\n      \"dolor9a4\": \"sit proident quis eiusmod in\"\n    },\n    \"ad_a\": {\n      \"cupidatatebb\": \"quis dolor pariatur o\",\n      \"magna_a82\": \"tempor aute deserunt Excepteu\",\n      \"ipsum_8fa\": \"aute\",\n      \"sit_ea\": \"aliqua\",\n      \"ea6\": \"ut\"\n    }\n  },\n  \"taxonomistMigrationStart\": \"1992-09-12\",\n  \"taxonomistMigrationStatus\": \"not_started\",\n  \"apiRateLimitPolicy\": \"ullamco est\",\n  \"permissionAuthority\": \"both\",\n  \"currentDataCenter\": \"officia dolore minim\",\n  \"defaultOverageAlert\": true,\n  \"disableMobileAppCaching\": true,\n  \"cjaMapped\": false,\n  \"disableReportsAndAnalytics\": true,\n  \"dxAnalyticsSupport\": true,\n  \"uppReturned\": false,\n  \"accountRestriction\": {\n    \"restricted\": false,\n    \"restrictionDate\": -10215593\n  },\n  \"companyid\": -71480441\n}"
								},
								{
									"name": "Unexpected error; company retrieval failed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/companies/me?expansion=companySecurity,allowAdobeEmails",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												"me"
											],
											"query": [
												{
													"key": "expansion",
													"value": "companySecurity,allowAdobeEmails"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieves the tracking server for the login company of the current user.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/companies/me/trackingserver?rsid=aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"companies",
										"me",
										"trackingserver"
									],
									"query": [
										{
											"key": "rsid",
											"value": "aliqua",
											"description": "(Required) The rsid to use if this company does not require namespace use."
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/companies/me/trackingserver?rsid=aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												"me",
												"trackingserver"
											],
											"query": [
												{
													"key": "rsid",
													"value": "aliqua"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"trackingServer\": \"est deserunt\"\n}"
								},
								{
									"name": "Unexpected error; tracking server retrieval failed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/companies/me/trackingserver?rsid=aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												"me",
												"trackingserver"
											],
											"query": [
												{
													"key": "rsid",
													"value": "aliqua"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieves the URS for the company of the current user.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/companies/me/usagereportsuites",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"companies",
										"me",
										"usagereportsuites"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/companies/me/usagereportsuites",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												"me",
												"usagereportsuites"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"urs\": [\n    {\n      \"rsid\": \"commodo\",\n      \"numericRsid\": 422950,\n      \"reportSuiteName\": \"nulla cillum\",\n      \"active\": true,\n      \"baseUrl\": \"aute\",\n      \"defaultPage\": \"sunt\",\n      \"currency\": \"ipsum veniam ea\",\n      \"calendarAnchorDate\": \"1955-03-03T00:54:50.130Z\",\n      \"organization\": -54277442,\n      \"companyId\": 68097571,\n      \"billingCustomerId\": 56417919,\n      \"timezone\": -94611688,\n      \"timezoneZoneInfo\": \"et\",\n      \"stitchingEnabled\": true,\n      \"signedUpDate\": \"1966-08-14T19:05:40.754Z\",\n      \"lastModified\": \"1977-02-11T14:16:53.735Z\",\n      \"signedUpOurTime\": \"1956-03-09T21:46:16.037Z\",\n      \"saveAamIdValues\": false,\n      \"references\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"calendarType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"axleConfig\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tntConfig\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipObfuscationEnabled\": false,\n      \"type\": \"quis Lorem ipsum dolor\",\n      \"currentTimezoneOffset\": 85543252.70040977,\n      \"numGroups\": -58027183,\n      \"isBlocked\": false,\n      \"taxonomist\": false,\n      \"mcAssociation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mcAudiences\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mcEstimatedClusters\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"imsOrgIdsFromRelatedCompanies\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"relatedCompanies\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"dataCurrentAsOf\": \"1993-04-23T06:13:30.095Z\",\n      \"enabledSolutions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"timestampSupport\": \"NOT_ALLOWED\",\n      \"localizationEnabled\": true,\n      \"adCloudConfiguration\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataSchema\": \"ex non aute Lore\",\n      \"customFilterGroups\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"dataRetentionSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"remoteLoading\": true,\n      \"activeDpc\": \"id Ut\",\n      \"aamServerSideForwarding\": true,\n      \"enablePkvdataDebugKey\": true,\n      \"referencedContextDataKeys\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"pipelineStreamingEnabled\": false,\n      \"pipelineBatchNotifyEnabled\": false,\n      \"tags\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"shares\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"approved\": false,\n      \"favorite\": false,\n      \"usageSummary\": {\n        \"dolor_4\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"isDeleted\": false,\n      \"parentRsid\": \"minim et\"\n    },\n    {\n      \"rsid\": \"Duis nisi reprehenderit mollit\",\n      \"numericRsid\": 3312570,\n      \"reportSuiteName\": \"dolore irure repreh\",\n      \"active\": false,\n      \"baseUrl\": \"reprehenderit cillum\",\n      \"defaultPage\": \"est incididunt\",\n      \"currency\": \"aliquip\",\n      \"calendarAnchorDate\": \"1964-11-17T19:35:38.868Z\",\n      \"organization\": -27559929,\n      \"companyId\": 60524740,\n      \"billingCustomerId\": 13007665,\n      \"timezone\": -40722625,\n      \"timezoneZoneInfo\": \"adipisicing pariatur tempor sunt\",\n      \"stitchingEnabled\": false,\n      \"signedUpDate\": \"1943-03-24T12:41:42.627Z\",\n      \"lastModified\": \"1946-03-28T19:43:27.571Z\",\n      \"signedUpOurTime\": \"1955-08-24T01:04:11.153Z\",\n      \"saveAamIdValues\": false,\n      \"references\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"calendarType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"axleConfig\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tntConfig\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipObfuscationEnabled\": false,\n      \"type\": \"cill\",\n      \"currentTimezoneOffset\": -6187693.419784471,\n      \"numGroups\": -71355674,\n      \"isBlocked\": true,\n      \"taxonomist\": true,\n      \"mcAssociation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mcAudiences\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mcEstimatedClusters\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"imsOrgIdsFromRelatedCompanies\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"relatedCompanies\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"dataCurrentAsOf\": \"2020-08-22T00:45:29.368Z\",\n      \"enabledSolutions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"timestampSupport\": \"OPTIONAL\",\n      \"localizationEnabled\": true,\n      \"adCloudConfiguration\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataSchema\": \"Lorem ipsum proident\",\n      \"customFilterGroups\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"dataRetentionSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"remoteLoading\": true,\n      \"activeDpc\": \"nisi consectetur esse\",\n      \"aamServerSideForwarding\": true,\n      \"enablePkvdataDebugKey\": true,\n      \"referencedContextDataKeys\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"pipelineStreamingEnabled\": false,\n      \"pipelineBatchNotifyEnabled\": false,\n      \"tags\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"shares\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"approved\": false,\n      \"favorite\": false,\n      \"usageSummary\": {\n        \"laborum2\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"tempor3d7\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"aliquip_01\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"isDeleted\": true,\n      \"parentRsid\": \"tempor pariatur laborum\"\n    }\n  ]\n}"
								},
								{
									"name": "Unexpected error; URS retrieval failed.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/companies/me/usagereportsuites",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												"me",
												"usagereportsuites"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Check if a DCS hostname is configured for a login company",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/companies/datacollectionconfig/edgehosts/dcshostname",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"companies",
								"datacollectionconfig",
								"edgehosts",
								"dcshostname"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/companies/datacollectionconfig/edgehosts/dcshostname",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"companies",
										"datacollectionconfig",
										"edgehosts",
										"dcshostname"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"exists\": false\n}"
						},
						{
							"name": "Insufficient access to retrieve the DCS hostname configuration",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/companies/datacollectionconfig/edgehosts/dcshostname",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"companies",
										"datacollectionconfig",
										"edgehosts",
										"dcshostname"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"io_error\",\n  \"errorDescription\": \"reprehenderit sit aliqua\",\n  \"errorId\": \"magna\",\n  \"errorDetails\": {\n    \"velitf00\": {}\n  },\n  \"rootCauseService\": \"eu tempor ullamco ipsum\"\n}"
						},
						{
							"name": "Unexpected error; retrieval of DCS hostname configuration failed due to an internal error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/companies/datacollectionconfig/edgehosts/dcshostname",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"companies",
										"datacollectionconfig",
										"edgehosts",
										"dcshostname"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"io_error\",\n  \"errorDescription\": \"reprehenderit sit aliqua\",\n  \"errorId\": \"magna\",\n  \"errorDetails\": {\n    \"velitf00\": {}\n  },\n  \"rootCauseService\": \"eu tempor ullamco ipsum\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "componentmetadata",
			"item": [
				{
					"name": "Deletes the component metadata for the supplied component ids and type.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/componentmetadata/cleanup?componentIds=aliqua&componentType=aliqua&locale=en_US",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"componentmetadata",
								"cleanup"
							],
							"query": [
								{
									"key": "componentIds",
									"value": "aliqua",
									"description": "Comma-delimited list of components to delete metadata for."
								},
								{
									"key": "componentType",
									"value": "aliqua",
									"description": "Component type to delete metadata for."
								},
								{
									"key": "locale",
									"value": "en_US",
									"description": "Locale"
								}
							]
						}
					},
					"response": [
						{
							"name": "Unexpected error; component metadata retrieval failed",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/componentmetadata/cleanup?componentIds=aliqua&componentType=aliqua&locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"componentmetadata",
										"cleanup"
									],
									"query": [
										{
											"key": "componentIds",
											"value": "aliqua"
										},
										{
											"key": "componentType",
											"value": "aliqua"
										},
										{
											"key": "locale",
											"value": "en_US"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Retrieves the component metadata for the supplied component ids and type.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"componentType\": \"ex minim\",\n  \"componentIds\": [\n    \"et aliquip\",\n    \"amet veniam \"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/componentmetadata/search?expansion=favorite,usageSummary&cached=true&locale=en_US",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"componentmetadata",
								"search"
							],
							"query": [
								{
									"key": "expansion",
									"value": "favorite,usageSummary",
									"description": "Comma-delimited list of additional segment metadata fields to include on response."
								},
								{
									"key": "cached",
									"value": "true",
									"description": "return cached results"
								},
								{
									"key": "locale",
									"value": "en_US",
									"description": "Locale"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/componentmetadata/search?expansion=favorite,sharesFullName&cached=true&locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"componentmetadata",
										"search"
									],
									"query": [
										{
											"key": "expansion",
											"value": "favorite,sharesFullName"
										},
										{
											"key": "cached",
											"value": "true"
										},
										{
											"key": "locale",
											"value": "en_US"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"tags\": [\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"components\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"components\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"shares\": [\n      {\n        \"componentId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToType\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"componentType\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToDisplayName\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToLogin\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToImsUserId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"accessLevel\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"componentId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToType\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"componentType\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToDisplayName\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToLogin\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToImsUserId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"accessLevel\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"approved\": true,\n    \"favorite\": true,\n    \"usageSummary\": {\n      \"count\": -27800362,\n      \"mostRecentTimestamp\": \"1954-09-21T18:17:09.993Z\",\n      \"itemId\": \"nostrud do elit mollit\",\n      \"relevancyScore\": 16824920.587089702,\n      \"companyCount\": -6984436\n    }\n  },\n  {\n    \"tags\": [\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"components\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"components\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"shares\": [\n      {\n        \"componentId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToType\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"componentType\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToDisplayName\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToLogin\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToImsUserId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"accessLevel\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"componentId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToType\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"componentType\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToDisplayName\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToLogin\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToImsUserId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"accessLevel\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"approved\": false,\n    \"favorite\": false,\n    \"usageSummary\": {\n      \"count\": -82307164,\n      \"mostRecentTimestamp\": \"1999-08-26T09:29:35.735Z\",\n      \"itemId\": \"dolor irure non labore ut\",\n      \"relevancyScore\": -85831011.31514153,\n      \"companyCount\": 80903738\n    }\n  }\n]"
						},
						{
							"name": "Unexpected error; component metadata retrieval failed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/componentmetadata/search?expansion=favorite,sharesFullName&cached=true&locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"componentmetadata",
										"search"
									],
									"query": [
										{
											"key": "expansion",
											"value": "favorite,sharesFullName"
										},
										{
											"key": "cached",
											"value": "true"
										},
										{
											"key": "locale",
											"value": "en_US"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "contributionanalysis",
			"item": [
				{
					"name": "queue",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Retrieve a single contribution analysis job by ID",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contributionanalysis/queue/:id?locale=aliqua&expansion=textValues,textValues&optimizeTextValues=false&allowRemoteLoad=default",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contributionanalysis",
												"queue",
												":id"
											],
											"query": [
												{
													"key": "locale",
													"value": "aliqua",
													"description": "Locale to use for variable and item names"
												},
												{
													"key": "expansion",
													"value": "textValues,textValues",
													"description": "Comma-delimited list of additional metadata fields to include on response."
												},
												{
													"key": "optimizeTextValues",
													"value": "false",
													"description": "Controls if the number of text values should be limited"
												},
												{
													"key": "allowRemoteLoad",
													"value": "default",
													"description": "Controls if Oberon should remote load data.  Default behavior is true with fallback to false if remote data does not exist"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "1",
													"description": "(Required) Job ID to be returned"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/contributionanalysis/queue/:id?locale=aliqua&expansion=textValues,textValues&optimizeTextValues=false&allowRemoteLoad=default",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"contributionanalysis",
														"queue",
														":id"
													],
													"query": [
														{
															"key": "locale",
															"value": "aliqua"
														},
														{
															"key": "expansion",
															"value": "textValues,textValues"
														},
														{
															"key": "optimizeTextValues",
															"value": "false"
														},
														{
															"key": "allowRemoteLoad",
															"value": "default"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "1",
															"description": "(Required) Job ID to be returned"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"jobId\": \"cupidatat nisi ex\",\n  \"status\": \"deserunt\",\n  \"statusText\": \"sed occaecat quis\",\n  \"dateCreated\": \"ea\",\n  \"dateCompleted\": \"non magna ea sed tempor\",\n  \"progressText\": {\n    \"culpa7_\": {},\n    \"laboris_8e7\": {}\n  },\n  \"reportDefinition\": {\n    \"minime7f\": {},\n    \"ipsum9_\": {},\n    \"Ut_8_\": {}\n  },\n  \"reportData\": {\n    \"dimensions\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"items\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"errorMessage\": \"laboris sint mollit\"\n}"
										},
										{
											"name": "Invalid request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/contributionanalysis/queue/:id?locale=aliqua&expansion=textValues,textValues&optimizeTextValues=false&allowRemoteLoad=default",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"contributionanalysis",
														"queue",
														":id"
													],
													"query": [
														{
															"key": "locale",
															"value": "aliqua"
														},
														{
															"key": "expansion",
															"value": "textValues,textValues"
														},
														{
															"key": "optimizeTextValues",
															"value": "false"
														},
														{
															"key": "allowRemoteLoad",
															"value": "default"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "1",
															"description": "(Required) Job ID to be returned"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"resource_already_exists\",\n  \"errorDescription\": \"fugiat occaecat in sed\",\n  \"errorId\": \"irure ea Ut\",\n  \"errorDetails\": {\n    \"nullafa\": {},\n    \"enim3\": {},\n    \"sedc1\": {}\n  },\n  \"rootCauseService\": \"esse proident officia\"\n}"
										},
										{
											"name": "User Doesn't have sufficient priviliges",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/contributionanalysis/queue/:id?locale=aliqua&expansion=textValues,textValues&optimizeTextValues=false&allowRemoteLoad=default",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"contributionanalysis",
														"queue",
														":id"
													],
													"query": [
														{
															"key": "locale",
															"value": "aliqua"
														},
														{
															"key": "expansion",
															"value": "textValues,textValues"
														},
														{
															"key": "optimizeTextValues",
															"value": "false"
														},
														{
															"key": "allowRemoteLoad",
															"value": "default"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "1",
															"description": "(Required) Job ID to be returned"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden resource.User does not have access to contribution Analysis.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/contributionanalysis/queue/:id?locale=aliqua&expansion=textValues,textValues&optimizeTextValues=false&allowRemoteLoad=default",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"contributionanalysis",
														"queue",
														":id"
													],
													"query": [
														{
															"key": "locale",
															"value": "aliqua"
														},
														{
															"key": "expansion",
															"value": "textValues,textValues"
														},
														{
															"key": "optimizeTextValues",
															"value": "false"
														},
														{
															"key": "allowRemoteLoad",
															"value": "default"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "1",
															"description": "(Required) Job ID to be returned"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "External API error; Contribution Analysis job retrieval failed",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/contributionanalysis/queue/:id?locale=aliqua&expansion=textValues,textValues&optimizeTextValues=false&allowRemoteLoad=default",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"contributionanalysis",
														"queue",
														":id"
													],
													"query": [
														{
															"key": "locale",
															"value": "aliqua"
														},
														{
															"key": "expansion",
															"value": "textValues,textValues"
														},
														{
															"key": "optimizeTextValues",
															"value": "false"
														},
														{
															"key": "allowRemoteLoad",
															"value": "default"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "1",
															"description": "(Required) Job ID to be returned"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Updates a single contribution analysis job by ID",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"{\\n  \\\"reportDefinition\\\": {\\n    \\\"name\\\": \\\"Renamed - Orders on April 6, 2014\\\",\\n    \\\"config\\\": {\\n      \\\"dimensions\\\": [\\n        {\\n          \\\"id\\\": \\\"variables/page\\\"\\n        },\\n        {\\n          \\\"id\\\": \\\"variables/evar1\\\"\\n        }\\n      ]\\n    },\\n    \\\"anomalyContext\\\": {\\n      \\\"selectedAnomalyDate\\\": \\\"2014-04-06\\\",\\n      \\\"trainingDays\\\": 30,\\n      \\\"metricValue\\\": {\\n        \\\"expected\\\": 42,\\n        \\\"actual\\\": 61\\n      }\\n    },\\n    \\\"viewRankedRequest\\\": {\\n      \\\"dimension\\\": \\\"variables/daterangeday\\\",\\n      \\\"globalFilters\\\": [\\n        {\\n          \\\"dateRange\\\": \\\"2014-04-06/2014-04-06\\\",\\n          \\\"type\\\": \\\"dateRange\\\"\\n        },\\n        {\\n          \\\"segmentId\\\": \\\"537d0c80e4b0ca661c568921\\\",\\n          \\\"type\\\": \\\"segment\\\"\\n        },\\n        {\\n          \\\"segmentId\\\": \\\"737d0cabc4b0ca661c568922\\\",\\n          \\\"type\\\": \\\"segment\\\"\\n        }\\n      ],\\n      \\\"metricContainer\\\": {\\n        \\\"metrics\\\": [\\n          {\\n            \\\"id\\\": \\\"metrics/orders\\\"\\n          }\\n        ]\\n      },\\n      \\\"rsid\\\": \\\"inf.axletest\\\"\\n    }\\n  }\\n}\"",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contributionanalysis/queue/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contributionanalysis",
												"queue",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "1",
													"description": "(Required) Job ID to be returned"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"{\\n  \\\"reportDefinition\\\": {\\n    \\\"name\\\": \\\"Renamed - Orders on April 6, 2014\\\",\\n    \\\"config\\\": {\\n      \\\"dimensions\\\": [\\n        {\\n          \\\"id\\\": \\\"variables/page\\\"\\n        },\\n        {\\n          \\\"id\\\": \\\"variables/evar1\\\"\\n        }\\n      ]\\n    },\\n    \\\"anomalyContext\\\": {\\n      \\\"selectedAnomalyDate\\\": \\\"2014-04-06\\\",\\n      \\\"trainingDays\\\": 30,\\n      \\\"metricValue\\\": {\\n        \\\"expected\\\": 42,\\n        \\\"actual\\\": 61\\n      }\\n    },\\n    \\\"viewRankedRequest\\\": {\\n      \\\"dimension\\\": \\\"variables/daterangeday\\\",\\n      \\\"globalFilters\\\": [\\n        {\\n          \\\"dateRange\\\": \\\"2014-04-06/2014-04-06\\\",\\n          \\\"type\\\": \\\"dateRange\\\"\\n        },\\n        {\\n          \\\"segmentId\\\": \\\"537d0c80e4b0ca661c568921\\\",\\n          \\\"type\\\": \\\"segment\\\"\\n        },\\n        {\\n          \\\"segmentId\\\": \\\"737d0cabc4b0ca661c568922\\\",\\n          \\\"type\\\": \\\"segment\\\"\\n        }\\n      ],\\n      \\\"metricContainer\\\": {\\n        \\\"metrics\\\": [\\n          {\\n            \\\"id\\\": \\\"metrics/orders\\\"\\n          }\\n        ]\\n      },\\n      \\\"rsid\\\": \\\"inf.axletest\\\"\\n    }\\n  }\\n}\"",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/contributionanalysis/queue/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"contributionanalysis",
														"queue",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "1",
															"description": "(Required) Job ID to be returned"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"jobId\": \"cupidatat nisi ex\",\n  \"status\": \"deserunt\",\n  \"statusText\": \"sed occaecat quis\",\n  \"dateCreated\": \"ea\",\n  \"dateCompleted\": \"non magna ea sed tempor\",\n  \"progressText\": {\n    \"culpa7_\": {},\n    \"laboris_8e7\": {}\n  },\n  \"reportDefinition\": {\n    \"minime7f\": {},\n    \"ipsum9_\": {},\n    \"Ut_8_\": {}\n  },\n  \"reportData\": {\n    \"dimensions\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"items\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"errorMessage\": \"laboris sint mollit\"\n}"
										},
										{
											"name": "Invalid JSON (selectedAnomalyDate must be provided)",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"{\\n  \\\"reportDefinition\\\": {\\n    \\\"name\\\": \\\"Renamed - Orders on April 6, 2014\\\",\\n    \\\"config\\\": {\\n      \\\"dimensions\\\": [\\n        {\\n          \\\"id\\\": \\\"variables/page\\\"\\n        },\\n        {\\n          \\\"id\\\": \\\"variables/evar1\\\"\\n        }\\n      ]\\n    },\\n    \\\"anomalyContext\\\": {\\n      \\\"selectedAnomalyDate\\\": \\\"2014-04-06\\\",\\n      \\\"trainingDays\\\": 30,\\n      \\\"metricValue\\\": {\\n        \\\"expected\\\": 42,\\n        \\\"actual\\\": 61\\n      }\\n    },\\n    \\\"viewRankedRequest\\\": {\\n      \\\"dimension\\\": \\\"variables/daterangeday\\\",\\n      \\\"globalFilters\\\": [\\n        {\\n          \\\"dateRange\\\": \\\"2014-04-06/2014-04-06\\\",\\n          \\\"type\\\": \\\"dateRange\\\"\\n        },\\n        {\\n          \\\"segmentId\\\": \\\"537d0c80e4b0ca661c568921\\\",\\n          \\\"type\\\": \\\"segment\\\"\\n        },\\n        {\\n          \\\"segmentId\\\": \\\"737d0cabc4b0ca661c568922\\\",\\n          \\\"type\\\": \\\"segment\\\"\\n        }\\n      ],\\n      \\\"metricContainer\\\": {\\n        \\\"metrics\\\": [\\n          {\\n            \\\"id\\\": \\\"metrics/orders\\\"\\n          }\\n        ]\\n      },\\n      \\\"rsid\\\": \\\"inf.axletest\\\"\\n    }\\n  }\\n}\"",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/contributionanalysis/queue/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"contributionanalysis",
														"queue",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "1",
															"description": "(Required) Job ID to be returned"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User Doesn't have sufficient priviliges",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"{\\n  \\\"reportDefinition\\\": {\\n    \\\"name\\\": \\\"Renamed - Orders on April 6, 2014\\\",\\n    \\\"config\\\": {\\n      \\\"dimensions\\\": [\\n        {\\n          \\\"id\\\": \\\"variables/page\\\"\\n        },\\n        {\\n          \\\"id\\\": \\\"variables/evar1\\\"\\n        }\\n      ]\\n    },\\n    \\\"anomalyContext\\\": {\\n      \\\"selectedAnomalyDate\\\": \\\"2014-04-06\\\",\\n      \\\"trainingDays\\\": 30,\\n      \\\"metricValue\\\": {\\n        \\\"expected\\\": 42,\\n        \\\"actual\\\": 61\\n      }\\n    },\\n    \\\"viewRankedRequest\\\": {\\n      \\\"dimension\\\": \\\"variables/daterangeday\\\",\\n      \\\"globalFilters\\\": [\\n        {\\n          \\\"dateRange\\\": \\\"2014-04-06/2014-04-06\\\",\\n          \\\"type\\\": \\\"dateRange\\\"\\n        },\\n        {\\n          \\\"segmentId\\\": \\\"537d0c80e4b0ca661c568921\\\",\\n          \\\"type\\\": \\\"segment\\\"\\n        },\\n        {\\n          \\\"segmentId\\\": \\\"737d0cabc4b0ca661c568922\\\",\\n          \\\"type\\\": \\\"segment\\\"\\n        }\\n      ],\\n      \\\"metricContainer\\\": {\\n        \\\"metrics\\\": [\\n          {\\n            \\\"id\\\": \\\"metrics/orders\\\"\\n          }\\n        ]\\n      },\\n      \\\"rsid\\\": \\\"inf.axletest\\\"\\n    }\\n  }\\n}\"",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/contributionanalysis/queue/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"contributionanalysis",
														"queue",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "1",
															"description": "(Required) Job ID to be returned"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden resource.User does not have access to contribution Analysis.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"{\\n  \\\"reportDefinition\\\": {\\n    \\\"name\\\": \\\"Renamed - Orders on April 6, 2014\\\",\\n    \\\"config\\\": {\\n      \\\"dimensions\\\": [\\n        {\\n          \\\"id\\\": \\\"variables/page\\\"\\n        },\\n        {\\n          \\\"id\\\": \\\"variables/evar1\\\"\\n        }\\n      ]\\n    },\\n    \\\"anomalyContext\\\": {\\n      \\\"selectedAnomalyDate\\\": \\\"2014-04-06\\\",\\n      \\\"trainingDays\\\": 30,\\n      \\\"metricValue\\\": {\\n        \\\"expected\\\": 42,\\n        \\\"actual\\\": 61\\n      }\\n    },\\n    \\\"viewRankedRequest\\\": {\\n      \\\"dimension\\\": \\\"variables/daterangeday\\\",\\n      \\\"globalFilters\\\": [\\n        {\\n          \\\"dateRange\\\": \\\"2014-04-06/2014-04-06\\\",\\n          \\\"type\\\": \\\"dateRange\\\"\\n        },\\n        {\\n          \\\"segmentId\\\": \\\"537d0c80e4b0ca661c568921\\\",\\n          \\\"type\\\": \\\"segment\\\"\\n        },\\n        {\\n          \\\"segmentId\\\": \\\"737d0cabc4b0ca661c568922\\\",\\n          \\\"type\\\": \\\"segment\\\"\\n        }\\n      ],\\n      \\\"metricContainer\\\": {\\n        \\\"metrics\\\": [\\n          {\\n            \\\"id\\\": \\\"metrics/orders\\\"\\n          }\\n        ]\\n      },\\n      \\\"rsid\\\": \\\"inf.axletest\\\"\\n    }\\n  }\\n}\"",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/contributionanalysis/queue/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"contributionanalysis",
														"queue",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "1",
															"description": "(Required) Job ID to be returned"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "External API error; Contribution Analysis job update failed",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"{\\n  \\\"reportDefinition\\\": {\\n    \\\"name\\\": \\\"Renamed - Orders on April 6, 2014\\\",\\n    \\\"config\\\": {\\n      \\\"dimensions\\\": [\\n        {\\n          \\\"id\\\": \\\"variables/page\\\"\\n        },\\n        {\\n          \\\"id\\\": \\\"variables/evar1\\\"\\n        }\\n      ]\\n    },\\n    \\\"anomalyContext\\\": {\\n      \\\"selectedAnomalyDate\\\": \\\"2014-04-06\\\",\\n      \\\"trainingDays\\\": 30,\\n      \\\"metricValue\\\": {\\n        \\\"expected\\\": 42,\\n        \\\"actual\\\": 61\\n      }\\n    },\\n    \\\"viewRankedRequest\\\": {\\n      \\\"dimension\\\": \\\"variables/daterangeday\\\",\\n      \\\"globalFilters\\\": [\\n        {\\n          \\\"dateRange\\\": \\\"2014-04-06/2014-04-06\\\",\\n          \\\"type\\\": \\\"dateRange\\\"\\n        },\\n        {\\n          \\\"segmentId\\\": \\\"537d0c80e4b0ca661c568921\\\",\\n          \\\"type\\\": \\\"segment\\\"\\n        },\\n        {\\n          \\\"segmentId\\\": \\\"737d0cabc4b0ca661c568922\\\",\\n          \\\"type\\\": \\\"segment\\\"\\n        }\\n      ],\\n      \\\"metricContainer\\\": {\\n        \\\"metrics\\\": [\\n          {\\n            \\\"id\\\": \\\"metrics/orders\\\"\\n          }\\n        ]\\n      },\\n      \\\"rsid\\\": \\\"inf.axletest\\\"\\n    }\\n  }\\n}\"",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/contributionanalysis/queue/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"contributionanalysis",
														"queue",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "1",
															"description": "(Required) Job ID to be returned"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete a single queued report by ID",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contributionanalysis/queue/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contributionanalysis",
												"queue",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The queueId to be deleted"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/contributionanalysis/queue/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"contributionanalysis",
														"queue",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The queueId to be deleted"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"aliqua\""
										},
										{
											"name": "User Doesn't have sufficient priviliges",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/contributionanalysis/queue/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"contributionanalysis",
														"queue",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The queueId to be deleted"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden resource.User does not have access to contribution Analysis.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/contributionanalysis/queue/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"contributionanalysis",
														"queue",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The queueId to be deleted"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "External API error; Contribution Analysis job deletion failed",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/contributionanalysis/queue/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"contributionanalysis",
														"queue",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The queueId to be deleted"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Retrieve all jobs for the current user",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contributionanalysis/queue?showCompleted=0&rsid=aliqua&locale=aliqua&expansion=textValues,textValues&optimizeTextValues=false&allowRemoteLoad=default",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contributionanalysis",
										"queue"
									],
									"query": [
										{
											"key": "showCompleted",
											"value": "0",
											"description": "Show Completed Jobs"
										},
										{
											"key": "rsid",
											"value": "aliqua",
											"description": "(Required) rsid"
										},
										{
											"key": "locale",
											"value": "aliqua",
											"description": "Locale to use for variable and item names"
										},
										{
											"key": "expansion",
											"value": "textValues,textValues",
											"description": "Comma-delimited list of additional metadata fields to include on response."
										},
										{
											"key": "optimizeTextValues",
											"value": "false",
											"description": "Controls if the number of text values should be limited"
										},
										{
											"key": "allowRemoteLoad",
											"value": "default",
											"description": "Controls if Oberon should remote load data.  Default behavior is true with fallback to false if remote data does not exist"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contributionanalysis/queue?showCompleted=0&rsid=aliqua&locale=aliqua&expansion=textValues,textValues&optimizeTextValues=false&allowRemoteLoad=default",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contributionanalysis",
												"queue"
											],
											"query": [
												{
													"key": "showCompleted",
													"value": "0"
												},
												{
													"key": "rsid",
													"value": "aliqua"
												},
												{
													"key": "locale",
													"value": "aliqua"
												},
												{
													"key": "expansion",
													"value": "textValues,textValues"
												},
												{
													"key": "optimizeTextValues",
													"value": "false"
												},
												{
													"key": "allowRemoteLoad",
													"value": "default"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"jobId\": \"dolor dolore magna\",\n    \"status\": \"dolor tempor proident aliquip Excepteur\",\n    \"statusText\": \"non anim do eu\",\n    \"dateCreated\": \"aute anim magna culpa\",\n    \"dateCompleted\": \"eiusmod mollit\",\n    \"progressText\": {\n      \"sed__5\": {},\n      \"ut59e\": {},\n      \"veniam_876\": {}\n    },\n    \"reportDefinition\": {\n      \"veniam58\": {},\n      \"cillum_6d\": {},\n      \"do2\": {}\n    },\n    \"reportData\": {\n      \"dimensions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"items\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"errorMessage\": \"nulla Duis\"\n  },\n  {\n    \"jobId\": \"Ut minim elit ut\",\n    \"status\": \"cupidatat dolore dolor culpa consectetur\",\n    \"statusText\": \"non do\",\n    \"dateCreated\": \"consectetur in\",\n    \"dateCompleted\": \"non nostrud a\",\n    \"progressText\": {\n      \"in_5\": {}\n    },\n    \"reportDefinition\": {\n      \"labore02\": {},\n      \"Ut__dd\": {},\n      \"dolor_64\": {}\n    },\n    \"reportData\": {\n      \"dimensions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"items\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"errorMessage\": \"labore laboris\"\n  }\n]"
								},
								{
									"name": "Invalid parameters (rsid is required)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contributionanalysis/queue?showCompleted=0&rsid=aliqua&locale=aliqua&expansion=textValues,textValues&optimizeTextValues=false&allowRemoteLoad=default",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contributionanalysis",
												"queue"
											],
											"query": [
												{
													"key": "showCompleted",
													"value": "0"
												},
												{
													"key": "rsid",
													"value": "aliqua"
												},
												{
													"key": "locale",
													"value": "aliqua"
												},
												{
													"key": "expansion",
													"value": "textValues,textValues"
												},
												{
													"key": "optimizeTextValues",
													"value": "false"
												},
												{
													"key": "allowRemoteLoad",
													"value": "default"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"resource_already_exists\",\n  \"errorDescription\": \"fugiat occaecat in sed\",\n  \"errorId\": \"irure ea Ut\",\n  \"errorDetails\": {\n    \"nullafa\": {},\n    \"enim3\": {},\n    \"sedc1\": {}\n  },\n  \"rootCauseService\": \"esse proident officia\"\n}"
								},
								{
									"name": "User Doesn't have sufficient priviliges",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contributionanalysis/queue?showCompleted=0&rsid=aliqua&locale=aliqua&expansion=textValues,textValues&optimizeTextValues=false&allowRemoteLoad=default",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contributionanalysis",
												"queue"
											],
											"query": [
												{
													"key": "showCompleted",
													"value": "0"
												},
												{
													"key": "rsid",
													"value": "aliqua"
												},
												{
													"key": "locale",
													"value": "aliqua"
												},
												{
													"key": "expansion",
													"value": "textValues,textValues"
												},
												{
													"key": "optimizeTextValues",
													"value": "false"
												},
												{
													"key": "allowRemoteLoad",
													"value": "default"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden resource.User does not have access to contribution Analysis.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contributionanalysis/queue?showCompleted=0&rsid=aliqua&locale=aliqua&expansion=textValues,textValues&optimizeTextValues=false&allowRemoteLoad=default",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contributionanalysis",
												"queue"
											],
											"query": [
												{
													"key": "showCompleted",
													"value": "0"
												},
												{
													"key": "rsid",
													"value": "aliqua"
												},
												{
													"key": "locale",
													"value": "aliqua"
												},
												{
													"key": "expansion",
													"value": "textValues,textValues"
												},
												{
													"key": "optimizeTextValues",
													"value": "false"
												},
												{
													"key": "allowRemoteLoad",
													"value": "default"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Resource not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contributionanalysis/queue?showCompleted=0&rsid=aliqua&locale=aliqua&expansion=textValues,textValues&optimizeTextValues=false&allowRemoteLoad=default",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contributionanalysis",
												"queue"
											],
											"query": [
												{
													"key": "showCompleted",
													"value": "0"
												},
												{
													"key": "rsid",
													"value": "aliqua"
												},
												{
													"key": "locale",
													"value": "aliqua"
												},
												{
													"key": "expansion",
													"value": "textValues,textValues"
												},
												{
													"key": "optimizeTextValues",
													"value": "false"
												},
												{
													"key": "allowRemoteLoad",
													"value": "default"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "External API error; Contribution Analysis jobs retrieval failed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contributionanalysis/queue?showCompleted=0&rsid=aliqua&locale=aliqua&expansion=textValues,textValues&optimizeTextValues=false&allowRemoteLoad=default",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contributionanalysis",
												"queue"
											],
											"query": [
												{
													"key": "showCompleted",
													"value": "0"
												},
												{
													"key": "rsid",
													"value": "aliqua"
												},
												{
													"key": "locale",
													"value": "aliqua"
												},
												{
													"key": "expansion",
													"value": "textValues,textValues"
												},
												{
													"key": "optimizeTextValues",
													"value": "false"
												},
												{
													"key": "allowRemoteLoad",
													"value": "default"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Add a new Contribution Analysis job to the queue",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"queueId\": 71459805,\n  \"createdTime\": \"sed adipisicing id nisi\",\n  \"queuedAfter\": -77452621,\n  \"state\": \"exercitation Duis labore ipsum\",\n  \"estimatedProcessingTime\": 67427324,\n  \"estimatedCompleteTime\": \"sunt pariatur ad ea\",\n  \"reportDefinition\": {\n    \"name\": \"fugiat ad\",\n    \"anomalyContext\": {\n      \"selectedAnomalyDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"trainingDays\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metricValue\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"viewRankedRequest\": {\n      \"rsid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dimension\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"locale\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"globalFilters\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"search\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"settings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"statistics\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metricContainer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"rowContainer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"globalPredictiveSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"anchorDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"bulkExportSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identityOverrides\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"config\": {\n      \"dimensions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contributionanalysis/queue?allowRemoteLoad=default",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contributionanalysis",
										"queue"
									],
									"query": [
										{
											"key": "allowRemoteLoad",
											"value": "default",
											"description": "Controls if Oberon should remote load data.  Default behavior is true with fallback to false if remote data does not exist"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"queueId\": 71459805,\n  \"createdTime\": \"sed adipisicing id nisi\",\n  \"queuedAfter\": -77452621,\n  \"state\": \"exercitation Duis labore ipsum\",\n  \"estimatedProcessingTime\": 67427324,\n  \"estimatedCompleteTime\": \"sunt pariatur ad ea\",\n  \"reportDefinition\": {\n    \"name\": \"fugiat ad\",\n    \"anomalyContext\": {\n      \"selectedAnomalyDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"trainingDays\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metricValue\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"viewRankedRequest\": {\n      \"rsid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dimension\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"locale\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"globalFilters\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"search\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"settings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"statistics\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metricContainer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"rowContainer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"globalPredictiveSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"anchorDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"bulkExportSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identityOverrides\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"config\": {\n      \"dimensions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contributionanalysis/queue?allowRemoteLoad=default",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contributionanalysis",
												"queue"
											],
											"query": [
												{
													"key": "allowRemoteLoad",
													"value": "default"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"aliqua\""
								},
								{
									"name": "Invalid request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"queueId\": 71459805,\n  \"createdTime\": \"sed adipisicing id nisi\",\n  \"queuedAfter\": -77452621,\n  \"state\": \"exercitation Duis labore ipsum\",\n  \"estimatedProcessingTime\": 67427324,\n  \"estimatedCompleteTime\": \"sunt pariatur ad ea\",\n  \"reportDefinition\": {\n    \"name\": \"fugiat ad\",\n    \"anomalyContext\": {\n      \"selectedAnomalyDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"trainingDays\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metricValue\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"viewRankedRequest\": {\n      \"rsid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dimension\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"locale\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"globalFilters\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"search\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"settings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"statistics\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metricContainer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"rowContainer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"globalPredictiveSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"anchorDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"bulkExportSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identityOverrides\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"config\": {\n      \"dimensions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contributionanalysis/queue?allowRemoteLoad=default",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contributionanalysis",
												"queue"
											],
											"query": [
												{
													"key": "allowRemoteLoad",
													"value": "default"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"resource_already_exists\",\n  \"errorDescription\": \"fugiat occaecat in sed\",\n  \"errorId\": \"irure ea Ut\",\n  \"errorDetails\": {\n    \"nullafa\": {},\n    \"enim3\": {},\n    \"sedc1\": {}\n  },\n  \"rootCauseService\": \"esse proident officia\"\n}"
								},
								{
									"name": "User Doesn't have sufficient priviliges",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"queueId\": 71459805,\n  \"createdTime\": \"sed adipisicing id nisi\",\n  \"queuedAfter\": -77452621,\n  \"state\": \"exercitation Duis labore ipsum\",\n  \"estimatedProcessingTime\": 67427324,\n  \"estimatedCompleteTime\": \"sunt pariatur ad ea\",\n  \"reportDefinition\": {\n    \"name\": \"fugiat ad\",\n    \"anomalyContext\": {\n      \"selectedAnomalyDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"trainingDays\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metricValue\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"viewRankedRequest\": {\n      \"rsid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dimension\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"locale\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"globalFilters\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"search\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"settings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"statistics\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metricContainer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"rowContainer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"globalPredictiveSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"anchorDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"bulkExportSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identityOverrides\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"config\": {\n      \"dimensions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contributionanalysis/queue?allowRemoteLoad=default",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contributionanalysis",
												"queue"
											],
											"query": [
												{
													"key": "allowRemoteLoad",
													"value": "default"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden resource.User does not have access to contribution Analysis.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"queueId\": 71459805,\n  \"createdTime\": \"sed adipisicing id nisi\",\n  \"queuedAfter\": -77452621,\n  \"state\": \"exercitation Duis labore ipsum\",\n  \"estimatedProcessingTime\": 67427324,\n  \"estimatedCompleteTime\": \"sunt pariatur ad ea\",\n  \"reportDefinition\": {\n    \"name\": \"fugiat ad\",\n    \"anomalyContext\": {\n      \"selectedAnomalyDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"trainingDays\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metricValue\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"viewRankedRequest\": {\n      \"rsid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dimension\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"locale\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"globalFilters\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"search\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"settings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"statistics\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metricContainer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"rowContainer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"globalPredictiveSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"anchorDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"bulkExportSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identityOverrides\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"config\": {\n      \"dimensions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contributionanalysis/queue?allowRemoteLoad=default",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contributionanalysis",
												"queue"
											],
											"query": [
												{
													"key": "allowRemoteLoad",
													"value": "default"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "External API error; Contribution Analysis job creation failed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"queueId\": 71459805,\n  \"createdTime\": \"sed adipisicing id nisi\",\n  \"queuedAfter\": -77452621,\n  \"state\": \"exercitation Duis labore ipsum\",\n  \"estimatedProcessingTime\": 67427324,\n  \"estimatedCompleteTime\": \"sunt pariatur ad ea\",\n  \"reportDefinition\": {\n    \"name\": \"fugiat ad\",\n    \"anomalyContext\": {\n      \"selectedAnomalyDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"trainingDays\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metricValue\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"viewRankedRequest\": {\n      \"rsid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dimension\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"locale\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"globalFilters\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"search\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"settings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"statistics\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metricContainer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"rowContainer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"globalPredictiveSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"anchorDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"bulkExportSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identityOverrides\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"config\": {\n      \"dimensions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contributionanalysis/queue?allowRemoteLoad=default",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contributionanalysis",
												"queue"
											],
											"query": [
												{
													"key": "allowRemoteLoad",
													"value": "default"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "{rsid}/configdata",
					"item": [
						{
							"name": "Retrieves the CA configuration for the given RSID",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contributionanalysis/:rsid/configdata?blacklist=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contributionanalysis",
										":rsid",
										"configdata"
									],
									"query": [
										{
											"key": "blacklist",
											"value": "false",
											"description": "When true, will only return blacklisted dimensions rather than whitelisted ones"
										}
									],
									"variable": [
										{
											"key": "rsid",
											"value": "aliqua",
											"description": "(Required) RSID to retrieve CA configuration for"
										}
									]
								},
								"description": "If the suite has a custom configuration, that will be returned. <br><br>If there is no defined custom configuration then a default configuration will be returned. The default configuration will be limited to 10 dimensions for Standard-Access companies (unlimited for Premium)."
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contributionanalysis/:rsid/configdata?blacklist=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contributionanalysis",
												":rsid",
												"configdata"
											],
											"query": [
												{
													"key": "blacklist",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "rsid",
													"value": "aliqua",
													"description": "(Required) RSID to retrieve CA configuration for"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"dimensions\": [\n    {\n      \"id\": \"qui irure sit Excepteur ut\",\n      \"hidden\": true\n    },\n    {\n      \"id\": \"voluptate reprehenderit labore anim labor\",\n      \"hidden\": false\n    }\n  ]\n}"
								},
								{
									"name": "Forbidden resource.User does not have access to contribution Analysis.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contributionanalysis/:rsid/configdata?blacklist=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contributionanalysis",
												":rsid",
												"configdata"
											],
											"query": [
												{
													"key": "blacklist",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "rsid",
													"value": "aliqua",
													"description": "(Required) RSID to retrieve CA configuration for"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed reading from database",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contributionanalysis/:rsid/configdata?blacklist=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contributionanalysis",
												":rsid",
												"configdata"
											],
											"query": [
												{
													"key": "blacklist",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "rsid",
													"value": "aliqua",
													"description": "(Required) RSID to retrieve CA configuration for"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Specify/update the custom CA configuration for the given RSID",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dimensions\": [\n    {\n      \"id\": \"et deserunt consectetur\",\n      \"hidden\": false\n    },\n    {\n      \"id\": \"aute commodo\",\n      \"hidden\": true\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contributionanalysis/:rsid/configdata?blacklist=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contributionanalysis",
										":rsid",
										"configdata"
									],
									"query": [
										{
											"key": "blacklist",
											"value": "false",
											"description": "When true, creates a blacklist for the user rather than a whitelist"
										}
									],
									"variable": [
										{
											"key": "rsid",
											"value": "aliqua",
											"description": "(Required) RSID to set CA configuration for"
										}
									]
								},
								"description": "Note: Same functionality as PUT /{rsid}/configdata <br><br>This endpoint will always return a Configuration object (as it exists after the update operation)."
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contributionanalysis/:rsid/configdata?blacklist=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contributionanalysis",
												":rsid",
												"configdata"
											],
											"query": [
												{
													"key": "blacklist",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "rsid",
													"value": "aliqua",
													"description": "(Required) RSID to set CA configuration for"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"dimensions\": [\n    {\n      \"id\": \"et deserunt consectetur\",\n      \"hidden\": false\n    },\n    {\n      \"id\": \"aute commodo\",\n      \"hidden\": true\n    }\n  ]\n}"
								},
								{
									"name": "Failed inserting into Database",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contributionanalysis/:rsid/configdata?blacklist=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contributionanalysis",
												":rsid",
												"configdata"
											],
											"query": [
												{
													"key": "blacklist",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "rsid",
													"value": "aliqua",
													"description": "(Required) RSID to set CA configuration for"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden resource.User does not have access to contribution Analysis.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contributionanalysis/:rsid/configdata?blacklist=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contributionanalysis",
												":rsid",
												"configdata"
											],
											"query": [
												{
													"key": "blacklist",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "rsid",
													"value": "aliqua",
													"description": "(Required) RSID to set CA configuration for"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed reading from database",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contributionanalysis/:rsid/configdata?blacklist=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contributionanalysis",
												":rsid",
												"configdata"
											],
											"query": [
												{
													"key": "blacklist",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "rsid",
													"value": "aliqua",
													"description": "(Required) RSID to set CA configuration for"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Specify/update the custom CA configuration for the given RSID",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dimensions\": [\n    {\n      \"id\": \"et deserunt consectetur\",\n      \"hidden\": false\n    },\n    {\n      \"id\": \"aute commodo\",\n      \"hidden\": true\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contributionanalysis/:rsid/configdata?blacklist=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contributionanalysis",
										":rsid",
										"configdata"
									],
									"query": [
										{
											"key": "blacklist",
											"value": "false",
											"description": "When true, updates the user's blacklist instead of their whitelist"
										}
									],
									"variable": [
										{
											"key": "rsid",
											"value": "aliqua",
											"description": "(Required) RSID to set CA configuration for"
										}
									]
								},
								"description": "Note: Same functionality as POST /{rsid}/configdata <br><br> This endpoint will always return a Configuration object (as it exists after the update operation)."
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contributionanalysis/:rsid/configdata?blacklist=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contributionanalysis",
												":rsid",
												"configdata"
											],
											"query": [
												{
													"key": "blacklist",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "rsid",
													"value": "aliqua",
													"description": "(Required) RSID to set CA configuration for"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"dimensions\": [\n    {\n      \"id\": \"et deserunt consectetur\",\n      \"hidden\": false\n    },\n    {\n      \"id\": \"aute commodo\",\n      \"hidden\": true\n    }\n  ]\n}"
								},
								{
									"name": "Failed inserting into Database",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contributionanalysis/:rsid/configdata?blacklist=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contributionanalysis",
												":rsid",
												"configdata"
											],
											"query": [
												{
													"key": "blacklist",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "rsid",
													"value": "aliqua",
													"description": "(Required) RSID to set CA configuration for"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden resource.User does not have access to contribution Analysis.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contributionanalysis/:rsid/configdata?blacklist=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contributionanalysis",
												":rsid",
												"configdata"
											],
											"query": [
												{
													"key": "blacklist",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "rsid",
													"value": "aliqua",
													"description": "(Required) RSID to set CA configuration for"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed reading from database",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contributionanalysis/:rsid/configdata?blacklist=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contributionanalysis",
												":rsid",
												"configdata"
											],
											"query": [
												{
													"key": "blacklist",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "rsid",
													"value": "aliqua",
													"description": "(Required) RSID to set CA configuration for"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete custom CA configuration for the given RSID (set back to default)",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contributionanalysis/:rsid/configdata?blacklist=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contributionanalysis",
										":rsid",
										"configdata"
									],
									"query": [
										{
											"key": "blacklist",
											"value": "false",
											"description": "When true, deletes the user's blacklist instead of their whitelist"
										}
									],
									"variable": [
										{
											"key": "rsid",
											"value": "aliqua",
											"description": "(Required) RSID to delete custom CA configuration for"
										}
									]
								},
								"description": "This endpoint always returns a Configuration object. If delete was successful, that should be the default Configuration."
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contributionanalysis/:rsid/configdata?blacklist=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contributionanalysis",
												":rsid",
												"configdata"
											],
											"query": [
												{
													"key": "blacklist",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "rsid",
													"value": "aliqua",
													"description": "(Required) RSID to delete custom CA configuration for"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"dimensions\": [\n    {\n      \"id\": \"et deserunt consectetur\",\n      \"hidden\": false\n    },\n    {\n      \"id\": \"aute commodo\",\n      \"hidden\": true\n    }\n  ]\n}"
								},
								{
									"name": "Failed deleting from Database",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contributionanalysis/:rsid/configdata?blacklist=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contributionanalysis",
												":rsid",
												"configdata"
											],
											"query": [
												{
													"key": "blacklist",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "rsid",
													"value": "aliqua",
													"description": "(Required) RSID to delete custom CA configuration for"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden resource.User does not have access to contribution Analysis.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contributionanalysis/:rsid/configdata?blacklist=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contributionanalysis",
												":rsid",
												"configdata"
											],
											"query": [
												{
													"key": "blacklist",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "rsid",
													"value": "aliqua",
													"description": "(Required) RSID to delete custom CA configuration for"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed reading from database",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contributionanalysis/:rsid/configdata?blacklist=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contributionanalysis",
												":rsid",
												"configdata"
											],
											"query": [
												{
													"key": "blacklist",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "rsid",
													"value": "aliqua",
													"description": "(Required) RSID to delete custom CA configuration for"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Estimate the amount of time (in seconds) that it takes for a job to run",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contributionanalysis/:rsid/configdata/estimate?dimensionCount=43407647",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contributionanalysis",
										":rsid",
										"configdata",
										"estimate"
									],
									"query": [
										{
											"key": "dimensionCount",
											"value": "43407647",
											"description": "(Required) Dimension Count"
										}
									],
									"variable": [
										{
											"key": "rsid",
											"value": "aliqua",
											"description": "(Required) rsid"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contributionanalysis/:rsid/configdata/estimate?dimensionCount=43407647",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contributionanalysis",
												":rsid",
												"configdata",
												"estimate"
											],
											"query": [
												{
													"key": "dimensionCount",
													"value": "43407647"
												}
											],
											"variable": [
												{
													"key": "rsid",
													"value": "aliqua",
													"description": "(Required) rsid"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"aliqua\""
								},
								{
									"name": "Invalid JSON  (dimensionCount is required and must be greater than 0)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contributionanalysis/:rsid/configdata/estimate?dimensionCount=43407647",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contributionanalysis",
												":rsid",
												"configdata",
												"estimate"
											],
											"query": [
												{
													"key": "dimensionCount",
													"value": "43407647"
												}
											],
											"variable": [
												{
													"key": "rsid",
													"value": "aliqua",
													"description": "(Required) rsid"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User Doesn't have sufficient priviliges",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contributionanalysis/:rsid/configdata/estimate?dimensionCount=43407647",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contributionanalysis",
												":rsid",
												"configdata",
												"estimate"
											],
											"query": [
												{
													"key": "dimensionCount",
													"value": "43407647"
												}
											],
											"variable": [
												{
													"key": "rsid",
													"value": "aliqua",
													"description": "(Required) rsid"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden resource.User does not have access to contribution Analysis.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contributionanalysis/:rsid/configdata/estimate?dimensionCount=43407647",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contributionanalysis",
												":rsid",
												"configdata",
												"estimate"
											],
											"query": [
												{
													"key": "dimensionCount",
													"value": "43407647"
												}
											],
											"variable": [
												{
													"key": "rsid",
													"value": "aliqua",
													"description": "(Required) rsid"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "External API error; Contribution Analysis job estimate retrieval failed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contributionanalysis/:rsid/configdata/estimate?dimensionCount=43407647",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contributionanalysis",
												":rsid",
												"configdata",
												"estimate"
											],
											"query": [
												{
													"key": "dimensionCount",
													"value": "43407647"
												}
											],
											"variable": [
												{
													"key": "rsid",
													"value": "aliqua",
													"description": "(Required) rsid"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "usagetoken",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Retrieve a ca usage token.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contributionanalysis/usagetoken/:id?expansion=ownerFullName,owner&locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contributionanalysis",
												"usagetoken",
												":id"
											],
											"query": [
												{
													"key": "expansion",
													"value": "ownerFullName,owner",
													"description": "Comma-delimited list of fields to include on response."
												},
												{
													"key": "locale",
													"value": "en_US",
													"description": "Locale"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The id to retrieve"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/contributionanalysis/usagetoken/:id?expansion=createdDate,contributionAnalysisId&locale=en_US",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"contributionanalysis",
														"usagetoken",
														":id"
													],
													"query": [
														{
															"key": "expansion",
															"value": "createdDate,contributionAnalysisId"
														},
														{
															"key": "locale",
															"value": "en_US"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The id to retrieve"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"owner\": {\n    \"id\": -14837792,\n    \"imsUserId\": \"velit\"\n  },\n  \"createdDate\": \"2011-03-22T05:01:10.502Z\",\n  \"contributionAnalysisId\": \"laborum occaecat officia\"\n}"
										}
									]
								},
								{
									"name": "Delete a ca usage token. Only available for service tokens.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contributionanalysis/usagetoken/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contributionanalysis",
												"usagetoken",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The id to delete"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/contributionanalysis/usagetoken/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"contributionanalysis",
														"usagetoken",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The id to delete"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"result\": \"proident sit\",\n  \"message\": \"est tempor do sed et\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get ca usage tokens.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contributionanalysis/usagetoken?filterByCreatedAfter=aliqua&filterByCreatedBefore=aliqua&ownerId=43407647&expansion=ownerFullName,owner&locale=en_US&limit=10&page=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contributionanalysis",
										"usagetoken"
									],
									"query": [
										{
											"key": "filterByCreatedAfter",
											"value": "aliqua",
											"description": "Filter list to only include usage tokens created after this date (ISO8601 format)"
										},
										{
											"key": "filterByCreatedBefore",
											"value": "aliqua",
											"description": "Filter list to only include usage tokens created before this date (ISO8601 format)"
										},
										{
											"key": "ownerId",
											"value": "43407647",
											"description": "Filter list to only include usage tokens created by the specified loginId"
										},
										{
											"key": "expansion",
											"value": "ownerFullName,owner",
											"description": "Comma-delimited list of additional metadata fields to include on response."
										},
										{
											"key": "locale",
											"value": "en_US",
											"description": "Locale"
										},
										{
											"key": "limit",
											"value": "10",
											"description": "Number of results per page"
										},
										{
											"key": "page",
											"value": "0",
											"description": "Page number (base 0 - first page is \"0\")"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contributionanalysis/usagetoken?filterByCreatedAfter=aliqua&filterByCreatedBefore=aliqua&ownerId=43407647&expansion=createdDate,contributionAnalysisId&locale=en_US&limit=10&page=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contributionanalysis",
												"usagetoken"
											],
											"query": [
												{
													"key": "filterByCreatedAfter",
													"value": "aliqua"
												},
												{
													"key": "filterByCreatedBefore",
													"value": "aliqua"
												},
												{
													"key": "ownerId",
													"value": "43407647"
												},
												{
													"key": "expansion",
													"value": "createdDate,contributionAnalysisId"
												},
												{
													"key": "locale",
													"value": "en_US"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "0"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"totalElements\": 34266350,\n  \"totalPages\": 9445189,\n  \"sort\": {\n    \"sorted\": true,\n    \"unsorted\": false,\n    \"empty\": true\n  },\n  \"first\": false,\n  \"last\": false,\n  \"number\": 5136417,\n  \"numberOfElements\": -32783416,\n  \"pageable\": {\n    \"sort\": {\n      \"sorted\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"unsorted\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"empty\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"pageSize\": 2295845,\n    \"pageNumber\": -64155420,\n    \"paged\": false,\n    \"unpaged\": false,\n    \"offset\": 87254560\n  },\n  \"size\": 56423295,\n  \"content\": [\n    {\n      \"owner\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"createdDate\": \"1976-11-27T09:38:25.032Z\",\n      \"contributionAnalysisId\": \"eu eiusmod sint\"\n    },\n    {\n      \"owner\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"createdDate\": \"1997-10-16T02:23:06.775Z\",\n      \"contributionAnalysisId\": \"sed elit do est no\"\n    }\n  ],\n  \"empty\": false\n}"
								}
							]
						},
						{
							"name": "Create a ca usage token. Only available for service tokens.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"owner\": {\n    \"id\": -14837792,\n    \"imsUserId\": \"velit\"\n  },\n  \"createdDate\": \"2011-03-22T05:01:10.502Z\",\n  \"contributionAnalysisId\": \"laborum occaecat officia\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contributionanalysis/usagetoken?expansion=ownerFullName,owner&locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contributionanalysis",
										"usagetoken"
									],
									"query": [
										{
											"key": "expansion",
											"value": "ownerFullName,owner",
											"description": "Comma-delimited list of fields to include on response."
										},
										{
											"key": "locale",
											"value": "en_US",
											"description": "Locale"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"owner\": {\n    \"id\": -14837792,\n    \"imsUserId\": \"velit\"\n  },\n  \"createdDate\": \"2011-03-22T05:01:10.502Z\",\n  \"contributionAnalysisId\": \"laborum occaecat officia\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contributionanalysis/usagetoken?expansion=createdDate,contributionAnalysisId&locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contributionanalysis",
												"usagetoken"
											],
											"query": [
												{
													"key": "expansion",
													"value": "createdDate,contributionAnalysisId"
												},
												{
													"key": "locale",
													"value": "en_US"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"owner\": {\n    \"id\": -14837792,\n    \"imsUserId\": \"velit\"\n  },\n  \"createdDate\": \"2011-03-22T05:01:10.502Z\",\n  \"contributionAnalysisId\": \"laborum occaecat officia\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Callback to create notification that the Contribution Analysis Job has finished",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/contributionanalysis/jobDone?companyId=43407647&loginId=43407647&rsid=aliqua&reportName=aliqua&id=43407647",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"contributionanalysis",
								"jobDone"
							],
							"query": [
								{
									"key": "companyId",
									"value": "43407647",
									"description": "(Required) The companyId of the job"
								},
								{
									"key": "loginId",
									"value": "43407647",
									"description": "(Required) The loginId of the job"
								},
								{
									"key": "rsid",
									"value": "aliqua",
									"description": "(Required) The rsid of the job"
								},
								{
									"key": "reportName",
									"value": "aliqua",
									"description": "(Required) The Report Name of the job"
								},
								{
									"key": "id",
									"value": "43407647",
									"description": "(Required) The id of the report that is finished"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contributionanalysis/jobDone?companyId=43407647&loginId=43407647&rsid=aliqua&reportName=aliqua&id=43407647",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contributionanalysis",
										"jobDone"
									],
									"query": [
										{
											"key": "companyId",
											"value": "43407647"
										},
										{
											"key": "loginId",
											"value": "43407647"
										},
										{
											"key": "rsid",
											"value": "aliqua"
										},
										{
											"key": "reportName",
											"value": "aliqua"
										},
										{
											"key": "id",
											"value": "43407647"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"notificationId\": \"ut dolor et\",\n  \"companyId\": 37753514,\n  \"toId\": -55204503,\n  \"fromId\": -25416778,\n  \"createdTime\": \"1974-04-24T02:58:30.540Z\",\n  \"startTime\": \"1943-02-13T12:07:41.447Z\",\n  \"endTime\": \"1970-01-03T11:38:17.655Z\",\n  \"text\": \"nisi reprehenderit laborum Excepteur\",\n  \"url\": \"qui Lorem ipsum reprehenderit a\",\n  \"appendSession\": true,\n  \"rsid\": \"sunt sed ex\",\n  \"templateId\": \"ut eiusmod\",\n  \"templateValues\": [\n    \"laborum in\",\n    \"magna ut\"\n  ],\n  \"notificationStatus\": \"UNREAD\",\n  \"notificationType\": \"USER_SPECIFIC_MESSAGE\",\n  \"recipients\": {\n    \"userIds\": [\n      -65732650,\n      -46839458\n    ],\n    \"groupIds\": [\n      43263457,\n      -93202307\n    ],\n    \"all\": true\n  },\n  \"locale\": {\n    \"script\": \"qui deserunt\",\n    \"country\": \"aliquip pariatur\",\n    \"variant\": \"labore sint consectetur\",\n    \"extensionKeys\": [\n      \"incididunt eu\",\n      \"consectetur non\"\n    ],\n    \"unicodeLocaleAttributes\": [\n      \"pariatur ullamco do\",\n      \"mollit veniam in\"\n    ],\n    \"unicodeLocaleKeys\": [\n      \"Ut sunt cillum\",\n      \"Excepteur esse\"\n    ],\n    \"iso3Language\": \"occaecat dolore sit\",\n    \"iso3Country\": \"sint eu\",\n    \"displayLanguage\": \"elit voluptate aute\",\n    \"displayScript\": \"sint aute reprehenderit\",\n    \"displayCountry\": \"proident consectetur\",\n    \"displayVariant\": \"aliqua esse veniam id\",\n    \"displayName\": \"officia esse\",\n    \"language\": \"laborum officia\"\n  }\n}"
						},
						{
							"name": "Invalid parameters",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contributionanalysis/jobDone?companyId=43407647&loginId=43407647&rsid=aliqua&reportName=aliqua&id=43407647",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contributionanalysis",
										"jobDone"
									],
									"query": [
										{
											"key": "companyId",
											"value": "43407647"
										},
										{
											"key": "loginId",
											"value": "43407647"
										},
										{
											"key": "rsid",
											"value": "aliqua"
										},
										{
											"key": "reportName",
											"value": "aliqua"
										},
										{
											"key": "id",
											"value": "43407647"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "User Doesn't have sufficient priviliges",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contributionanalysis/jobDone?companyId=43407647&loginId=43407647&rsid=aliqua&reportName=aliqua&id=43407647",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contributionanalysis",
										"jobDone"
									],
									"query": [
										{
											"key": "companyId",
											"value": "43407647"
										},
										{
											"key": "loginId",
											"value": "43407647"
										},
										{
											"key": "rsid",
											"value": "aliqua"
										},
										{
											"key": "reportName",
											"value": "aliqua"
										},
										{
											"key": "id",
											"value": "43407647"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden resource.User does not have access to contribution Analysis.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contributionanalysis/jobDone?companyId=43407647&loginId=43407647&rsid=aliqua&reportName=aliqua&id=43407647",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contributionanalysis",
										"jobDone"
									],
									"query": [
										{
											"key": "companyId",
											"value": "43407647"
										},
										{
											"key": "loginId",
											"value": "43407647"
										},
										{
											"key": "rsid",
											"value": "aliqua"
										},
										{
											"key": "reportName",
											"value": "aliqua"
										},
										{
											"key": "id",
											"value": "43407647"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed to create the notification",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contributionanalysis/jobDone?companyId=43407647&loginId=43407647&rsid=aliqua&reportName=aliqua&id=43407647",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contributionanalysis",
										"jobDone"
									],
									"query": [
										{
											"key": "companyId",
											"value": "43407647"
										},
										{
											"key": "loginId",
											"value": "43407647"
										},
										{
											"key": "rsid",
											"value": "aliqua"
										},
										{
											"key": "reportName",
											"value": "aliqua"
										},
										{
											"key": "id",
											"value": "43407647"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "datafeeds",
			"item": [
				{
					"name": "{datafeed Id}",
					"item": [
						{
							"name": "Retrieves a single data feed.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/datafeeds/:datafeedId?locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"datafeeds",
										":datafeedId"
									],
									"query": [
										{
											"key": "locale",
											"value": "en_US",
											"description": "Locale"
										}
									],
									"variable": [
										{
											"key": "datafeedId",
											"value": "43407647",
											"description": "(Required) The dataFeed id for which to retrieve information"
										}
									]
								},
								"description": "Gets a DataFeed object from the ID."
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/datafeeds/:datafeedId?locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datafeeds",
												":datafeedId"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US"
												}
											],
											"variable": [
												{
													"key": "datafeedId",
													"value": "43407647",
													"description": "(Required) The dataFeed id for which to retrieve information"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"feedId\": -40847402,\n  \"feedState\": \"COMPLETE\",\n  \"feedType\": \"STANDARD\",\n  \"feedName\": \"consequat occ\",\n  \"startDate\": \"1948-10-11T06:41:51.128Z\",\n  \"endDate\": \"1946-09-18T14:38:31.195Z\",\n  \"deliveryPreset\": 43924020,\n  \"deliveryFolder\": \"do esse\",\n  \"columnPreset\": 9984337,\n  \"interval\": \"DAILY\",\n  \"compression\": \"ZIP\",\n  \"packaging\": \"CHUNKED\",\n  \"chunkSize\": -98246013,\n  \"manifest\": \"FIN\",\n  \"noDataManifest\": true,\n  \"notificationEmail\": [\n    \"cillum\",\n    \"incididunt\"\n  ],\n  \"notes\": \"ea mollit\",\n  \"delay\": -94748186,\n  \"dynamicLookups\": true,\n  \"replaceEscapedChars\": true,\n  \"createdBy\": \"cillum ad\",\n  \"modifiedBy\": \"magna mollit nostrud in et\",\n  \"rsid\": \"ullamco officia\",\n  \"customerVisible\": false,\n  \"lastModifiedDate\": \"1964-07-02T03:44:47.232Z\"\n}"
								}
							]
						},
						{
							"name": "Updates a single data feed.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"feedId\": -40847402,\n  \"feedState\": \"COMPLETE\",\n  \"feedType\": \"STANDARD\",\n  \"feedName\": \"consequat occ\",\n  \"startDate\": \"1948-10-11T06:41:51.128Z\",\n  \"endDate\": \"1946-09-18T14:38:31.195Z\",\n  \"deliveryPreset\": 43924020,\n  \"deliveryFolder\": \"do esse\",\n  \"columnPreset\": 9984337,\n  \"interval\": \"DAILY\",\n  \"compression\": \"ZIP\",\n  \"packaging\": \"CHUNKED\",\n  \"chunkSize\": -98246013,\n  \"manifest\": \"FIN\",\n  \"noDataManifest\": true,\n  \"notificationEmail\": [\n    \"cillum\",\n    \"incididunt\"\n  ],\n  \"notes\": \"ea mollit\",\n  \"delay\": -94748186,\n  \"dynamicLookups\": true,\n  \"replaceEscapedChars\": true,\n  \"createdBy\": \"cillum ad\",\n  \"modifiedBy\": \"magna mollit nostrud in et\",\n  \"rsid\": \"ullamco officia\",\n  \"customerVisible\": false,\n  \"lastModifiedDate\": \"1964-07-02T03:44:47.232Z\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/datafeeds/:datafeedId?locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"datafeeds",
										":datafeedId"
									],
									"query": [
										{
											"key": "locale",
											"value": "en_US",
											"description": "Locale"
										}
									],
									"variable": [
										{
											"key": "datafeedId",
											"value": "43407647",
											"description": "(Required) The The Feed id that will be updated"
										}
									]
								},
								"description": "Updates a data feed. Uses a DataFeedUpdaterBody as an input. Returns a regular DataFeed."
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"feedId\": -40847402,\n  \"feedState\": \"COMPLETE\",\n  \"feedType\": \"STANDARD\",\n  \"feedName\": \"consequat occ\",\n  \"startDate\": \"1948-10-11T06:41:51.128Z\",\n  \"endDate\": \"1946-09-18T14:38:31.195Z\",\n  \"deliveryPreset\": 43924020,\n  \"deliveryFolder\": \"do esse\",\n  \"columnPreset\": 9984337,\n  \"interval\": \"DAILY\",\n  \"compression\": \"ZIP\",\n  \"packaging\": \"CHUNKED\",\n  \"chunkSize\": -98246013,\n  \"manifest\": \"FIN\",\n  \"noDataManifest\": true,\n  \"notificationEmail\": [\n    \"cillum\",\n    \"incididunt\"\n  ],\n  \"notes\": \"ea mollit\",\n  \"delay\": -94748186,\n  \"dynamicLookups\": true,\n  \"replaceEscapedChars\": true,\n  \"createdBy\": \"cillum ad\",\n  \"modifiedBy\": \"magna mollit nostrud in et\",\n  \"rsid\": \"ullamco officia\",\n  \"customerVisible\": false,\n  \"lastModifiedDate\": \"1964-07-02T03:44:47.232Z\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/datafeeds/:datafeedId?locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datafeeds",
												":datafeedId"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US"
												}
											],
											"variable": [
												{
													"key": "datafeedId",
													"value": "43407647",
													"description": "(Required) The The Feed id that will be updated"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"feedId\": -40847402,\n  \"feedState\": \"COMPLETE\",\n  \"feedType\": \"STANDARD\",\n  \"feedName\": \"consequat occ\",\n  \"startDate\": \"1948-10-11T06:41:51.128Z\",\n  \"endDate\": \"1946-09-18T14:38:31.195Z\",\n  \"deliveryPreset\": 43924020,\n  \"deliveryFolder\": \"do esse\",\n  \"columnPreset\": 9984337,\n  \"interval\": \"DAILY\",\n  \"compression\": \"ZIP\",\n  \"packaging\": \"CHUNKED\",\n  \"chunkSize\": -98246013,\n  \"manifest\": \"FIN\",\n  \"noDataManifest\": true,\n  \"notificationEmail\": [\n    \"cillum\",\n    \"incididunt\"\n  ],\n  \"notes\": \"ea mollit\",\n  \"delay\": -94748186,\n  \"dynamicLookups\": true,\n  \"replaceEscapedChars\": true,\n  \"createdBy\": \"cillum ad\",\n  \"modifiedBy\": \"magna mollit nostrud in et\",\n  \"rsid\": \"ullamco officia\",\n  \"customerVisible\": false,\n  \"lastModifiedDate\": \"1964-07-02T03:44:47.232Z\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "suite",
					"item": [
						{
							"name": "Get all data feeds for all report suites that the user has access to",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"rsids\": [\n    \"mollit consectetur do\",\n    \"id in\"\n  ],\n  \"limit\": -16773325,\n  \"page\": -37097750\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/datafeeds/suite?locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"datafeeds",
										"suite"
									],
									"query": [
										{
											"key": "locale",
											"value": "en_US",
											"description": "Locale"
										}
									]
								},
								"description": "Permisson to modify DataFeeds will be validated on any passed rsids.<br>If no rsids are included in the request, service will automatically use all rsids the user has access to<br>Example body: {\"rsids\": [\"sistr2\", \"geometrixx1\"]}"
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"rsids\": [\n    \"sint Lorem consequat proident culpa\",\n    \"nisi\"\n  ],\n  \"limit\": 4301947,\n  \"page\": 28156431\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/datafeeds/suite?locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datafeeds",
												"suite"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"feedId\": -40847402,\n  \"feedState\": \"COMPLETE\",\n  \"feedType\": \"STANDARD\",\n  \"feedName\": \"consequat occ\",\n  \"startDate\": \"1948-10-11T06:41:51.128Z\",\n  \"endDate\": \"1946-09-18T14:38:31.195Z\",\n  \"deliveryPreset\": 43924020,\n  \"deliveryFolder\": \"do esse\",\n  \"columnPreset\": 9984337,\n  \"interval\": \"DAILY\",\n  \"compression\": \"ZIP\",\n  \"packaging\": \"CHUNKED\",\n  \"chunkSize\": -98246013,\n  \"manifest\": \"FIN\",\n  \"noDataManifest\": true,\n  \"notificationEmail\": [\n    \"cillum\",\n    \"incididunt\"\n  ],\n  \"notes\": \"ea mollit\",\n  \"delay\": -94748186,\n  \"dynamicLookups\": true,\n  \"replaceEscapedChars\": true,\n  \"createdBy\": \"cillum ad\",\n  \"modifiedBy\": \"magna mollit nostrud in et\",\n  \"rsid\": \"ullamco officia\",\n  \"customerVisible\": false,\n  \"lastModifiedDate\": \"1964-07-02T03:44:47.232Z\"\n}"
								}
							]
						},
						{
							"name": "Retrieves all data feeds for a given report sutie.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/datafeeds/suite/:rsid?locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"datafeeds",
										"suite",
										":rsid"
									],
									"query": [
										{
											"key": "locale",
											"value": "en_US",
											"description": "Locale"
										}
									],
									"variable": [
										{
											"key": "rsid",
											"value": "aliqua",
											"description": "(Required) The RSID for which to retrieve all data feeds"
										}
									]
								},
								"description": "Retrieves an array of DataFeeds for a given report suite id."
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/datafeeds/suite/:rsid?locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datafeeds",
												"suite",
												":rsid"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US"
												}
											],
											"variable": [
												{
													"key": "rsid",
													"value": "aliqua",
													"description": "(Required) The RSID for which to retrieve all data feeds"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"feedId\": 73938202,\n    \"feedState\": \"CANCELED\",\n    \"feedType\": \"STANDARD\",\n    \"feedName\": \"dolore incididunt proident non\",\n    \"startDate\": \"1944-08-23T15:14:58.052Z\",\n    \"endDate\": \"2006-02-02T22:04:56.814Z\",\n    \"deliveryPreset\": 43329093,\n    \"deliveryFolder\": \"nulla veniam occaecat\",\n    \"columnPreset\": -17479618,\n    \"interval\": \"HOURLY\",\n    \"compression\": \"ZIP\",\n    \"packaging\": \"CHUNKED\",\n    \"chunkSize\": -37873840,\n    \"manifest\": \"CHUNKED\",\n    \"noDataManifest\": false,\n    \"notificationEmail\": [\n      \"culpa sunt reprehend\",\n      \"voluptate eiusmod\"\n    ],\n    \"notes\": \"labor\",\n    \"delay\": 8070676,\n    \"dynamicLookups\": false,\n    \"replaceEscapedChars\": true,\n    \"createdBy\": \"aliqua anim\",\n    \"modifiedBy\": \"proident eiusmod\",\n    \"rsid\": \"enim aute id ut cup\",\n    \"customerVisible\": false,\n    \"lastModifiedDate\": \"1964-01-12T09:01:09.075Z\"\n  },\n  {\n    \"feedId\": 14489477,\n    \"feedState\": \"ACTIVE\",\n    \"feedType\": \"STANDARD\",\n    \"feedName\": \"Lorem \",\n    \"startDate\": \"1990-06-13T04:16:19.098Z\",\n    \"endDate\": \"1968-11-24T06:00:09.191Z\",\n    \"deliveryPreset\": 16195779,\n    \"deliveryFolder\": \"in eiusmod\",\n    \"columnPreset\": -29016743,\n    \"interval\": \"HOURLY\",\n    \"compression\": \"ZIP\",\n    \"packaging\": \"CHUNKED\",\n    \"chunkSize\": -14700958,\n    \"manifest\": \"FIN\",\n    \"noDataManifest\": false,\n    \"notificationEmail\": [\n      \"cillum ea sint\",\n      \"nulla consequat\"\n    ],\n    \"notes\": \"anim adipisicing\",\n    \"delay\": -42522601,\n    \"dynamicLookups\": true,\n    \"replaceEscapedChars\": false,\n    \"createdBy\": \"aliquip reprehenderit anim fugiat\",\n    \"modifiedBy\": \"cillum qui enim sin\",\n    \"rsid\": \"exercitation aliqua laborum\",\n    \"customerVisible\": true,\n    \"lastModifiedDate\": \"1952-08-15T13:21:19.431Z\"\n  }\n]"
								}
							]
						}
					]
				},
				{
					"name": "presets",
					"item": [
						{
							"name": "columns",
							"item": [
								{
									"name": "{rsid}",
									"item": [
										{
											"name": "Gets an array of column presets for given report suite.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "<API Key>",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datafeeds/presets/columns/:rsid?locale=en_US",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datafeeds",
														"presets",
														"columns",
														":rsid"
													],
													"query": [
														{
															"key": "locale",
															"value": "en_US",
															"description": "Locale"
														}
													],
													"variable": [
														{
															"key": "rsid",
															"value": "aliqua",
															"description": "(Required) The report suite ID for which to get the column presets"
														}
													]
												},
												"description": "Gets an array of all the previously created column presets."
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datafeeds/presets/columns/:rsid?locale=en_US",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datafeeds",
																"presets",
																"columns",
																":rsid"
															],
															"query": [
																{
																	"key": "locale",
																	"value": "en_US"
																}
															],
															"variable": [
																{
																	"key": "rsid",
																	"value": "aliqua",
																	"description": "(Required) The report suite ID for which to get the column presets"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"columnPresetId\": -74428782,\n  \"name\": \"nostrud dolore sint\",\n  \"data\": [\n    {\n      \"name\": \"irure incididunt dolore\"\n    },\n    {\n      \"name\": \"nulla incididunt\"\n    }\n  ],\n  \"type\": \"INSIGHT\",\n  \"customerVisible\": false\n}"
												}
											]
										},
										{
											"name": "Creates a new column preset for the given rsid.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "<API Key>",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"columnPresetId\": -5517429,\n  \"name\": \"ullamco dolor\",\n  \"data\": [\n    {\n      \"name\": \"Duis pari\"\n    },\n    {\n      \"name\": \"in quis aliquip dolor veniam\"\n    }\n  ],\n  \"type\": \"STANDARD\",\n  \"customerVisible\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/datafeeds/presets/columns/:rsid?locale=en_US",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datafeeds",
														"presets",
														"columns",
														":rsid"
													],
													"query": [
														{
															"key": "locale",
															"value": "en_US",
															"description": "Locale"
														}
													],
													"variable": [
														{
															"key": "rsid",
															"value": "aliqua",
															"description": "(Required) The report suite ID for which to get the requests"
														}
													]
												},
												"description": "creates a column preset."
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"columnPresetId\": -5517429,\n  \"name\": \"ullamco dolor\",\n  \"data\": [\n    {\n      \"name\": \"Duis pari\"\n    },\n    {\n      \"name\": \"in quis aliquip dolor veniam\"\n    }\n  ],\n  \"type\": \"STANDARD\",\n  \"customerVisible\": false\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/datafeeds/presets/columns/:rsid?locale=en_US",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datafeeds",
																"presets",
																"columns",
																":rsid"
															],
															"query": [
																{
																	"key": "locale",
																	"value": "en_US"
																}
															],
															"variable": [
																{
																	"key": "rsid",
																	"value": "aliqua",
																	"description": "(Required) The report suite ID for which to get the requests"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"columnPresetId\": -5517429,\n  \"name\": \"ullamco dolor\",\n  \"data\": [\n    {\n      \"name\": \"Duis pari\"\n    },\n    {\n      \"name\": \"in quis aliquip dolor veniam\"\n    }\n  ],\n  \"type\": \"STANDARD\",\n  \"customerVisible\": false\n}"
												}
											]
										}
									]
								},
								{
									"name": "Gets the column preset for the given preset id",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/datafeeds/presets/columns/id/:presetId?locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datafeeds",
												"presets",
												"columns",
												"id",
												":presetId"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US",
													"description": "Locale"
												}
											],
											"variable": [
												{
													"key": "presetId",
													"value": "43407647",
													"description": "(Required) The preset id for which to get the column preset"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datafeeds/presets/columns/id/:presetId?locale=en_US",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datafeeds",
														"presets",
														"columns",
														"id",
														":presetId"
													],
													"query": [
														{
															"key": "locale",
															"value": "en_US"
														}
													],
													"variable": [
														{
															"key": "presetId",
															"value": "43407647",
															"description": "(Required) The preset id for which to get the column preset"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"name\": \"in sed labore\"\n}"
										}
									]
								},
								{
									"name": "Get all available columns.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/datafeeds/presets/columns/all?locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datafeeds",
												"presets",
												"columns",
												"all"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US",
													"description": "Locale"
												}
											]
										},
										"description": "Gets an array of all the columns to create column presets."
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datafeeds/presets/columns/all?locale=en_US",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datafeeds",
														"presets",
														"columns",
														"all"
													],
													"query": [
														{
															"key": "locale",
															"value": "en_US"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"name\": \"et anim Lorem ea\"\n  },\n  {\n    \"name\": \"Excepteur irure\"\n  }\n]"
										}
									]
								}
							]
						},
						{
							"name": "delivery",
							"item": [
								{
									"name": "{rsid}",
									"item": [
										{
											"name": "Gets an array of delivery presets for given report suite.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "<API Key>",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datafeeds/presets/delivery/:rsid?locale=en_US",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datafeeds",
														"presets",
														"delivery",
														":rsid"
													],
													"query": [
														{
															"key": "locale",
															"value": "en_US",
															"description": "Locale"
														}
													],
													"variable": [
														{
															"key": "rsid",
															"value": "aliqua",
															"description": "(Required) The report suite ID for which to get the delivery presets"
														}
													]
												},
												"description": "gets an array of the previously created DeliveryPresets for a given report suite."
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datafeeds/presets/delivery/:rsid?locale=en_US",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datafeeds",
																"presets",
																"delivery",
																":rsid"
															],
															"query": [
																{
																	"key": "locale",
																	"value": "en_US"
																}
															],
															"variable": [
																{
																	"key": "rsid",
																	"value": "aliqua",
																	"description": "(Required) The report suite ID for which to get the delivery presets"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[]"
												}
											]
										},
										{
											"name": "Creates a new delivery preset for the given rsid.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "<API Key>",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"aliqua\"",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/datafeeds/presets/delivery/:rsid?locale=en_US",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datafeeds",
														"presets",
														"delivery",
														":rsid"
													],
													"query": [
														{
															"key": "locale",
															"value": "en_US",
															"description": "Locale"
														}
													],
													"variable": [
														{
															"key": "rsid",
															"value": "aliqua",
															"description": "(Required) The report suite ID for which to create the delivery preset"
														}
													]
												},
												"description": "creates a new DeliveryPreset for a given report suite. This may be FTP, SFTP, S3 or AZURE_BLOB."
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "\"aliqua\"",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/datafeeds/presets/delivery/:rsid?locale=en_US",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datafeeds",
																"presets",
																"delivery",
																":rsid"
															],
															"query": [
																{
																	"key": "locale",
																	"value": "en_US"
																}
															],
															"variable": [
																{
																	"key": "rsid",
																	"value": "aliqua",
																	"description": "(Required) The report suite ID for which to create the delivery preset"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"deliveryPresetId\": 3370523,\n  \"name\": \"quis ut officia ex\",\n  \"protocol\": \"S3\"\n}"
												}
											]
										},
										{
											"name": "Updates a delivery preset.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "<API Key>",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"aliqua\"",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/datafeeds/presets/delivery/:rsid/:presetId?locale=en_US",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datafeeds",
														"presets",
														"delivery",
														":rsid",
														":presetId"
													],
													"query": [
														{
															"key": "locale",
															"value": "en_US",
															"description": "Locale"
														}
													],
													"variable": [
														{
															"key": "rsid",
															"value": "aliqua",
															"description": "(Required) The RSID for which the delivery preset will be udpated."
														},
														{
															"key": "presetId",
															"value": "43407647",
															"description": "(Required) The preset id that will be updated"
														}
													]
												}
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "\"aliqua\"",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/datafeeds/presets/delivery/:rsid/:presetId?locale=en_US",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datafeeds",
																"presets",
																"delivery",
																":rsid",
																":presetId"
															],
															"query": [
																{
																	"key": "locale",
																	"value": "en_US"
																}
															],
															"variable": [
																{
																	"key": "rsid",
																	"value": "aliqua",
																	"description": "(Required) The RSID for which the delivery preset will be udpated."
																},
																{
																	"key": "presetId",
																	"value": "43407647",
																	"description": "(Required) The preset id that will be updated"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"deliveryPresetId\": 3370523,\n  \"name\": \"quis ut officia ex\",\n  \"protocol\": \"S3\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Gets the delivery preset for the given preset id",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/datafeeds/presets/delivery/id/:presetId?locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datafeeds",
												"presets",
												"delivery",
												"id",
												":presetId"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US",
													"description": "Locale"
												}
											],
											"variable": [
												{
													"key": "presetId",
													"value": "43407647",
													"description": "(Required) The preset id for which to get the delivery preset"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datafeeds/presets/delivery/id/:presetId?locale=en_US",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datafeeds",
														"presets",
														"delivery",
														"id",
														":presetId"
													],
													"query": [
														{
															"key": "locale",
															"value": "en_US"
														}
													],
													"variable": [
														{
															"key": "presetId",
															"value": "43407647",
															"description": "(Required) The preset id for which to get the delivery preset"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"deliveryPresetId\": 3370523,\n  \"name\": \"quis ut officia ex\",\n  \"protocol\": \"S3\"\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "{feed Id}/{request Id}",
					"item": [
						{
							"name": "Send a datafeed again.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/datafeeds/:feedId/:requestId/resend?locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"datafeeds",
										":feedId",
										":requestId",
										"resend"
									],
									"query": [
										{
											"key": "locale",
											"value": "en_US",
											"description": "Locale"
										}
									],
									"variable": [
										{
											"key": "feedId",
											"value": "43407647",
											"description": "(Required) The datafeed id to resend."
										},
										{
											"key": "requestId",
											"value": "43407647",
											"description": "(Required) The specific request to resend"
										}
									]
								},
								"description": "Tries to send a datafeed to the delivery preset and folder again."
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/datafeeds/:feedId/:requestId/resend?locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datafeeds",
												":feedId",
												":requestId",
												"resend"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US"
												}
											],
											"variable": [
												{
													"key": "feedId",
													"value": "43407647",
													"description": "(Required) The datafeed id to resend."
												},
												{
													"key": "requestId",
													"value": "43407647",
													"description": "(Required) The specific request to resend"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"feedId\": -40847402,\n  \"feedState\": \"COMPLETE\",\n  \"feedType\": \"STANDARD\",\n  \"feedName\": \"consequat occ\",\n  \"startDate\": \"1948-10-11T06:41:51.128Z\",\n  \"endDate\": \"1946-09-18T14:38:31.195Z\",\n  \"deliveryPreset\": 43924020,\n  \"deliveryFolder\": \"do esse\",\n  \"columnPreset\": 9984337,\n  \"interval\": \"DAILY\",\n  \"compression\": \"ZIP\",\n  \"packaging\": \"CHUNKED\",\n  \"chunkSize\": -98246013,\n  \"manifest\": \"FIN\",\n  \"noDataManifest\": true,\n  \"notificationEmail\": [\n    \"cillum\",\n    \"incididunt\"\n  ],\n  \"notes\": \"ea mollit\",\n  \"delay\": -94748186,\n  \"dynamicLookups\": true,\n  \"replaceEscapedChars\": true,\n  \"createdBy\": \"cillum ad\",\n  \"modifiedBy\": \"magna mollit nostrud in et\",\n  \"rsid\": \"ullamco officia\",\n  \"customerVisible\": false,\n  \"lastModifiedDate\": \"1964-07-02T03:44:47.232Z\"\n}"
								}
							]
						},
						{
							"name": "Reprocesses the data in a datafeed.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/datafeeds/:feedId/:requestId/reprocess?locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"datafeeds",
										":feedId",
										":requestId",
										"reprocess"
									],
									"query": [
										{
											"key": "locale",
											"value": "en_US",
											"description": "Locale"
										}
									],
									"variable": [
										{
											"key": "feedId",
											"value": "43407647",
											"description": "(Required) The datafeed id to reprocess."
										},
										{
											"key": "requestId",
											"value": "43407647",
											"description": "(Required) The specific request to reprocess"
										}
									]
								},
								"description": "Reprocesses the data in a datafeed. Users may want to do this if data was missing from the prevoius feed."
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/datafeeds/:feedId/:requestId/reprocess?locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datafeeds",
												":feedId",
												":requestId",
												"reprocess"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US"
												}
											],
											"variable": [
												{
													"key": "feedId",
													"value": "43407647",
													"description": "(Required) The datafeed id to reprocess."
												},
												{
													"key": "requestId",
													"value": "43407647",
													"description": "(Required) The specific request to reprocess"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"feedId\": -40847402,\n  \"feedState\": \"COMPLETE\",\n  \"feedType\": \"STANDARD\",\n  \"feedName\": \"consequat occ\",\n  \"startDate\": \"1948-10-11T06:41:51.128Z\",\n  \"endDate\": \"1946-09-18T14:38:31.195Z\",\n  \"deliveryPreset\": 43924020,\n  \"deliveryFolder\": \"do esse\",\n  \"columnPreset\": 9984337,\n  \"interval\": \"DAILY\",\n  \"compression\": \"ZIP\",\n  \"packaging\": \"CHUNKED\",\n  \"chunkSize\": -98246013,\n  \"manifest\": \"FIN\",\n  \"noDataManifest\": true,\n  \"notificationEmail\": [\n    \"cillum\",\n    \"incididunt\"\n  ],\n  \"notes\": \"ea mollit\",\n  \"delay\": -94748186,\n  \"dynamicLookups\": true,\n  \"replaceEscapedChars\": true,\n  \"createdBy\": \"cillum ad\",\n  \"modifiedBy\": \"magna mollit nostrud in et\",\n  \"rsid\": \"ullamco officia\",\n  \"customerVisible\": false,\n  \"lastModifiedDate\": \"1964-07-02T03:44:47.232Z\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "request",
					"item": [
						{
							"name": "Gets an array of datafeedRequest objects.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/datafeeds/request/:rsid/:feedId?startDate=aliqua&endDate=aliqua&locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"datafeeds",
										"request",
										":rsid",
										":feedId"
									],
									"query": [
										{
											"key": "startDate",
											"value": "aliqua",
											"description": "The start of a date range to search for requests. Will default to 1 week if not provided."
										},
										{
											"key": "endDate",
											"value": "aliqua",
											"description": "The end of a date range to search for requests. Will default to 1 week if not provided."
										},
										{
											"key": "locale",
											"value": "en_US",
											"description": "Locale"
										}
									],
									"variable": [
										{
											"key": "rsid",
											"value": "aliqua",
											"description": "(Required) The report suite ID for which to get the requests"
										},
										{
											"key": "feedId",
											"value": "aliqua",
											"description": "(Required) The data feed for which to get the requests"
										}
									]
								},
								"description": "Gets an array of DataFeedRequest objects for a given report suite. If no time rnage is provided then it will default to all requests within the last week. If no requests are found in the given time range then this method will return an empty array. Time endDate and startDate are formatted as follows: http://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14"
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/datafeeds/request/:rsid/:feedId?startDate=aliqua&endDate=aliqua&locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datafeeds",
												"request",
												":rsid",
												":feedId"
											],
											"query": [
												{
													"key": "startDate",
													"value": "aliqua"
												},
												{
													"key": "endDate",
													"value": "aliqua"
												},
												{
													"key": "locale",
													"value": "en_US"
												}
											],
											"variable": [
												{
													"key": "rsid",
													"value": "aliqua",
													"description": "(Required) The report suite ID for which to get the requests"
												},
												{
													"key": "feedId",
													"value": "aliqua",
													"description": "(Required) The data feed for which to get the requests"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"requestId\": -32395178,\n  \"feedId\": -9491730,\n  \"feedName\": \"sit ut pariatur consectetur non\",\n  \"submittedDate\": \"consequat incididunt eiusmod\",\n  \"backfillFlag\": 43309647,\n  \"firstRunDate\": \"fugiat dolor tempor\",\n  \"firstCompleteDate\": \"dolore anim aliquip exercitation mollit\",\n  \"runCount\": -5970931,\n  \"runAttempt\": \"voluptate consectetur occaecat reprehenderit sunt\",\n  \"completeDate\": \"deserunt quis eiusmod Duis\",\n  \"requestPeriodBegin\": \"sunt\",\n  \"requestPeriodEnd\": \"consectetur Duis ipsum sint\",\n  \"errorCode\": 33787475,\n  \"errorMsg\": \"ullamco reprehenderit\",\n  \"requestState\": \"WAITING_FOR_EXPORT\",\n  \"rsid\": \"reprehenderit la\",\n  \"feedState\": \"COMPLETE\"\n}"
								}
							]
						},
						{
							"name": "Returns a dataFeedRequests based on search criteria",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"rsids\": [\n    \"laborum in minim sit\",\n    \"pariatur laborum Ut\"\n  ],\n  \"feedIds\": [\n    4040570,\n    52973116\n  ],\n  \"requestStates\": [\n    \"ERROR\",\n    \"UNKNOWN\"\n  ],\n  \"orderBy\": \"START_DATE\",\n  \"sortOrder\": \"ASCENDING\",\n  \"limit\": -98788565,\n  \"page\": 2894559,\n  \"billingCustomerId\": 68331936,\n  \"minStartDate\": \"2008-12-13T07:04:28.055Z\",\n  \"maxStartDate\": \"1967-08-18T09:49:53.047Z\",\n  \"minEndDate\": \"2022-01-29T18:57:45.293Z\",\n  \"maxEndDate\": \"1983-02-11T21:02:47.812Z\",\n  \"minAttemptDate\": \"1944-11-10T15:55:37.194Z\",\n  \"maxAttemptDate\": \"2014-07-09T22:29:30.327Z\",\n  \"minCompletionDate\": \"1963-08-02T01:44:12.203Z\",\n  \"maxCompletionDate\": \"1953-02-21T17:28:50.533Z\",\n  \"minSubmittedDate\": \"2019-05-25T13:04:44.856Z\",\n  \"maxSubmittedDate\": \"1960-03-12T09:30:14.435Z\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/datafeeds/request/search",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"datafeeds",
										"request",
										"search"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"rsids\": [\n    \"cillum proident\",\n    \"commodo veniam\"\n  ],\n  \"feedIds\": [\n    -7460780,\n    14136099\n  ],\n  \"requestStates\": [\n    \"SCHEDULED\",\n    \"WAITING_FOR_EXPORT\"\n  ],\n  \"orderBy\": \"COMPLETE_DATE\",\n  \"sortOrder\": \"DESCENDING\",\n  \"limit\": -81619261,\n  \"page\": 49054727,\n  \"billingCustomerId\": -52002249,\n  \"minStartDate\": \"2000-03-04T00:50:33.877Z\",\n  \"maxStartDate\": \"1972-09-29T17:01:20.969Z\",\n  \"minEndDate\": \"2003-10-03T05:13:44.404Z\",\n  \"maxEndDate\": \"1965-12-29T04:51:42.210Z\",\n  \"minAttemptDate\": \"1954-02-27T10:16:17.922Z\",\n  \"maxAttemptDate\": \"1958-08-24T22:44:34.906Z\",\n  \"minCompletionDate\": \"1995-05-26T18:49:52.084Z\",\n  \"maxCompletionDate\": \"1968-10-05T10:49:28.279Z\",\n  \"minSubmittedDate\": \"1942-11-11T07:47:04.179Z\",\n  \"maxSubmittedDate\": \"1997-03-22T20:30:01.147Z\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/datafeeds/request/search",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datafeeds",
												"request",
												"search"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"requestId\": -32395178,\n  \"feedId\": -9491730,\n  \"feedName\": \"sit ut pariatur consectetur non\",\n  \"submittedDate\": \"consequat incididunt eiusmod\",\n  \"backfillFlag\": 43309647,\n  \"firstRunDate\": \"fugiat dolor tempor\",\n  \"firstCompleteDate\": \"dolore anim aliquip exercitation mollit\",\n  \"runCount\": -5970931,\n  \"runAttempt\": \"voluptate consectetur occaecat reprehenderit sunt\",\n  \"completeDate\": \"deserunt quis eiusmod Duis\",\n  \"requestPeriodBegin\": \"sunt\",\n  \"requestPeriodEnd\": \"consectetur Duis ipsum sint\",\n  \"errorCode\": 33787475,\n  \"errorMsg\": \"ullamco reprehenderit\",\n  \"requestState\": \"WAITING_FOR_EXPORT\",\n  \"rsid\": \"reprehenderit la\",\n  \"feedState\": \"COMPLETE\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Creates a new data feed.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"feedId\": 73242805,\n  \"feedState\": \"ACTIVE\",\n  \"feedType\": \"STANDARD\",\n  \"feedName\": \"ut sint\",\n  \"startDate\": \"1997-11-10T22:01:46.093Z\",\n  \"endDate\": \"2000-04-02T04:01:50.372Z\",\n  \"deliveryPreset\": 45066026,\n  \"deliveryFolder\": \"mollit non in nulla\",\n  \"columnPreset\": 5431071,\n  \"interval\": \"HOURLY\",\n  \"compression\": \"GZIP\",\n  \"packaging\": \"CHUNKED\",\n  \"chunkSize\": 49541987,\n  \"manifest\": \"FIN\",\n  \"noDataManifest\": false,\n  \"notificationEmail\": [\n    \"Ut fugiat\",\n    \"sunt exercitation consequa\"\n  ],\n  \"notes\": \"aliqua magna Lorem\",\n  \"delay\": -90047713,\n  \"dynamicLookups\": false,\n  \"replaceEscapedChars\": false,\n  \"createdBy\": \"in elit sunt eu\",\n  \"modifiedBy\": \"in laboris aliqua consequat\",\n  \"rsid\": \"esse proident quis ad\",\n  \"customerVisible\": true,\n  \"lastModifiedDate\": \"1946-08-12T10:30:50.924Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/datafeeds?locale=en_US",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"datafeeds"
							],
							"query": [
								{
									"key": "locale",
									"value": "en_US",
									"description": "Locale"
								}
							]
						},
						"description": "The datafeed endpoint allows creation of Datafeeds for report suites. This takes a dataFeedBody as an input. The response returns the newly created DataFeed in JSON format. Make sure that the name is unique for the RSID. Make sure the the delivery folder is also unique for the RSID. There is one delivery folder for each data feed. The end date cannot be null."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"feedId\": -40847402,\n  \"feedState\": \"COMPLETE\",\n  \"feedType\": \"STANDARD\",\n  \"feedName\": \"consequat occ\",\n  \"startDate\": \"1948-10-11T06:41:51.128Z\",\n  \"endDate\": \"1946-09-18T14:38:31.195Z\",\n  \"deliveryPreset\": 43924020,\n  \"deliveryFolder\": \"do esse\",\n  \"columnPreset\": 9984337,\n  \"interval\": \"DAILY\",\n  \"compression\": \"ZIP\",\n  \"packaging\": \"CHUNKED\",\n  \"chunkSize\": -98246013,\n  \"manifest\": \"FIN\",\n  \"noDataManifest\": true,\n  \"notificationEmail\": [\n    \"cillum\",\n    \"incididunt\"\n  ],\n  \"notes\": \"ea mollit\",\n  \"delay\": -94748186,\n  \"dynamicLookups\": true,\n  \"replaceEscapedChars\": true,\n  \"createdBy\": \"cillum ad\",\n  \"modifiedBy\": \"magna mollit nostrud in et\",\n  \"rsid\": \"ullamco officia\",\n  \"customerVisible\": false,\n  \"lastModifiedDate\": \"1964-07-02T03:44:47.232Z\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/datafeeds?locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"datafeeds"
									],
									"query": [
										{
											"key": "locale",
											"value": "en_US"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"feedId\": -40847402,\n  \"feedState\": \"COMPLETE\",\n  \"feedType\": \"STANDARD\",\n  \"feedName\": \"consequat occ\",\n  \"startDate\": \"1948-10-11T06:41:51.128Z\",\n  \"endDate\": \"1946-09-18T14:38:31.195Z\",\n  \"deliveryPreset\": 43924020,\n  \"deliveryFolder\": \"do esse\",\n  \"columnPreset\": 9984337,\n  \"interval\": \"DAILY\",\n  \"compression\": \"ZIP\",\n  \"packaging\": \"CHUNKED\",\n  \"chunkSize\": -98246013,\n  \"manifest\": \"FIN\",\n  \"noDataManifest\": true,\n  \"notificationEmail\": [\n    \"cillum\",\n    \"incididunt\"\n  ],\n  \"notes\": \"ea mollit\",\n  \"delay\": -94748186,\n  \"dynamicLookups\": true,\n  \"replaceEscapedChars\": true,\n  \"createdBy\": \"cillum ad\",\n  \"modifiedBy\": \"magna mollit nostrud in et\",\n  \"rsid\": \"ullamco officia\",\n  \"customerVisible\": false,\n  \"lastModifiedDate\": \"1964-07-02T03:44:47.232Z\"\n}"
						}
					]
				},
				{
					"name": "Updates the state of a feed.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/datafeeds/state/:feedId/:state?locale=en_US",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"datafeeds",
								"state",
								":feedId",
								":state"
							],
							"query": [
								{
									"key": "locale",
									"value": "en_US",
									"description": "Locale"
								}
							],
							"variable": [
								{
									"key": "feedId",
									"value": "43407647",
									"description": "(Required) The datafeed id to reprocess."
								},
								{
									"key": "state",
									"value": "ERROR",
									"description": "(Required) Feed state can be set to ACTIVE,HOLD or CANCELLED"
								}
							]
						},
						"description": "Allows you to set the status of a feed to ACTIVE, HOLD or CANCELLED. Note, when changing from active to HOLD/CANCELLED and back to active, all requests between when the feed was cancelled/held to now will be generated. For example, if you set a daily feed to hold on March 12, then change it to active on March 22, 10 requests will be generated to catch the feed up. If more than a few requests will be generated then consider canceling the feed and creating a new one with the desired start date."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/datafeeds/state/:feedId/:state?locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"datafeeds",
										"state",
										":feedId",
										":state"
									],
									"query": [
										{
											"key": "locale",
											"value": "en_US"
										}
									],
									"variable": [
										{
											"key": "feedId",
											"value": "43407647",
											"description": "(Required) The datafeed id to reprocess."
										},
										{
											"key": "state",
											"value": "ERROR",
											"description": "(Required) Feed state can be set to ACTIVE,HOLD or CANCELLED"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"feedId\": -40847402,\n  \"feedState\": \"COMPLETE\",\n  \"feedType\": \"STANDARD\",\n  \"feedName\": \"consequat occ\",\n  \"startDate\": \"1948-10-11T06:41:51.128Z\",\n  \"endDate\": \"1946-09-18T14:38:31.195Z\",\n  \"deliveryPreset\": 43924020,\n  \"deliveryFolder\": \"do esse\",\n  \"columnPreset\": 9984337,\n  \"interval\": \"DAILY\",\n  \"compression\": \"ZIP\",\n  \"packaging\": \"CHUNKED\",\n  \"chunkSize\": -98246013,\n  \"manifest\": \"FIN\",\n  \"noDataManifest\": true,\n  \"notificationEmail\": [\n    \"cillum\",\n    \"incididunt\"\n  ],\n  \"notes\": \"ea mollit\",\n  \"delay\": -94748186,\n  \"dynamicLookups\": true,\n  \"replaceEscapedChars\": true,\n  \"createdBy\": \"cillum ad\",\n  \"modifiedBy\": \"magna mollit nostrud in et\",\n  \"rsid\": \"ullamco officia\",\n  \"customerVisible\": false,\n  \"lastModifiedDate\": \"1964-07-02T03:44:47.232Z\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "dateranges",
			"item": [
				{
					"name": "{date Range Id}",
					"item": [
						{
							"name": "Retrieves configuration for a DateRange.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dateranges/:dateRangeId?expansion=favorite,ownerFullName&newDefinition=false&locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dateranges",
										":dateRangeId"
									],
									"query": [
										{
											"key": "expansion",
											"value": "favorite,ownerFullName",
											"description": "Comma-delimited list of additional date range metadata fields to include on response."
										},
										{
											"key": "newDefinition",
											"value": "false",
											"description": "Use the new JSON def"
										},
										{
											"key": "locale",
											"value": "en_US",
											"description": "Locale"
										}
									],
									"variable": [
										{
											"key": "dateRangeId",
											"value": "aliqua",
											"description": "(Required) The DateRange id for which to retrieve information"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/dateranges/:dateRangeId?expansion=isDeleted,isDeleted&newDefinition=false&locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dateranges",
												":dateRangeId"
											],
											"query": [
												{
													"key": "expansion",
													"value": "isDeleted,isDeleted"
												},
												{
													"key": "newDefinition",
													"value": "false"
												},
												{
													"key": "locale",
													"value": "en_US"
												}
											],
											"variable": [
												{
													"key": "dateRangeId",
													"value": "aliqua",
													"description": "(Required) The DateRange id for which to retrieve information"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"dolore eu quis\",\n  \"name\": \"fugiat aliquip ut\",\n  \"description\": \"aliqua\",\n  \"owner\": {\n    \"id\": 86105599,\n    \"imsUserId\": \"dolor id Duis Lorem consectetur\"\n  },\n  \"isDeleted\": false,\n  \"migratedIds\": [\n    \"anim \",\n    \"eu in\"\n  ],\n  \"internal\": false,\n  \"definition\": {},\n  \"template\": true,\n  \"curatedItem\": true,\n  \"alternateVariableNames\": {\n    \"name\": \"ex laborum qu\",\n    \"baseName\": \"laborum exercitation\",\n    \"curatedName\": \"ut laborum eiusmod\"\n  },\n  \"tags\": [\n    {\n      \"id\": 27061658,\n      \"name\": \"aliquip\",\n      \"description\": \"ad\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": -41140419,\n      \"name\": \"in sunt nostrud\",\n      \"description\": \"do Duis adipisicing\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"usageSummary\": {\n    \"count\": -72649856,\n    \"mostRecentTimestamp\": \"1985-11-03T21:55:07.433Z\",\n    \"itemId\": \"adipisicing aute sed anim officia\",\n    \"relevancyScore\": 30462484.88119079,\n    \"companyCount\": 76121790\n  },\n  \"shares\": [\n    {\n      \"componentId\": \"paria\",\n      \"shareToId\": 63501660,\n      \"shareToType\": \"est minim elit in anim\",\n      \"shareId\": -6755091,\n      \"componentType\": \"eiusmod in enim\",\n      \"shareToDisplayName\": \"ut voluptate q\",\n      \"shareToLogin\": \"ad\",\n      \"shareToImsUserId\": \"incididunt id\",\n      \"accessLevel\": \"cillum voluptate\"\n    },\n    {\n      \"componentId\": \"dolore in quis minim\",\n      \"shareToId\": -47319496,\n      \"shareToType\": \"eiusmod id tempor sunt\",\n      \"shareId\": 24932407,\n      \"componentType\": \"dolore\",\n      \"shareToDisplayName\": \"enim officia\",\n      \"shareToLogin\": \"aliquip culpa\",\n      \"shareToImsUserId\": \"sunt labore aliqua\",\n      \"accessLevel\": \"in ea amet\"\n    }\n  ],\n  \"approved\": true,\n  \"favorite\": false,\n  \"modified\": \"1978-05-03T21:55:46.288Z\",\n  \"created\": \"2006-03-22T02:21:56.127Z\"\n}"
								}
							]
						},
						{
							"name": "Updates configuration for a date range.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"enim ad officia\",\n  \"description\": \"qui proident dolore\",\n  \"owner\": {\n    \"id\": 9609403,\n    \"imsUserId\": \"mollit ad\"\n  },\n  \"isDeleted\": false,\n  \"migratedIds\": [\n    \"dolore aliquip pariatur\",\n    \"velit ad\"\n  ],\n  \"internal\": false,\n  \"definition\": {},\n  \"template\": false,\n  \"curatedItem\": true,\n  \"alternateVariableNames\": {\n    \"name\": \"cillum elit tempor veniam\",\n    \"baseName\": \"nostrud et\",\n    \"curatedName\": \"dolor\"\n  },\n  \"tags\": [\n    {\n      \"id\": 32165403,\n      \"name\": \"irure est\",\n      \"description\": \"non laboris voluptate magna\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": -83941187,\n      \"name\": \"laboris cupidatat ad fugiat\",\n      \"description\": \"laboris in Excepteur ex\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"usageSummary\": {\n    \"count\": 4537561,\n    \"mostRecentTimestamp\": \"1987-08-24T08:47:34.354Z\",\n    \"itemId\": \"mollit Dui\",\n    \"relevancyScore\": -35251784.50492819,\n    \"companyCount\": -78434682\n  },\n  \"shares\": [\n    {\n      \"componentId\": \"pariatur magna labore voluptate\",\n      \"shareToId\": 90602063,\n      \"shareToType\": \"elit minim sint ad\",\n      \"shareId\": 30915214,\n      \"componentType\": \"irure nulla eiusmod voluptate\",\n      \"shareToDisplayName\": \"dolore elit adipisicing qui\",\n      \"shareToLogin\": \"consequat exercitation\",\n      \"shareToImsUserId\": \"ullamco\",\n      \"accessLevel\": \"laborum nostrud quis proident\"\n    },\n    {\n      \"componentId\": \"culpa enim cupidatat\",\n      \"shareToId\": -16033978,\n      \"shareToType\": \"cupidatat fugiat id\",\n      \"shareId\": -29369336,\n      \"componentType\": \"in do non occaecat\",\n      \"shareToDisplayName\": \"nulla exercitation\",\n      \"shareToLogin\": \"Duis tempor deserunt Ut velit\",\n      \"shareToImsUserId\": \"anim aute Duis pariatur\",\n      \"accessLevel\": \"in\"\n    }\n  ],\n  \"approved\": false,\n  \"favorite\": true,\n  \"modified\": \"1945-07-14T14:03:34.909Z\",\n  \"created\": \"1966-01-24T23:28:36.498Z\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dateranges/:dateRangeId?expansion=favorite,ownerFullName&newDefinition=false&locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dateranges",
										":dateRangeId"
									],
									"query": [
										{
											"key": "expansion",
											"value": "favorite,ownerFullName",
											"description": "Comma-delimited list of additional date range metadata fields to include on response."
										},
										{
											"key": "newDefinition",
											"value": "false",
											"description": "Use the new JSON def"
										},
										{
											"key": "locale",
											"value": "en_US",
											"description": "Locale"
										}
									],
									"variable": [
										{
											"key": "dateRangeId",
											"value": "aliqua",
											"description": "(Required) The DateRange id for which to retrieve information"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/dateranges/:dateRangeId?expansion=isDeleted,isDeleted&newDefinition=false&locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dateranges",
												":dateRangeId"
											],
											"query": [
												{
													"key": "expansion",
													"value": "isDeleted,isDeleted"
												},
												{
													"key": "newDefinition",
													"value": "false"
												},
												{
													"key": "locale",
													"value": "en_US"
												}
											],
											"variable": [
												{
													"key": "dateRangeId",
													"value": "aliqua",
													"description": "(Required) The DateRange id for which to retrieve information"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"dolore eu quis\",\n  \"name\": \"fugiat aliquip ut\",\n  \"description\": \"aliqua\",\n  \"owner\": {\n    \"id\": 86105599,\n    \"imsUserId\": \"dolor id Duis Lorem consectetur\"\n  },\n  \"isDeleted\": false,\n  \"migratedIds\": [\n    \"anim \",\n    \"eu in\"\n  ],\n  \"internal\": false,\n  \"definition\": {},\n  \"template\": true,\n  \"curatedItem\": true,\n  \"alternateVariableNames\": {\n    \"name\": \"ex laborum qu\",\n    \"baseName\": \"laborum exercitation\",\n    \"curatedName\": \"ut laborum eiusmod\"\n  },\n  \"tags\": [\n    {\n      \"id\": 27061658,\n      \"name\": \"aliquip\",\n      \"description\": \"ad\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": -41140419,\n      \"name\": \"in sunt nostrud\",\n      \"description\": \"do Duis adipisicing\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"usageSummary\": {\n    \"count\": -72649856,\n    \"mostRecentTimestamp\": \"1985-11-03T21:55:07.433Z\",\n    \"itemId\": \"adipisicing aute sed anim officia\",\n    \"relevancyScore\": 30462484.88119079,\n    \"companyCount\": 76121790\n  },\n  \"shares\": [\n    {\n      \"componentId\": \"paria\",\n      \"shareToId\": 63501660,\n      \"shareToType\": \"est minim elit in anim\",\n      \"shareId\": -6755091,\n      \"componentType\": \"eiusmod in enim\",\n      \"shareToDisplayName\": \"ut voluptate q\",\n      \"shareToLogin\": \"ad\",\n      \"shareToImsUserId\": \"incididunt id\",\n      \"accessLevel\": \"cillum voluptate\"\n    },\n    {\n      \"componentId\": \"dolore in quis minim\",\n      \"shareToId\": -47319496,\n      \"shareToType\": \"eiusmod id tempor sunt\",\n      \"shareId\": 24932407,\n      \"componentType\": \"dolore\",\n      \"shareToDisplayName\": \"enim officia\",\n      \"shareToLogin\": \"aliquip culpa\",\n      \"shareToImsUserId\": \"sunt labore aliqua\",\n      \"accessLevel\": \"in ea amet\"\n    }\n  ],\n  \"approved\": true,\n  \"favorite\": false,\n  \"modified\": \"1978-05-03T21:55:46.288Z\",\n  \"created\": \"2006-03-22T02:21:56.127Z\"\n}"
								}
							]
						},
						{
							"name": "deletes a date range.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dateranges/:dateRangeId?locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dateranges",
										":dateRangeId"
									],
									"query": [
										{
											"key": "locale",
											"value": "en_US",
											"description": "Locale"
										}
									],
									"variable": [
										{
											"key": "dateRangeId",
											"value": "aliqua",
											"description": "(Required) The DateRange id for which to retrieve information"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/dateranges/:dateRangeId?locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dateranges",
												":dateRangeId"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US"
												}
											],
											"variable": [
												{
													"key": "dateRangeId",
													"value": "aliqua",
													"description": "(Required) The DateRange id for which to retrieve information"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"result\": \"proident sit\",\n  \"message\": \"est tempor do sed et\"\n}"
								}
							]
						},
						{
							"name": "Retrieves static interval for a DateRange based on anchor.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dateranges/:dateRangeId/interval?anchor=2016-01-01T00:00:00&rsid=aliqua&locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dateranges",
										":dateRangeId",
										"interval"
									],
									"query": [
										{
											"key": "anchor",
											"value": "2016-01-01T00:00:00",
											"description": "(Required) Date to use to evaluate formula"
										},
										{
											"key": "rsid",
											"value": "aliqua",
											"description": "The rsid to lookup calendar type to use to calculate range"
										},
										{
											"key": "locale",
											"value": "en_US",
											"description": "Locale"
										}
									],
									"variable": [
										{
											"key": "dateRangeId",
											"value": "aliqua",
											"description": "(Required) The DateRange id for which to retrieve information"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/dateranges/:dateRangeId/interval?anchor=2016-01-01T00:00:00&rsid=aliqua&locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dateranges",
												":dateRangeId",
												"interval"
											],
											"query": [
												{
													"key": "anchor",
													"value": "2016-01-01T00:00:00"
												},
												{
													"key": "rsid",
													"value": "aliqua"
												},
												{
													"key": "locale",
													"value": "en_US"
												}
											],
											"variable": [
												{
													"key": "dateRangeId",
													"value": "aliqua",
													"description": "(Required) The DateRange id for which to retrieve information"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"start\": \"nisi amet eu fugiat\",\n  \"end\": \"in in deserunt\",\n  \"name\": \"in\"\n}"
								}
							]
						},
						{
							"name": "Divide a range into buckets based on granularity i.e. all weeks in a year",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dateranges/:dateRangeId/buckets?anchor=2016-01-01T00:00:00&granularity=week&rsid=aliqua&locale=en_US&limit=10&page=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dateranges",
										":dateRangeId",
										"buckets"
									],
									"query": [
										{
											"key": "anchor",
											"value": "2016-01-01T00:00:00",
											"description": "(Required) Date to use to evaluate formula"
										},
										{
											"key": "granularity",
											"value": "week",
											"description": "Size of buckets"
										},
										{
											"key": "rsid",
											"value": "aliqua",
											"description": "The rsid to lookup calendar type to use to calculate range"
										},
										{
											"key": "locale",
											"value": "en_US",
											"description": "Locale"
										},
										{
											"key": "limit",
											"value": "10",
											"description": "Number of results per page"
										},
										{
											"key": "page",
											"value": "0",
											"description": "Page number (base 0 - first page is \"0\")"
										}
									],
									"variable": [
										{
											"key": "dateRangeId",
											"value": "aliqua",
											"description": "(Required) The DateRange to be evaluated"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/dateranges/:dateRangeId/buckets?anchor=2016-01-01T00:00:00&granularity=week&rsid=aliqua&locale=en_US&limit=10&page=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dateranges",
												":dateRangeId",
												"buckets"
											],
											"query": [
												{
													"key": "anchor",
													"value": "2016-01-01T00:00:00"
												},
												{
													"key": "granularity",
													"value": "week"
												},
												{
													"key": "rsid",
													"value": "aliqua"
												},
												{
													"key": "locale",
													"value": "en_US"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "0"
												}
											],
											"variable": [
												{
													"key": "dateRangeId",
													"value": "aliqua",
													"description": "(Required) The DateRange to be evaluated"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"start\": \"nisi amet eu fugiat\",\n  \"end\": \"in in deserunt\",\n  \"name\": \"in\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Returns a list of dateranges for the user",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dateranges?includeType=templates,all&expansion=favorite,ownerFullName&locale=en_US&filterByIds=aliqua&includeDeleted=false&newDefinition=false&filterByModifiedAfter=aliqua&curatedRsid=aliqua&limit=10&page=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dateranges"
							],
							"query": [
								{
									"key": "includeType",
									"value": "templates,all",
									"description": "Include additional dateranges not owned by user. The \"all\" option takes precedence over \"shared\""
								},
								{
									"key": "expansion",
									"value": "favorite,ownerFullName",
									"description": "Comma-delimited list of additional date range metadata fields to include on response."
								},
								{
									"key": "locale",
									"value": "en_US",
									"description": "Locale"
								},
								{
									"key": "filterByIds",
									"value": "aliqua",
									"description": "Filter list to only include date ranges in the specified list (comma-delimited list of IDs)"
								},
								{
									"key": "includeDeleted",
									"value": "false",
									"description": "DEPRECATED use deleted includeType - Include disabled/deleted date ranges in the response. Note: also forces the 'isDeleted' expansion"
								},
								{
									"key": "newDefinition",
									"value": "false",
									"description": "Use the new JSON def"
								},
								{
									"key": "filterByModifiedAfter",
									"value": "aliqua",
									"description": "Filter list to only include date ranges modified since this date (ISO8601 format)"
								},
								{
									"key": "curatedRsid",
									"value": "aliqua",
									"description": "Include the curatedItem status for given Rsid"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Number of results per page"
								},
								{
									"key": "page",
									"value": "0",
									"description": "Page number (base 0 - first page is \"0\")"
								}
							]
						},
						"description": "This API allows users to store commonly used date ranges so that they can be reused throughout the product."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dateranges?includeType=internal,templates&expansion=isDeleted,isDeleted&locale=en_US&filterByIds=aliqua&includeDeleted=false&newDefinition=false&filterByModifiedAfter=aliqua&curatedRsid=aliqua&limit=10&page=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dateranges"
									],
									"query": [
										{
											"key": "includeType",
											"value": "internal,templates"
										},
										{
											"key": "expansion",
											"value": "isDeleted,isDeleted"
										},
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "filterByIds",
											"value": "aliqua"
										},
										{
											"key": "includeDeleted",
											"value": "false"
										},
										{
											"key": "newDefinition",
											"value": "false"
										},
										{
											"key": "filterByModifiedAfter",
											"value": "aliqua"
										},
										{
											"key": "curatedRsid",
											"value": "aliqua"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"consequat\",\n  \"name\": \"commodo est sint\",\n  \"description\": \"sint laboris\",\n  \"owner\": {\n    \"id\": 78676052,\n    \"imsUserId\": \"sed esse id\"\n  },\n  \"isDeleted\": false,\n  \"migratedIds\": [\n    \"laborum pariatur tempor deserunt\",\n    \"in minim\"\n  ],\n  \"internal\": true,\n  \"definition\": {},\n  \"template\": false,\n  \"curatedItem\": false,\n  \"alternateVariableNames\": {\n    \"name\": \"irure ut\",\n    \"baseName\": \"culpa aliqua\",\n    \"curatedName\": \"nulla nostrud\"\n  },\n  \"tags\": [\n    {\n      \"id\": 81609861,\n      \"name\": \"irure es\",\n      \"description\": \"nu\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": -25212345,\n      \"name\": \"qui fugiat\",\n      \"description\": \"non\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"usageSummary\": {\n    \"count\": -90881827,\n    \"mostRecentTimestamp\": \"1956-07-24T17:42:39.393Z\",\n    \"itemId\": \"non adipisicing qui fugiat\",\n    \"relevancyScore\": -4697310.27751407,\n    \"companyCount\": 3093255\n  },\n  \"shares\": [\n    {\n      \"componentId\": \"Duis ut ipsum ea\",\n      \"shareToId\": -54621125,\n      \"shareToType\": \"voluptate laborum\",\n      \"shareId\": 74154378,\n      \"componentType\": \"quis pariatur amet\",\n      \"shareToDisplayName\": \"laborum proident\",\n      \"shareToLogin\": \"amet ut eiusmod\",\n      \"shareToImsUserId\": \"dolor adipisicing\",\n      \"accessLevel\": \"do\"\n    },\n    {\n      \"componentId\": \"fugiat in\",\n      \"shareToId\": 54221815,\n      \"shareToType\": \"veniam Ut\",\n      \"shareId\": 89748824,\n      \"componentType\": \"elit Ut sin\",\n      \"shareToDisplayName\": \"consectetur quis voluptate\",\n      \"shareToLogin\": \"quis irure\",\n      \"shareToImsUserId\": \"irure consequat\",\n      \"accessLevel\": \"nulla deserunt tempor minim\"\n    }\n  ],\n  \"approved\": true,\n  \"favorite\": true,\n  \"modified\": \"1956-05-17T20:22:17.249Z\",\n  \"created\": \"1970-01-10T16:09:26.526Z\"\n}"
						}
					]
				},
				{
					"name": "Creates a single date range.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"enim ad officia\",\n  \"description\": \"qui proident dolore\",\n  \"owner\": {\n    \"id\": 9609403,\n    \"imsUserId\": \"mollit ad\"\n  },\n  \"isDeleted\": false,\n  \"migratedIds\": [\n    \"dolore aliquip pariatur\",\n    \"velit ad\"\n  ],\n  \"internal\": false,\n  \"definition\": {},\n  \"template\": false,\n  \"curatedItem\": true,\n  \"alternateVariableNames\": {\n    \"name\": \"cillum elit tempor veniam\",\n    \"baseName\": \"nostrud et\",\n    \"curatedName\": \"dolor\"\n  },\n  \"tags\": [\n    {\n      \"id\": 32165403,\n      \"name\": \"irure est\",\n      \"description\": \"non laboris voluptate magna\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": -83941187,\n      \"name\": \"laboris cupidatat ad fugiat\",\n      \"description\": \"laboris in Excepteur ex\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"usageSummary\": {\n    \"count\": 4537561,\n    \"mostRecentTimestamp\": \"1987-08-24T08:47:34.354Z\",\n    \"itemId\": \"mollit Dui\",\n    \"relevancyScore\": -35251784.50492819,\n    \"companyCount\": -78434682\n  },\n  \"shares\": [\n    {\n      \"componentId\": \"pariatur magna labore voluptate\",\n      \"shareToId\": 90602063,\n      \"shareToType\": \"elit minim sint ad\",\n      \"shareId\": 30915214,\n      \"componentType\": \"irure nulla eiusmod voluptate\",\n      \"shareToDisplayName\": \"dolore elit adipisicing qui\",\n      \"shareToLogin\": \"consequat exercitation\",\n      \"shareToImsUserId\": \"ullamco\",\n      \"accessLevel\": \"laborum nostrud quis proident\"\n    },\n    {\n      \"componentId\": \"culpa enim cupidatat\",\n      \"shareToId\": -16033978,\n      \"shareToType\": \"cupidatat fugiat id\",\n      \"shareId\": -29369336,\n      \"componentType\": \"in do non occaecat\",\n      \"shareToDisplayName\": \"nulla exercitation\",\n      \"shareToLogin\": \"Duis tempor deserunt Ut velit\",\n      \"shareToImsUserId\": \"anim aute Duis pariatur\",\n      \"accessLevel\": \"in\"\n    }\n  ],\n  \"approved\": false,\n  \"favorite\": true,\n  \"modified\": \"1945-07-14T14:03:34.909Z\",\n  \"created\": \"1966-01-24T23:28:36.498Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/dateranges?expansion=favorite,ownerFullName&newDefinition=false&locale=en_US",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dateranges"
							],
							"query": [
								{
									"key": "expansion",
									"value": "favorite,ownerFullName",
									"description": "Comma-delimited list of additional date range metadata fields to include on response."
								},
								{
									"key": "newDefinition",
									"value": "false",
									"description": "Use the new JSON def"
								},
								{
									"key": "locale",
									"value": "en_US",
									"description": "Locale"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dateranges?expansion=isDeleted,isDeleted&newDefinition=false&locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dateranges"
									],
									"query": [
										{
											"key": "expansion",
											"value": "isDeleted,isDeleted"
										},
										{
											"key": "newDefinition",
											"value": "false"
										},
										{
											"key": "locale",
											"value": "en_US"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"dolore eu quis\",\n  \"name\": \"fugiat aliquip ut\",\n  \"description\": \"aliqua\",\n  \"owner\": {\n    \"id\": 86105599,\n    \"imsUserId\": \"dolor id Duis Lorem consectetur\"\n  },\n  \"isDeleted\": false,\n  \"migratedIds\": [\n    \"anim \",\n    \"eu in\"\n  ],\n  \"internal\": false,\n  \"definition\": {},\n  \"template\": true,\n  \"curatedItem\": true,\n  \"alternateVariableNames\": {\n    \"name\": \"ex laborum qu\",\n    \"baseName\": \"laborum exercitation\",\n    \"curatedName\": \"ut laborum eiusmod\"\n  },\n  \"tags\": [\n    {\n      \"id\": 27061658,\n      \"name\": \"aliquip\",\n      \"description\": \"ad\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": -41140419,\n      \"name\": \"in sunt nostrud\",\n      \"description\": \"do Duis adipisicing\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"usageSummary\": {\n    \"count\": -72649856,\n    \"mostRecentTimestamp\": \"1985-11-03T21:55:07.433Z\",\n    \"itemId\": \"adipisicing aute sed anim officia\",\n    \"relevancyScore\": 30462484.88119079,\n    \"companyCount\": 76121790\n  },\n  \"shares\": [\n    {\n      \"componentId\": \"paria\",\n      \"shareToId\": 63501660,\n      \"shareToType\": \"est minim elit in anim\",\n      \"shareId\": -6755091,\n      \"componentType\": \"eiusmod in enim\",\n      \"shareToDisplayName\": \"ut voluptate q\",\n      \"shareToLogin\": \"ad\",\n      \"shareToImsUserId\": \"incididunt id\",\n      \"accessLevel\": \"cillum voluptate\"\n    },\n    {\n      \"componentId\": \"dolore in quis minim\",\n      \"shareToId\": -47319496,\n      \"shareToType\": \"eiusmod id tempor sunt\",\n      \"shareId\": 24932407,\n      \"componentType\": \"dolore\",\n      \"shareToDisplayName\": \"enim officia\",\n      \"shareToLogin\": \"aliquip culpa\",\n      \"shareToImsUserId\": \"sunt labore aliqua\",\n      \"accessLevel\": \"in ea amet\"\n    }\n  ],\n  \"approved\": true,\n  \"favorite\": false,\n  \"modified\": \"1978-05-03T21:55:46.288Z\",\n  \"created\": \"2006-03-22T02:21:56.127Z\"\n}"
						}
					]
				},
				{
					"name": "Retrieves static intervals for a list of ranges",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"start\": [\n      {\n        \"function\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"granularity\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"offset\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dow\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"date\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"function\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"granularity\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"offset\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dow\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"date\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"end\": [\n      {\n        \"function\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"granularity\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"offset\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dow\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"date\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"function\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"granularity\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"offset\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dow\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"date\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"calendarType\": {\n      \"rsid\": \"consequat in\",\n      \"type\": \"CUSTOM_445\",\n      \"anchorDate\": \"2015-12-01T00:49:06.769Z\",\n      \"firstDayOfWeek\": -88458928,\n      \"firstMonthOfYear\": 66964782,\n      \"firstDayOfYear\": \"1983-07-10T10:00:44.024Z\",\n      \"anomalyYear\": \"in sed qui\"\n    },\n    \"version\": \"quis cupidatat occaecat\"\n  },\n  {\n    \"start\": [\n      {\n        \"function\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"granularity\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"offset\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dow\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"date\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"function\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"granularity\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"offset\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dow\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"date\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"end\": [\n      {\n        \"function\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"granularity\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"offset\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dow\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"date\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"function\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"granularity\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"offset\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dow\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"date\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"calendarType\": {\n      \"rsid\": \"sed est deserunt pariatur do\",\n      \"type\": \"QRS\",\n      \"anchorDate\": \"1967-09-30T05:06:29.901Z\",\n      \"firstDayOfWeek\": -6891976,\n      \"firstMonthOfYear\": -76543348,\n      \"firstDayOfYear\": \"1957-12-05T00:32:46.568Z\",\n      \"anomalyYear\": \"reprehenderit eiusmod dolore\"\n    },\n    \"version\": \"fugiat cupidatat\"\n  }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/dateranges/intervals?anchor=2016-01-01T00:00:00&rsid=aliqua&locale=en_US",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dateranges",
								"intervals"
							],
							"query": [
								{
									"key": "anchor",
									"value": "2016-01-01T00:00:00",
									"description": "(Required) Date to use to evaluate formula"
								},
								{
									"key": "rsid",
									"value": "aliqua",
									"description": "The rsid to lookup calendar type to use to calculate range"
								},
								{
									"key": "locale",
									"value": "en_US",
									"description": "Locale"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dateranges/intervals?anchor=2016-01-01T00:00:00&rsid=aliqua&locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dateranges",
										"intervals"
									],
									"query": [
										{
											"key": "anchor",
											"value": "2016-01-01T00:00:00"
										},
										{
											"key": "rsid",
											"value": "aliqua"
										},
										{
											"key": "locale",
											"value": "en_US"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"start\": \"nisi amet eu fugiat\",\n  \"end\": \"in in deserunt\",\n  \"name\": \"in\"\n}"
						}
					]
				},
				{
					"name": "Retrieves static intervals for a list of ranges",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"start\": [\n      {\n        \"function\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"granularity\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"offset\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dow\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"date\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"function\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"granularity\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"offset\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dow\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"date\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"end\": [\n      {\n        \"function\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"granularity\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"offset\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dow\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"date\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"function\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"granularity\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"offset\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dow\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"date\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"calendarType\": {\n      \"rsid\": \"in\",\n      \"type\": \"QRS\",\n      \"anchorDate\": \"1992-03-03T16:34:01.550Z\",\n      \"firstDayOfWeek\": -15409363,\n      \"firstMonthOfYear\": 87196753,\n      \"firstDayOfYear\": \"1951-03-24T23:02:01.726Z\",\n      \"anomalyYear\": \"consectetur cillum sit nostrud veniam\"\n    },\n    \"version\": \"id voluptate\"\n  },\n  {\n    \"start\": [\n      {\n        \"function\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"granularity\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"offset\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dow\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"date\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"function\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"granularity\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"offset\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dow\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"date\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"end\": [\n      {\n        \"function\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"granularity\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"offset\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dow\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"date\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"function\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"granularity\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"offset\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dow\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"date\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"calendarType\": {\n      \"rsid\": \"occaecat officia\",\n      \"type\": \"CUSTOM_544\",\n      \"anchorDate\": \"1963-06-20T03:07:51.513Z\",\n      \"firstDayOfWeek\": 67936120,\n      \"firstMonthOfYear\": 17578603,\n      \"firstDayOfYear\": \"1955-08-11T18:57:34.424Z\",\n      \"anomalyYear\": \"voluptate anim\"\n    },\n    \"version\": \"est veniam\"\n  }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/dateranges/validation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dateranges",
								"validation"
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dateranges/validation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dateranges",
										"validation"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"result\": \"proident sit\",\n  \"message\": \"est tempor do sed et\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "dimensions",
			"item": [
				{
					"name": "{dimension Id}",
					"item": [
						{
							"name": "Returns a dimension for the given report suite",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dimensions/:dimensionId?rsid=aliqua&useCache=true&includeHidden=false&locale=en_US&expansion=attributes,attributionModel",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dimensions",
										":dimensionId"
									],
									"query": [
										{
											"key": "rsid",
											"value": "aliqua",
											"description": "(Required) The report suite ID."
										},
										{
											"key": "useCache",
											"value": "true",
											"description": "Enable caching for faster requests"
										},
										{
											"key": "includeHidden",
											"value": "false",
											"description": "Include variables that are hidden in the UI or that the user doesn't have privileges to access."
										},
										{
											"key": "locale",
											"value": "en_US",
											"description": "The locale to use for returning system named dimensions."
										},
										{
											"key": "expansion",
											"value": "attributes,attributionModel",
											"description": "Add extra metadata to items (comma-delimited list)"
										}
									],
									"variable": [
										{
											"key": "dimensionId",
											"value": "aliqua",
											"description": "(Required) The dimension ID. For example a valid id is a value like 'evar1'"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/dimensions/:dimensionId?rsid=aliqua&useCache=true&includeHidden=false&locale=en_US&expansion=instanceMetricId,favorite",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dimensions",
												":dimensionId"
											],
											"query": [
												{
													"key": "rsid",
													"value": "aliqua"
												},
												{
													"key": "useCache",
													"value": "true"
												},
												{
													"key": "includeHidden",
													"value": "false"
												},
												{
													"key": "locale",
													"value": "en_US"
												},
												{
													"key": "expansion",
													"value": "instanceMetricId,favorite"
												}
											],
											"variable": [
												{
													"key": "dimensionId",
													"value": "aliqua",
													"description": "(Required) The dimension ID. For example a valid id is a value like 'evar1'"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"par\",\n  \"title\": \"eu adipisicing minim\",\n  \"name\": \"dolore quis\",\n  \"type\": \"DECIMAL\",\n  \"category\": \"sit\",\n  \"categories\": [\n    \"ullamco\",\n    \"id minim in ullamco\"\n  ],\n  \"support\": [\n    \"incididunt magna\",\n    \"non adipisicing nostrud eu\"\n  ],\n  \"pathable\": true,\n  \"parent\": \"tempor nisi\",\n  \"extraTitleInfo\": \"qui Lorem mollit\",\n  \"segmentable\": true,\n  \"reportable\": [\n    \"qui cillum ullamco\",\n    \"ullamco nostrud aliquip\"\n  ],\n  \"supportsDataGovernance\": false,\n  \"description\": \"esse occaecat\",\n  \"fragRelId\": \"esse aliqua cillum anim\",\n  \"dataGroup\": \"comm\",\n  \"hidden\": true,\n  \"noAccess\": false,\n  \"isEntryOrExit\": true,\n  \"alternateVariableNames\": {\n    \"name\": \"veniam elit nulla\",\n    \"baseName\": \"ullamco id\",\n    \"curatedName\": \"elit ipsum\"\n  },\n  \"curatedItem\": false,\n  \"dataGovernance\": {\n    \"namespace\": \"adipisicing tempor ad labore\",\n    \"auth\": {\n      \"labels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"editable\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"usesDefault\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"allowedEmpty\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"defaultLabels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"gdprAccess\": {\n      \"labels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"editable\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"usesDefault\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"allowedEmpty\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"defaultLabels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"gdprDelete\": {\n      \"labels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"editable\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"usesDefault\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"allowedEmpty\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"defaultLabels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"identifiability\": {\n      \"labels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"editable\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"usesDefault\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"allowedEmpty\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"defaultLabels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"sensitivity\": {\n      \"labels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"editable\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"usesDefault\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"allowedEmpty\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"defaultLabels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"reportTimeAttribution\": true,\n  \"customerJourney\": false,\n  \"aliasId\": \"ea eu commodo\",\n  \"attributionModel\": {\n    \"elit0\": {}\n  },\n  \"breakdownAttributionModel\": {\n    \"reprehenderit_6d\": {},\n    \"eiusmod_8d\": {},\n    \"magna__b2\": {},\n    \"sed4\": {}\n  },\n  \"attributes\": [\n    \"non occaecat\",\n    \"ipsum velit in\"\n  ],\n  \"instanceMetricId\": \"est in Duis qui\",\n  \"allowedForReporting\": false,\n  \"noneSettings\": {\n    \"includeNoneByDefault\": true,\n    \"noneChangeable\": true\n  },\n  \"dataSourcesUploadName\": \"in aliqua pariatur\",\n  \"multiValued\": false,\n  \"tags\": [\n    {\n      \"id\": 7185309,\n      \"name\": \"ullamco do si\",\n      \"description\": \"id reprehenderit\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": 88763996,\n      \"name\": \"a\",\n      \"description\": \"Excepteur labore occaecat sed\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"usageSummary\": {\n    \"count\": 72687303,\n    \"mostRecentTimestamp\": \"2018-09-28T21:37:40.856Z\",\n    \"itemId\": \"Excepteur Duis exercitation ipsum\",\n    \"relevancyScore\": -80608375.88003142,\n    \"companyCount\": 30351673\n  },\n  \"shares\": [\n    {\n      \"componentId\": \"exerci\",\n      \"shareToId\": 2137323,\n      \"shareToType\": \"sint pariatur non enim\",\n      \"shareId\": -77133172,\n      \"componentType\": \"exercitation sed\",\n      \"shareToDisplayName\": \"aliqu\",\n      \"shareToLogin\": \"nisi incididunt in minim\",\n      \"shareToImsUserId\": \"labore et\",\n      \"accessLevel\": \"commodo aliquip ipsum eu\"\n    },\n    {\n      \"componentId\": \"cupidatat non fugiat\",\n      \"shareToId\": -41097201,\n      \"shareToType\": \"ea consequat eu\",\n      \"shareId\": -24808437,\n      \"componentType\": \"Excepteur pariatur\",\n      \"shareToDisplayName\": \"enim pariatur ea nostrud\",\n      \"shareToLogin\": \"cupidatat incididunt minim eu adipisicing\",\n      \"shareToImsUserId\": \"proident elit venia\",\n      \"accessLevel\": \"in culpa sed ullamco reprehenderit\"\n    }\n  ],\n  \"approved\": false,\n  \"favorite\": true\n}"
								},
								{
									"name": "User Doesn't have sufficient privileges",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/dimensions/:dimensionId?rsid=aliqua&useCache=true&includeHidden=false&locale=en_US&expansion=instanceMetricId,favorite",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dimensions",
												":dimensionId"
											],
											"query": [
												{
													"key": "rsid",
													"value": "aliqua"
												},
												{
													"key": "useCache",
													"value": "true"
												},
												{
													"key": "includeHidden",
													"value": "false"
												},
												{
													"key": "locale",
													"value": "en_US"
												},
												{
													"key": "expansion",
													"value": "instanceMetricId,favorite"
												}
											],
											"variable": [
												{
													"key": "dimensionId",
													"value": "aliqua",
													"description": "(Required) The dimension ID. For example a valid id is a value like 'evar1'"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Modification of dimension data governance settings",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"namespace\": \"exercitation occaecat nostrud in\",\n  \"auth\": {\n    \"labels\": [\n      \"reprehenderit officia in ut ea\",\n      \"sunt sed eu minim\"\n    ],\n    \"editable\": false,\n    \"usesDefault\": true,\n    \"allowedEmpty\": true,\n    \"defaultLabels\": [\n      \"dolore consequat\",\n      \"incididunt occaecat\"\n    ]\n  },\n  \"gdprAccess\": {\n    \"labels\": [\n      \"cupidatat laboris dolor proident mollit\",\n      \"sint commodo proident exercitation minim\"\n    ],\n    \"editable\": true,\n    \"usesDefault\": true,\n    \"allowedEmpty\": false,\n    \"defaultLabels\": [\n      \"in in\",\n      \"in aliqua dolore cillum\"\n    ]\n  },\n  \"gdprDelete\": {\n    \"labels\": [\n      \"occaecat fugiat Lorem non veniam\",\n      \"aliquip v\"\n    ],\n    \"editable\": true,\n    \"usesDefault\": false,\n    \"allowedEmpty\": true,\n    \"defaultLabels\": [\n      \"veniam in ad\",\n      \"consectetur tempo\"\n    ]\n  },\n  \"identifiability\": {\n    \"labels\": [\n      \"dolore eiusmod\",\n      \"proident dolore eiusmod ullamco\"\n    ],\n    \"editable\": false,\n    \"usesDefault\": true,\n    \"allowedEmpty\": false,\n    \"defaultLabels\": [\n      \"cillum do fugiat veniam\",\n      \"labore id eiusmod\"\n    ]\n  },\n  \"sensitivity\": {\n    \"labels\": [\n      \"ex\",\n      \"ullamco amet tempor magna\"\n    ],\n    \"editable\": true,\n    \"usesDefault\": false,\n    \"allowedEmpty\": false,\n    \"defaultLabels\": [\n      \"minim aute fugiat\",\n      \"pariatur sint qui\"\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dimensions/:dimensionId/datagovernance?rsid=aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dimensions",
										":dimensionId",
										"datagovernance"
									],
									"query": [
										{
											"key": "rsid",
											"value": "aliqua",
											"description": "Report suite ID containing the dimension being modified."
										}
									],
									"variable": [
										{
											"key": "dimensionId",
											"value": "aliqua",
											"description": "(Required) The id of the dimension to modify."
										}
									]
								},
								"description": "Updates a specific dimension data governance settings."
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"namespace\": \"quis deserunt qui nulla\",\n  \"auth\": {\n    \"labels\": [\n      \"et anim aliqua enim quis\",\n      \"cupidatat deser\"\n    ],\n    \"editable\": true,\n    \"usesDefault\": false,\n    \"allowedEmpty\": true,\n    \"defaultLabels\": [\n      \"dolore veniam et\",\n      \"in dolor laboris\"\n    ]\n  },\n  \"gdprAccess\": {\n    \"labels\": [\n      \"et laborum aliquip est ut\",\n      \"do\"\n    ],\n    \"editable\": true,\n    \"usesDefault\": false,\n    \"allowedEmpty\": false,\n    \"defaultLabels\": [\n      \"officia ex\",\n      \"mollit do non\"\n    ]\n  },\n  \"gdprDelete\": {\n    \"labels\": [\n      \"ut nostrud mollit anim\",\n      \"eu esse ut pariatur\"\n    ],\n    \"editable\": false,\n    \"usesDefault\": false,\n    \"allowedEmpty\": false,\n    \"defaultLabels\": [\n      \"deserunt id\",\n      \"ea\"\n    ]\n  },\n  \"identifiability\": {\n    \"labels\": [\n      \"proident quis\",\n      \"magna Lorem\"\n    ],\n    \"editable\": false,\n    \"usesDefault\": true,\n    \"allowedEmpty\": false,\n    \"defaultLabels\": [\n      \"sunt Excepteur\",\n      \"Lorem do exercitation dolor\"\n    ]\n  },\n  \"sensitivity\": {\n    \"labels\": [\n      \"velit ut aute consequat adipisicing\",\n      \"sint occaecat\"\n    ],\n    \"editable\": false,\n    \"usesDefault\": false,\n    \"allowedEmpty\": true,\n    \"defaultLabels\": [\n      \"occaecat \",\n      \"nisi ad\"\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/dimensions/:dimensionId/datagovernance?rsid=aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dimensions",
												":dimensionId",
												"datagovernance"
											],
											"query": [
												{
													"key": "rsid",
													"value": "aliqua"
												}
											],
											"variable": [
												{
													"key": "dimensionId",
													"value": "aliqua",
													"description": "(Required) The id of the dimension to modify."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"namespace\": \"quis deserunt qui nulla\",\n  \"auth\": {\n    \"labels\": [\n      \"et anim aliqua enim quis\",\n      \"cupidatat deser\"\n    ],\n    \"editable\": true,\n    \"usesDefault\": false,\n    \"allowedEmpty\": true,\n    \"defaultLabels\": [\n      \"dolore veniam et\",\n      \"in dolor laboris\"\n    ]\n  },\n  \"gdprAccess\": {\n    \"labels\": [\n      \"et laborum aliquip est ut\",\n      \"do\"\n    ],\n    \"editable\": true,\n    \"usesDefault\": false,\n    \"allowedEmpty\": false,\n    \"defaultLabels\": [\n      \"officia ex\",\n      \"mollit do non\"\n    ]\n  },\n  \"gdprDelete\": {\n    \"labels\": [\n      \"ut nostrud mollit anim\",\n      \"eu esse ut pariatur\"\n    ],\n    \"editable\": false,\n    \"usesDefault\": false,\n    \"allowedEmpty\": false,\n    \"defaultLabels\": [\n      \"deserunt id\",\n      \"ea\"\n    ]\n  },\n  \"identifiability\": {\n    \"labels\": [\n      \"proident quis\",\n      \"magna Lorem\"\n    ],\n    \"editable\": false,\n    \"usesDefault\": true,\n    \"allowedEmpty\": false,\n    \"defaultLabels\": [\n      \"sunt Excepteur\",\n      \"Lorem do exercitation dolor\"\n    ]\n  },\n  \"sensitivity\": {\n    \"labels\": [\n      \"velit ut aute consequat adipisicing\",\n      \"sint occaecat\"\n    ],\n    \"editable\": false,\n    \"usesDefault\": false,\n    \"allowedEmpty\": true,\n    \"defaultLabels\": [\n      \"occaecat \",\n      \"nisi ad\"\n    ]\n  }\n}"
								},
								{
									"name": "Invalid JSON input",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"namespace\": \"quis deserunt qui nulla\",\n  \"auth\": {\n    \"labels\": [\n      \"et anim aliqua enim quis\",\n      \"cupidatat deser\"\n    ],\n    \"editable\": true,\n    \"usesDefault\": false,\n    \"allowedEmpty\": true,\n    \"defaultLabels\": [\n      \"dolore veniam et\",\n      \"in dolor laboris\"\n    ]\n  },\n  \"gdprAccess\": {\n    \"labels\": [\n      \"et laborum aliquip est ut\",\n      \"do\"\n    ],\n    \"editable\": true,\n    \"usesDefault\": false,\n    \"allowedEmpty\": false,\n    \"defaultLabels\": [\n      \"officia ex\",\n      \"mollit do non\"\n    ]\n  },\n  \"gdprDelete\": {\n    \"labels\": [\n      \"ut nostrud mollit anim\",\n      \"eu esse ut pariatur\"\n    ],\n    \"editable\": false,\n    \"usesDefault\": false,\n    \"allowedEmpty\": false,\n    \"defaultLabels\": [\n      \"deserunt id\",\n      \"ea\"\n    ]\n  },\n  \"identifiability\": {\n    \"labels\": [\n      \"proident quis\",\n      \"magna Lorem\"\n    ],\n    \"editable\": false,\n    \"usesDefault\": true,\n    \"allowedEmpty\": false,\n    \"defaultLabels\": [\n      \"sunt Excepteur\",\n      \"Lorem do exercitation dolor\"\n    ]\n  },\n  \"sensitivity\": {\n    \"labels\": [\n      \"velit ut aute consequat adipisicing\",\n      \"sint occaecat\"\n    ],\n    \"editable\": false,\n    \"usesDefault\": false,\n    \"allowedEmpty\": true,\n    \"defaultLabels\": [\n      \"occaecat \",\n      \"nisi ad\"\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/dimensions/:dimensionId/datagovernance?rsid=aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dimensions",
												":dimensionId",
												"datagovernance"
											],
											"query": [
												{
													"key": "rsid",
													"value": "aliqua"
												}
											],
											"variable": [
												{
													"key": "dimensionId",
													"value": "aliqua",
													"description": "(Required) The id of the dimension to modify."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Insufficient access to perform operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"namespace\": \"quis deserunt qui nulla\",\n  \"auth\": {\n    \"labels\": [\n      \"et anim aliqua enim quis\",\n      \"cupidatat deser\"\n    ],\n    \"editable\": true,\n    \"usesDefault\": false,\n    \"allowedEmpty\": true,\n    \"defaultLabels\": [\n      \"dolore veniam et\",\n      \"in dolor laboris\"\n    ]\n  },\n  \"gdprAccess\": {\n    \"labels\": [\n      \"et laborum aliquip est ut\",\n      \"do\"\n    ],\n    \"editable\": true,\n    \"usesDefault\": false,\n    \"allowedEmpty\": false,\n    \"defaultLabels\": [\n      \"officia ex\",\n      \"mollit do non\"\n    ]\n  },\n  \"gdprDelete\": {\n    \"labels\": [\n      \"ut nostrud mollit anim\",\n      \"eu esse ut pariatur\"\n    ],\n    \"editable\": false,\n    \"usesDefault\": false,\n    \"allowedEmpty\": false,\n    \"defaultLabels\": [\n      \"deserunt id\",\n      \"ea\"\n    ]\n  },\n  \"identifiability\": {\n    \"labels\": [\n      \"proident quis\",\n      \"magna Lorem\"\n    ],\n    \"editable\": false,\n    \"usesDefault\": true,\n    \"allowedEmpty\": false,\n    \"defaultLabels\": [\n      \"sunt Excepteur\",\n      \"Lorem do exercitation dolor\"\n    ]\n  },\n  \"sensitivity\": {\n    \"labels\": [\n      \"velit ut aute consequat adipisicing\",\n      \"sint occaecat\"\n    ],\n    \"editable\": false,\n    \"usesDefault\": false,\n    \"allowedEmpty\": true,\n    \"defaultLabels\": [\n      \"occaecat \",\n      \"nisi ad\"\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/dimensions/:dimensionId/datagovernance?rsid=aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dimensions",
												":dimensionId",
												"datagovernance"
											],
											"query": [
												{
													"key": "rsid",
													"value": "aliqua"
												}
											],
											"variable": [
												{
													"key": "dimensionId",
													"value": "aliqua",
													"description": "(Required) The id of the dimension to modify."
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unexpected internal server error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"namespace\": \"quis deserunt qui nulla\",\n  \"auth\": {\n    \"labels\": [\n      \"et anim aliqua enim quis\",\n      \"cupidatat deser\"\n    ],\n    \"editable\": true,\n    \"usesDefault\": false,\n    \"allowedEmpty\": true,\n    \"defaultLabels\": [\n      \"dolore veniam et\",\n      \"in dolor laboris\"\n    ]\n  },\n  \"gdprAccess\": {\n    \"labels\": [\n      \"et laborum aliquip est ut\",\n      \"do\"\n    ],\n    \"editable\": true,\n    \"usesDefault\": false,\n    \"allowedEmpty\": false,\n    \"defaultLabels\": [\n      \"officia ex\",\n      \"mollit do non\"\n    ]\n  },\n  \"gdprDelete\": {\n    \"labels\": [\n      \"ut nostrud mollit anim\",\n      \"eu esse ut pariatur\"\n    ],\n    \"editable\": false,\n    \"usesDefault\": false,\n    \"allowedEmpty\": false,\n    \"defaultLabels\": [\n      \"deserunt id\",\n      \"ea\"\n    ]\n  },\n  \"identifiability\": {\n    \"labels\": [\n      \"proident quis\",\n      \"magna Lorem\"\n    ],\n    \"editable\": false,\n    \"usesDefault\": true,\n    \"allowedEmpty\": false,\n    \"defaultLabels\": [\n      \"sunt Excepteur\",\n      \"Lorem do exercitation dolor\"\n    ]\n  },\n  \"sensitivity\": {\n    \"labels\": [\n      \"velit ut aute consequat adipisicing\",\n      \"sint occaecat\"\n    ],\n    \"editable\": false,\n    \"usesDefault\": false,\n    \"allowedEmpty\": true,\n    \"defaultLabels\": [\n      \"occaecat \",\n      \"nisi ad\"\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/dimensions/:dimensionId/datagovernance?rsid=aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dimensions",
												":dimensionId",
												"datagovernance"
											],
											"query": [
												{
													"key": "rsid",
													"value": "aliqua"
												}
											],
											"variable": [
												{
													"key": "dimensionId",
													"value": "aliqua",
													"description": "(Required) The id of the dimension to modify."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Returns a list of dimensions for a given report suite.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dimensions?rsid=aliqua&locale=en_US&support=oberon,oberon&segmentable=true&supportsDataGovernance=true&reportable=true&classifiable=false&reportTimeAttribution=true&useCache=true&expansion=attributes,attributionModel&includeType=unauthorized,hidden&dataGovernanceLabels=cillum minim dolore,ullamco a&dataGovernanceNamespaces=cillum minim dolore,ullamco a&stitched=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dimensions"
							],
							"query": [
								{
									"key": "rsid",
									"value": "aliqua",
									"description": "(Required) A Report Suite ID"
								},
								{
									"key": "locale",
									"value": "en_US",
									"description": "Locale"
								},
								{
									"key": "support",
									"value": "oberon,oberon",
									"description": "Comma-delimited list of products to filter the dimension list by. Possible values are 'oberon' and 'dataWarehouse'."
								},
								{
									"key": "segmentable",
									"value": "true",
									"description": "Only include dimensions that are valid within a segment."
								},
								{
									"key": "supportsDataGovernance",
									"value": "true",
									"description": "Only include dimensions that contain dataGovernance attribute."
								},
								{
									"key": "reportable",
									"value": "true",
									"description": "Only include dimensions that are valid within a report."
								},
								{
									"key": "classifiable",
									"value": "false",
									"description": "Only include classifiable dimensions."
								},
								{
									"key": "reportTimeAttribution",
									"value": "true",
									"description": "Only include dimensions that support reportTimeAttribution."
								},
								{
									"key": "useCache",
									"value": "true",
									"description": "Enable caching for faster requests."
								},
								{
									"key": "expansion",
									"value": "attributes,attributionModel",
									"description": "Add extra metadata to items (comma-delimited list)"
								},
								{
									"key": "includeType",
									"value": "unauthorized,hidden",
									"description": "Include additional dimensions."
								},
								{
									"key": "dataGovernanceLabels",
									"value": "cillum minim dolore,ullamco a",
									"description": "Filter the response based on data governance labels. Search for multiple labels using a comma-delimited string format. Any metric/dimension containing one or more of the provided labels will be returned."
								},
								{
									"key": "dataGovernanceNamespaces",
									"value": "cillum minim dolore,ullamco a",
									"description": "Filter the response based on data governance namespaces. Search for multiple namespaces using a comma-delimited string format. Any dimension containing one or more of the provided namespaces will be returned."
								},
								{
									"key": "stitched",
									"value": "false",
									"description": "Apply visitor stitching rules to dimensions"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dimensions?rsid=aliqua&locale=en_US&support=dataWarehouse,dataWarehouse&segmentable=true&supportsDataGovernance=true&reportable=true&classifiable=false&reportTimeAttribution=true&useCache=true&expansion=instanceMetricId,favorite&includeType=hidden,hidden&dataGovernanceLabels=officia,occaecat minim et anim dolor&dataGovernanceNamespaces=officia,occaecat minim et anim dolor&stitched=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dimensions"
									],
									"query": [
										{
											"key": "rsid",
											"value": "aliqua"
										},
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "support",
											"value": "dataWarehouse,dataWarehouse"
										},
										{
											"key": "segmentable",
											"value": "true"
										},
										{
											"key": "supportsDataGovernance",
											"value": "true"
										},
										{
											"key": "reportable",
											"value": "true"
										},
										{
											"key": "classifiable",
											"value": "false"
										},
										{
											"key": "reportTimeAttribution",
											"value": "true"
										},
										{
											"key": "useCache",
											"value": "true"
										},
										{
											"key": "expansion",
											"value": "instanceMetricId,favorite"
										},
										{
											"key": "includeType",
											"value": "hidden,hidden"
										},
										{
											"key": "dataGovernanceLabels",
											"value": "officia,occaecat minim et anim dolor"
										},
										{
											"key": "dataGovernanceNamespaces",
											"value": "officia,occaecat minim et anim dolor"
										},
										{
											"key": "stitched",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"cupi\",\n    \"title\": \"dolor\",\n    \"name\": \"sunt enim sit do\",\n    \"type\": \"INT\",\n    \"category\": \"Duis aliqua\",\n    \"categories\": [\n      \"ex ut\",\n      \"reprehenderit sed qui Excepteur\"\n    ],\n    \"support\": [\n      \"nisi Excepteur qui commodo\",\n      \"dolor\"\n    ],\n    \"pathable\": false,\n    \"parent\": \"ut fugiat\",\n    \"extraTitleInfo\": \"fugiat cul\",\n    \"segmentable\": false,\n    \"reportable\": [\n      \"sed quis\",\n      \"mollit in nisi\"\n    ],\n    \"supportsDataGovernance\": true,\n    \"description\": \"nostrud\",\n    \"fragRelId\": \"Excepteur in sint ex\",\n    \"dataGroup\": \"in nisi sunt tempor\",\n    \"hidden\": false,\n    \"noAccess\": false,\n    \"isEntryOrExit\": true,\n    \"alternateVariableNames\": {\n      \"name\": \"dolor sunt labore\",\n      \"baseName\": \"ullamco Duis reprehenderit\",\n      \"curatedName\": \"ut cillum non Lorem\"\n    },\n    \"curatedItem\": true,\n    \"dataGovernance\": {\n      \"namespace\": \"dolore proide\",\n      \"auth\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"gdprAccess\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"gdprDelete\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiability\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"sensitivity\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"reportTimeAttribution\": false,\n    \"customerJourney\": false,\n    \"aliasId\": \"pariatur proident in\",\n    \"attributionModel\": {\n      \"minim_4\": {},\n      \"nulla531\": {}\n    },\n    \"breakdownAttributionModel\": {\n      \"nisi1_\": {}\n    },\n    \"attributes\": [\n      \"et\",\n      \"Duis\"\n    ],\n    \"instanceMetricId\": \"dolore incididunt eu aute eiusmod\",\n    \"allowedForReporting\": false,\n    \"noneSettings\": {\n      \"includeNoneByDefault\": false,\n      \"noneChangeable\": false\n    },\n    \"dataSourcesUploadName\": \"et eiusmod laborum exercitation\",\n    \"multiValued\": true,\n    \"tags\": [\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"components\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"components\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"usageSummary\": {\n      \"count\": 35431751,\n      \"mostRecentTimestamp\": \"1979-12-29T08:42:57.487Z\",\n      \"itemId\": \"Lorem minim reprehenderit sunt\",\n      \"relevancyScore\": 15492787.720589757,\n      \"companyCount\": 83901906\n    },\n    \"shares\": [\n      {\n        \"componentId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToType\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"componentType\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToDisplayName\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToLogin\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToImsUserId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"accessLevel\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"componentId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToType\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"componentType\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToDisplayName\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToLogin\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToImsUserId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"accessLevel\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"approved\": false,\n    \"favorite\": true\n  },\n  {\n    \"id\": \"ullamco consectetur tempor\",\n    \"title\": \"consectetur nulla\",\n    \"name\": \"officia sunt\",\n    \"type\": \"STRING\",\n    \"category\": \"dolore do consectetur\",\n    \"categories\": [\n      \"minim ut\",\n      \"dolor sit cillum\"\n    ],\n    \"support\": [\n      \"ex velit et nostrud\",\n      \"ad laboris sed dolor\"\n    ],\n    \"pathable\": false,\n    \"parent\": \"aliqua proident\",\n    \"extraTitleInfo\": \"eu\",\n    \"segmentable\": false,\n    \"reportable\": [\n      \"dolore magna cupidata\",\n      \"ipsum\"\n    ],\n    \"supportsDataGovernance\": true,\n    \"description\": \"ea\",\n    \"fragRelId\": \"est laboris quis\",\n    \"dataGroup\": \"tempor\",\n    \"hidden\": true,\n    \"noAccess\": true,\n    \"isEntryOrExit\": true,\n    \"alternateVariableNames\": {\n      \"name\": \"ullamco\",\n      \"baseName\": \"amet nulla do\",\n      \"curatedName\": \"eu dolore sed veniam\"\n    },\n    \"curatedItem\": false,\n    \"dataGovernance\": {\n      \"namespace\": \"eu laborum\",\n      \"auth\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"gdprAccess\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"gdprDelete\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiability\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"sensitivity\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"reportTimeAttribution\": true,\n    \"customerJourney\": false,\n    \"aliasId\": \"aute incididunt deserunt\",\n    \"attributionModel\": {\n      \"Duisf\": {}\n    },\n    \"breakdownAttributionModel\": {\n      \"aliqua_3f\": {},\n      \"ea_964\": {}\n    },\n    \"attributes\": [\n      \"anim ullamco laborum\",\n      \"sit Duis nostrud eu\"\n    ],\n    \"instanceMetricId\": \"incididunt minim aliquip\",\n    \"allowedForReporting\": false,\n    \"noneSettings\": {\n      \"includeNoneByDefault\": false,\n      \"noneChangeable\": false\n    },\n    \"dataSourcesUploadName\": \"eu\",\n    \"multiValued\": true,\n    \"tags\": [\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"components\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"components\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"usageSummary\": {\n      \"count\": 75396698,\n      \"mostRecentTimestamp\": \"1990-10-10T09:10:41.662Z\",\n      \"itemId\": \"ipsum adipisicing\",\n      \"relevancyScore\": -61468723.2576574,\n      \"companyCount\": 85570079\n    },\n    \"shares\": [\n      {\n        \"componentId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToType\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"componentType\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToDisplayName\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToLogin\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToImsUserId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"accessLevel\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"componentId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToType\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"componentType\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToDisplayName\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToLogin\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shareToImsUserId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"accessLevel\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"approved\": true,\n    \"favorite\": true\n  }\n]"
						},
						{
							"name": "Invalid JSON input",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dimensions?rsid=aliqua&locale=en_US&support=dataWarehouse,dataWarehouse&segmentable=true&supportsDataGovernance=true&reportable=true&classifiable=false&reportTimeAttribution=true&useCache=true&expansion=instanceMetricId,favorite&includeType=hidden,hidden&dataGovernanceLabels=officia,occaecat minim et anim dolor&dataGovernanceNamespaces=officia,occaecat minim et anim dolor&stitched=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dimensions"
									],
									"query": [
										{
											"key": "rsid",
											"value": "aliqua"
										},
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "support",
											"value": "dataWarehouse,dataWarehouse"
										},
										{
											"key": "segmentable",
											"value": "true"
										},
										{
											"key": "supportsDataGovernance",
											"value": "true"
										},
										{
											"key": "reportable",
											"value": "true"
										},
										{
											"key": "classifiable",
											"value": "false"
										},
										{
											"key": "reportTimeAttribution",
											"value": "true"
										},
										{
											"key": "useCache",
											"value": "true"
										},
										{
											"key": "expansion",
											"value": "instanceMetricId,favorite"
										},
										{
											"key": "includeType",
											"value": "hidden,hidden"
										},
										{
											"key": "dataGovernanceLabels",
											"value": "officia,occaecat minim et anim dolor"
										},
										{
											"key": "dataGovernanceNamespaces",
											"value": "officia,occaecat minim et anim dolor"
										},
										{
											"key": "stitched",
											"value": "false"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "User does not have access to this report suite",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dimensions?rsid=aliqua&locale=en_US&support=dataWarehouse,dataWarehouse&segmentable=true&supportsDataGovernance=true&reportable=true&classifiable=false&reportTimeAttribution=true&useCache=true&expansion=instanceMetricId,favorite&includeType=hidden,hidden&dataGovernanceLabels=officia,occaecat minim et anim dolor&dataGovernanceNamespaces=officia,occaecat minim et anim dolor&stitched=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dimensions"
									],
									"query": [
										{
											"key": "rsid",
											"value": "aliqua"
										},
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "support",
											"value": "dataWarehouse,dataWarehouse"
										},
										{
											"key": "segmentable",
											"value": "true"
										},
										{
											"key": "supportsDataGovernance",
											"value": "true"
										},
										{
											"key": "reportable",
											"value": "true"
										},
										{
											"key": "classifiable",
											"value": "false"
										},
										{
											"key": "reportTimeAttribution",
											"value": "true"
										},
										{
											"key": "useCache",
											"value": "true"
										},
										{
											"key": "expansion",
											"value": "instanceMetricId,favorite"
										},
										{
											"key": "includeType",
											"value": "hidden,hidden"
										},
										{
											"key": "dataGovernanceLabels",
											"value": "officia,occaecat minim et anim dolor"
										},
										{
											"key": "dataGovernanceNamespaces",
											"value": "officia,occaecat minim et anim dolor"
										},
										{
											"key": "stitched",
											"value": "false"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unexpected internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dimensions?rsid=aliqua&locale=en_US&support=dataWarehouse,dataWarehouse&segmentable=true&supportsDataGovernance=true&reportable=true&classifiable=false&reportTimeAttribution=true&useCache=true&expansion=instanceMetricId,favorite&includeType=hidden,hidden&dataGovernanceLabels=officia,occaecat minim et anim dolor&dataGovernanceNamespaces=officia,occaecat minim et anim dolor&stitched=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dimensions"
									],
									"query": [
										{
											"key": "rsid",
											"value": "aliqua"
										},
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "support",
											"value": "dataWarehouse,dataWarehouse"
										},
										{
											"key": "segmentable",
											"value": "true"
										},
										{
											"key": "supportsDataGovernance",
											"value": "true"
										},
										{
											"key": "reportable",
											"value": "true"
										},
										{
											"key": "classifiable",
											"value": "false"
										},
										{
											"key": "reportTimeAttribution",
											"value": "true"
										},
										{
											"key": "useCache",
											"value": "true"
										},
										{
											"key": "expansion",
											"value": "instanceMetricId,favorite"
										},
										{
											"key": "includeType",
											"value": "hidden,hidden"
										},
										{
											"key": "dataGovernanceLabels",
											"value": "officia,occaecat minim et anim dolor"
										},
										{
											"key": "dataGovernanceNamespaces",
											"value": "officia,occaecat minim et anim dolor"
										},
										{
											"key": "stitched",
											"value": "false"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Batch modification of data governance settings for given dimensions",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"namespace\": \"consectetur\",\n    \"auth\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": true,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprAccess\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": false,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprDelete\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": true,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"identifiability\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": false,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"sensitivity\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": false,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"status\": {\n      \"success\": true,\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"variableIdTranslationMessage\": \"consectetur aut\",\n      \"variableIdSavedAs\": \"labore Duis\"\n    },\n    \"variableId\": \"est\"\n  },\n  {\n    \"namespace\": \"ex ut\",\n    \"auth\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": false,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprAccess\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": true,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprDelete\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": true,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"identifiability\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": false,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"sensitivity\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": true,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"status\": {\n      \"success\": false,\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"variableIdTranslationMessage\": \"dolor nostrud\",\n      \"variableIdSavedAs\": \"dolore eiusmod adipisicing ut\"\n    },\n    \"variableId\": \"ullamco id elit\"\n  }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/dimensions/:rsid/datagovernance/batch?recordsDuplicatedFromRsid=aliqua",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dimensions",
								":rsid",
								"datagovernance",
								"batch"
							],
							"query": [
								{
									"key": "recordsDuplicatedFromRsid",
									"value": "aliqua",
									"description": "RSID duplicating settings from; used to match identities across report suites (e.g. classification divs)"
								}
							],
							"variable": [
								{
									"key": "rsid",
									"value": "aliqua",
									"description": "(Required) A Report suite ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success status; all updates successfully completed.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"namespace\": \"reprehenderit minim Excepteur in nulla\",\n    \"auth\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": false,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprAccess\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": true,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprDelete\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": true,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"identifiability\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": true,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"sensitivity\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": false,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"status\": {\n      \"success\": true,\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"variableIdTranslationMessage\": \"ullamco veniam\",\n      \"variableIdSavedAs\": \"laboris Ut\"\n    },\n    \"variableId\": \"sed laborum dolor consequ\"\n  },\n  {\n    \"namespace\": \"commodo\",\n    \"auth\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": true,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprAccess\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": false,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprDelete\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": true,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"identifiability\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": false,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"sensitivity\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": false,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"status\": {\n      \"success\": true,\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"variableIdTranslationMessage\": \"sunt irure aliqua sed\",\n      \"variableIdSavedAs\": \"ipsum tempor anim in\"\n    },\n    \"variableId\": \"ad deserunt aute\"\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dimensions/:rsid/datagovernance/batch?recordsDuplicatedFromRsid=aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dimensions",
										":rsid",
										"datagovernance",
										"batch"
									],
									"query": [
										{
											"key": "recordsDuplicatedFromRsid",
											"value": "aliqua"
										}
									],
									"variable": [
										{
											"key": "rsid",
											"value": "aliqua",
											"description": "(Required) A Report suite ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"namespace\": \"consectetur\",\n    \"auth\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": true,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprAccess\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": false,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprDelete\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": true,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"identifiability\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": false,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"sensitivity\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": false,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"status\": {\n      \"success\": true,\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"variableIdTranslationMessage\": \"consectetur aut\",\n      \"variableIdSavedAs\": \"labore Duis\"\n    },\n    \"variableId\": \"est\"\n  },\n  {\n    \"namespace\": \"ex ut\",\n    \"auth\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": false,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprAccess\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": true,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprDelete\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": true,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"identifiability\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": false,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"sensitivity\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": true,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"status\": {\n      \"success\": false,\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"variableIdTranslationMessage\": \"dolor nostrud\",\n      \"variableIdSavedAs\": \"dolore eiusmod adipisicing ut\"\n    },\n    \"variableId\": \"ullamco id elit\"\n  }\n]"
						},
						{
							"name": "Multiple status; partial success, some batch settings produced errors, see individual batch setting status for details.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"namespace\": \"reprehenderit minim Excepteur in nulla\",\n    \"auth\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": false,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprAccess\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": true,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprDelete\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": true,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"identifiability\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": true,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"sensitivity\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": false,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"status\": {\n      \"success\": true,\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"variableIdTranslationMessage\": \"ullamco veniam\",\n      \"variableIdSavedAs\": \"laboris Ut\"\n    },\n    \"variableId\": \"sed laborum dolor consequ\"\n  },\n  {\n    \"namespace\": \"commodo\",\n    \"auth\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": true,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprAccess\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": false,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprDelete\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": true,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"identifiability\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": false,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"sensitivity\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": false,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"status\": {\n      \"success\": true,\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"variableIdTranslationMessage\": \"sunt irure aliqua sed\",\n      \"variableIdSavedAs\": \"ipsum tempor anim in\"\n    },\n    \"variableId\": \"ad deserunt aute\"\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dimensions/:rsid/datagovernance/batch?recordsDuplicatedFromRsid=aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dimensions",
										":rsid",
										"datagovernance",
										"batch"
									],
									"query": [
										{
											"key": "recordsDuplicatedFromRsid",
											"value": "aliqua"
										}
									],
									"variable": [
										{
											"key": "rsid",
											"value": "aliqua",
											"description": "(Required) A Report suite ID"
										}
									]
								}
							},
							"status": "Multi-Status (WebDAV) (RFC 4918)",
							"code": 207,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"namespace\": \"consectetur\",\n    \"auth\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": true,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprAccess\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": false,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprDelete\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": true,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"identifiability\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": false,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"sensitivity\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": false,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"status\": {\n      \"success\": true,\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"variableIdTranslationMessage\": \"consectetur aut\",\n      \"variableIdSavedAs\": \"labore Duis\"\n    },\n    \"variableId\": \"est\"\n  },\n  {\n    \"namespace\": \"ex ut\",\n    \"auth\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": false,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprAccess\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": true,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprDelete\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": true,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"identifiability\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": false,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"sensitivity\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": true,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"status\": {\n      \"success\": false,\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"variableIdTranslationMessage\": \"dolor nostrud\",\n      \"variableIdSavedAs\": \"dolore eiusmod adipisicing ut\"\n    },\n    \"variableId\": \"ullamco id elit\"\n  }\n]"
						},
						{
							"name": "Invalid JSON input",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"namespace\": \"reprehenderit minim Excepteur in nulla\",\n    \"auth\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": false,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprAccess\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": true,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprDelete\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": true,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"identifiability\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": true,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"sensitivity\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": false,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"status\": {\n      \"success\": true,\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"variableIdTranslationMessage\": \"ullamco veniam\",\n      \"variableIdSavedAs\": \"laboris Ut\"\n    },\n    \"variableId\": \"sed laborum dolor consequ\"\n  },\n  {\n    \"namespace\": \"commodo\",\n    \"auth\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": true,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprAccess\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": false,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprDelete\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": true,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"identifiability\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": false,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"sensitivity\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": false,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"status\": {\n      \"success\": true,\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"variableIdTranslationMessage\": \"sunt irure aliqua sed\",\n      \"variableIdSavedAs\": \"ipsum tempor anim in\"\n    },\n    \"variableId\": \"ad deserunt aute\"\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dimensions/:rsid/datagovernance/batch?recordsDuplicatedFromRsid=aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dimensions",
										":rsid",
										"datagovernance",
										"batch"
									],
									"query": [
										{
											"key": "recordsDuplicatedFromRsid",
											"value": "aliqua"
										}
									],
									"variable": [
										{
											"key": "rsid",
											"value": "aliqua",
											"description": "(Required) A Report suite ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Insufficient access to perform operation",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"namespace\": \"reprehenderit minim Excepteur in nulla\",\n    \"auth\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": false,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprAccess\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": true,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprDelete\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": true,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"identifiability\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": true,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"sensitivity\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": false,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"status\": {\n      \"success\": true,\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"variableIdTranslationMessage\": \"ullamco veniam\",\n      \"variableIdSavedAs\": \"laboris Ut\"\n    },\n    \"variableId\": \"sed laborum dolor consequ\"\n  },\n  {\n    \"namespace\": \"commodo\",\n    \"auth\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": true,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprAccess\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": false,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprDelete\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": true,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"identifiability\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": false,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"sensitivity\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": false,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"status\": {\n      \"success\": true,\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"variableIdTranslationMessage\": \"sunt irure aliqua sed\",\n      \"variableIdSavedAs\": \"ipsum tempor anim in\"\n    },\n    \"variableId\": \"ad deserunt aute\"\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dimensions/:rsid/datagovernance/batch?recordsDuplicatedFromRsid=aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dimensions",
										":rsid",
										"datagovernance",
										"batch"
									],
									"query": [
										{
											"key": "recordsDuplicatedFromRsid",
											"value": "aliqua"
										}
									],
									"variable": [
										{
											"key": "rsid",
											"value": "aliqua",
											"description": "(Required) A Report suite ID"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unexpected internal server error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"namespace\": \"reprehenderit minim Excepteur in nulla\",\n    \"auth\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": false,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprAccess\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": true,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprDelete\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": true,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"identifiability\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": true,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"sensitivity\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": false,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"status\": {\n      \"success\": true,\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"variableIdTranslationMessage\": \"ullamco veniam\",\n      \"variableIdSavedAs\": \"laboris Ut\"\n    },\n    \"variableId\": \"sed laborum dolor consequ\"\n  },\n  {\n    \"namespace\": \"commodo\",\n    \"auth\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": true,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprAccess\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": false,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprDelete\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": true,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"identifiability\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": false,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"sensitivity\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": false,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"status\": {\n      \"success\": true,\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"variableIdTranslationMessage\": \"sunt irure aliqua sed\",\n      \"variableIdSavedAs\": \"ipsum tempor anim in\"\n    },\n    \"variableId\": \"ad deserunt aute\"\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dimensions/:rsid/datagovernance/batch?recordsDuplicatedFromRsid=aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dimensions",
										":rsid",
										"datagovernance",
										"batch"
									],
									"query": [
										{
											"key": "recordsDuplicatedFromRsid",
											"value": "aliqua"
										}
									],
									"variable": [
										{
											"key": "rsid",
											"value": "aliqua",
											"description": "(Required) A Report suite ID"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get all gdpr namespaces for a user's ims org",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dimensions/datagovernance/namespaces?useCache=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dimensions",
								"datagovernance",
								"namespaces"
							],
							"query": [
								{
									"key": "useCache",
									"value": "true",
									"description": "Enable caching"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success status",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dimensions/datagovernance/namespaces?useCache=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dimensions",
										"datagovernance",
										"namespaces"
									],
									"query": [
										{
											"key": "useCache",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  \"cillum minim dolore\",\n  \"ullamco a\"\n]"
						}
					]
				},
				{
					"name": "Returns the names of the dimension items listed in the post body.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"dimension\": \"fugiat laboris\",\n    \"itemId\": \"veniam fugiat nostrud volupta\",\n    \"value\": \"aute eiusmod\"\n  },\n  {\n    \"dimension\": \"et\",\n    \"itemId\": \"ess\",\n    \"value\": \"officia in irure veniam\"\n  }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/dimensions/values?rsid=aliqua&locale=en_US&allowRemoteLoad=default&dateRange=aliqua",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dimensions",
								"values"
							],
							"query": [
								{
									"key": "rsid",
									"value": "aliqua",
									"description": "(Required) The report suite ID"
								},
								{
									"key": "locale",
									"value": "en_US",
									"description": "Locale to use when returning dimension information."
								},
								{
									"key": "allowRemoteLoad",
									"value": "default",
									"description": "Controls if Oberon should remote load data.  Default behavior is true with fallback to false if remote data does not exist"
								},
								{
									"key": "dateRange",
									"value": "aliqua",
									"description": "Optionally supply the date range for filtering dimension values (default is last 90 days). Example format: 2014-06-01/2014-06-30 (gives June 2014)"
								}
							]
						},
						"description": "Given a dimension name and an itemId, this endpoint returns the text value for that itemId"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"dimension\": \"nisi dolore enim irure\",\n    \"itemId\": \"ullamco sunt labore id esse\",\n    \"value\": \"et aute\"\n  },\n  {\n    \"dimension\": \"irure adipisicing consectetur in\",\n    \"itemId\": \"ex velit\",\n    \"value\": \"tempor cup\"\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dimensions/values?rsid=aliqua&locale=en_US&allowRemoteLoad=default&dateRange=aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dimensions",
										"values"
									],
									"query": [
										{
											"key": "rsid",
											"value": "aliqua"
										},
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "allowRemoteLoad",
											"value": "default"
										},
										{
											"key": "dateRange",
											"value": "aliqua"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"dimension\": \"fugiat laboris\",\n    \"itemId\": \"veniam fugiat nostrud volupta\",\n    \"value\": \"aute eiusmod\"\n  },\n  {\n    \"dimension\": \"et\",\n    \"itemId\": \"ess\",\n    \"value\": \"officia in irure veniam\"\n  }\n]"
						},
						{
							"name": "Invalid JSON input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"dimension\": \"nisi dolore enim irure\",\n    \"itemId\": \"ullamco sunt labore id esse\",\n    \"value\": \"et aute\"\n  },\n  {\n    \"dimension\": \"irure adipisicing consectetur in\",\n    \"itemId\": \"ex velit\",\n    \"value\": \"tempor cup\"\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dimensions/values?rsid=aliqua&locale=en_US&allowRemoteLoad=default&dateRange=aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dimensions",
										"values"
									],
									"query": [
										{
											"key": "rsid",
											"value": "aliqua"
										},
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "allowRemoteLoad",
											"value": "default"
										},
										{
											"key": "dateRange",
											"value": "aliqua"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Insufficient access to perform operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"dimension\": \"nisi dolore enim irure\",\n    \"itemId\": \"ullamco sunt labore id esse\",\n    \"value\": \"et aute\"\n  },\n  {\n    \"dimension\": \"irure adipisicing consectetur in\",\n    \"itemId\": \"ex velit\",\n    \"value\": \"tempor cup\"\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dimensions/values?rsid=aliqua&locale=en_US&allowRemoteLoad=default&dateRange=aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dimensions",
										"values"
									],
									"query": [
										{
											"key": "rsid",
											"value": "aliqua"
										},
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "allowRemoteLoad",
											"value": "default"
										},
										{
											"key": "dateRange",
											"value": "aliqua"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unexpected internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"dimension\": \"nisi dolore enim irure\",\n    \"itemId\": \"ullamco sunt labore id esse\",\n    \"value\": \"et aute\"\n  },\n  {\n    \"dimension\": \"irure adipisicing consectetur in\",\n    \"itemId\": \"ex velit\",\n    \"value\": \"tempor cup\"\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dimensions/values?rsid=aliqua&locale=en_US&allowRemoteLoad=default&dateRange=aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dimensions",
										"values"
									],
									"query": [
										{
											"key": "rsid",
											"value": "aliqua"
										},
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "allowRemoteLoad",
											"value": "default"
										},
										{
											"key": "dateRange",
											"value": "aliqua"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "services",
			"item": [
				{
					"name": "Retrieves company login info for the this user",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/services/discovery/:imsUserId?expansion=companyId,companyId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"services",
								"discovery",
								":imsUserId"
							],
							"query": [
								{
									"key": "expansion",
									"value": "companyId,companyId",
									"description": "Comma-delimited list of additional segment metadata fields to include on response."
								}
							],
							"variable": [
								{
									"key": "imsUserId",
									"value": "aliqua",
									"description": "(Required) The imsUserId to retrieve login companies for"
								}
							]
						},
						"description": "Used to retrieve the login companies for an ims mapped analytics user NOTE: This endpoint is only supported with an ims user token."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/services/discovery/:imsUserId?expansion=companyId,companyId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"services",
										"discovery",
										":imsUserId"
									],
									"query": [
										{
											"key": "expansion",
											"value": "companyId,companyId"
										}
									],
									"variable": [
										{
											"key": "imsUserId",
											"value": "aliqua",
											"description": "(Required) The imsUserId to retrieve login companies for"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"urls\": [\n    {\n      \"serviceName\": \"ex non veniam sint Ut\",\n      \"environment\": \"dolor\",\n      \"url\": \"commodo\",\n      \"dpc\": \"Excepteur\"\n    },\n    {\n      \"serviceName\": \"laboris Duis nisi\",\n      \"environment\": \"nulla ipsum consequat quis\",\n      \"url\": \"nostrud occaecat\",\n      \"dpc\": \"eiusmod cillum velit\"\n    }\n  ],\n  \"company\": {\n    \"globalCompanyId\": \"nostrud Lorem Duis exercitation\",\n    \"companyName\": \"cupidatat ut\",\n    \"apiRateLimitPolicy\": \"mollit est ad et\",\n    \"companyId\": 77450294\n  }\n}"
						},
						{
							"name": "unexpected_error - Internal error while fetching login company info",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/services/discovery/:imsUserId?expansion=companyId,companyId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"services",
										"discovery",
										":imsUserId"
									],
									"query": [
										{
											"key": "expansion",
											"value": "companyId,companyId"
										}
									],
									"variable": [
										{
											"key": "imsUserId",
											"value": "aliqua",
											"description": "(Required) The imsUserId to retrieve login companies for"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"io_error\",\n  \"errorDescription\": \"reprehenderit sit aliqua\",\n  \"errorId\": \"magna\",\n  \"errorDetails\": {\n    \"velitf00\": {}\n  },\n  \"rootCauseService\": \"eu tempor ullamco ipsum\"\n}"
						}
					]
				},
				{
					"name": "Deletes the project from user's landing pages",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/services/userpreferences/landingpage/:projectId?companyId=aliqua",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"services",
								"userpreferences",
								"landingpage",
								":projectId"
							],
							"query": [
								{
									"key": "companyId",
									"value": "aliqua",
									"description": "Company project belongs to"
								}
							],
							"variable": [
								{
									"key": "projectId",
									"value": "aliqua",
									"description": "(Required) Project id to remove from landing pages"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/services/userpreferences/landingpage/:projectId?companyId=aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"services",
										"userpreferences",
										"landingpage",
										":projectId"
									],
									"query": [
										{
											"key": "companyId",
											"value": "aliqua"
										}
									],
									"variable": [
										{
											"key": "projectId",
											"value": "aliqua",
											"description": "(Required) Project id to remove from landing pages"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "discovery",
			"item": [
				{
					"name": "Retrieves company login info for the this user",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/discovery/me?expansion=companyId,companyId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"discovery",
								"me"
							],
							"query": [
								{
									"key": "expansion",
									"value": "companyId,companyId",
									"description": "Comma-delimited list of additional segment metadata fields to include on response."
								}
							]
						},
						"description": "Used to retrieve the login companies for an ims mapped analytics user NOTE: This endpoint is only supported with an ims user token."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/discovery/me?expansion=companyId,companyId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"discovery",
										"me"
									],
									"query": [
										{
											"key": "expansion",
											"value": "companyId,companyId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"urls\": [\n    {\n      \"serviceName\": \"occaecat sed eiusmod\",\n      \"environment\": \"dolor\",\n      \"url\": \"ullamco fugiat\",\n      \"dpc\": \"irure non proident cillum\"\n    },\n    {\n      \"serviceName\": \"ut consequat\",\n      \"environment\": \"laborum\",\n      \"url\": \"et reprehenderit\",\n      \"dpc\": \"elit\"\n    }\n  ],\n  \"company\": {\n    \"globalCompanyId\": \"proident\",\n    \"companyName\": \"commodo\",\n    \"apiRateLimitPolicy\": \"adipisicing mollit dolor nisi\",\n    \"companyId\": 42410811\n  }\n}"
						},
						{
							"name": "unexpected_error - Internal error while fetching login company info",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/discovery/me?expansion=companyId,companyId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"discovery",
										"me"
									],
									"query": [
										{
											"key": "expansion",
											"value": "companyId,companyId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"io_error\",\n  \"errorDescription\": \"reprehenderit sit aliqua\",\n  \"errorId\": \"magna\",\n  \"errorDetails\": {\n    \"velitf00\": {}\n  },\n  \"rootCauseService\": \"eu tempor ullamco ipsum\"\n}"
						}
					]
				},
				{
					"name": "Retrieves company login info for the this user",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/discovery/cja/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"discovery",
								"cja",
								"me"
							]
						},
						"description": "Used to retrieve the login companies for an ims mapped analytics user NOTE: This endpoint is only supported with an ims user token."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/discovery/cja/me",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"discovery",
										"cja",
										"me"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"imsOrgId\": \"minim in exercitation\",\n  \"imsOrgName\": \"in\",\n  \"cjaCompanyName\": \"Ut aliqua id\",\n  \"cjaCompanyId\": -9404767,\n  \"cjaGlobalCompanyId\": \"Ut voluptate pariatur eiusmod\",\n  \"ident\": \"nisi reprehenderit incididunt\",\n  \"microserviceMigrationComplete\": false,\n  \"urls\": [\n    {\n      \"serviceName\": \"nulla occaecat\",\n      \"environment\": \"qui id est\",\n      \"url\": \"Duis\",\n      \"dpc\": \"ut dolore voluptate\"\n    },\n    {\n      \"serviceName\": \"sunt et Duis pariatur\",\n      \"environment\": \"incididunt ullamco\",\n      \"url\": \"aute\",\n      \"dpc\": \"consectetur\"\n    }\n  ]\n}"
						},
						{
							"name": "unexpected_error - Internal error while fetching login company info",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/discovery/cja/me",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"discovery",
										"cja",
										"me"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"io_error\",\n  \"errorDescription\": \"reprehenderit sit aliqua\",\n  \"errorId\": \"magna\",\n  \"errorDetails\": {\n    \"velitf00\": {}\n  },\n  \"rootCauseService\": \"eu tempor ullamco ipsum\"\n}"
						}
					]
				},
				{
					"name": "Retrieves endpoint info for the given data",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/discovery/endpoints?dpc=aliqua&rsid=aliqua&companyName=aliqua&globalCompanyId=aliqua",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"discovery",
								"endpoints"
							],
							"query": [
								{
									"key": "dpc",
									"value": "aliqua",
									"description": "The dpc to retrieve the endpoint info"
								},
								{
									"key": "rsid",
									"value": "aliqua",
									"description": "The report suite id to retrieve the endpoint info"
								},
								{
									"key": "companyName",
									"value": "aliqua",
									"description": "The company name to retrieve the endpoint info"
								},
								{
									"key": "globalCompanyId",
									"value": "aliqua",
									"description": "The global company id to retrieve the endpoint info"
								}
							]
						},
						"description": "Used to retrieve the data center API URL for a given company, report suite or dpc according to the Analytics environments. NOTE: The client must use a service token."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/discovery/endpoints?dpc=aliqua&rsid=aliqua&companyName=aliqua&globalCompanyId=aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"discovery",
										"endpoints"
									],
									"query": [
										{
											"key": "dpc",
											"value": "aliqua"
										},
										{
											"key": "rsid",
											"value": "aliqua"
										},
										{
											"key": "companyName",
											"value": "aliqua"
										},
										{
											"key": "globalCompanyId",
											"value": "aliqua"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"urls\": [\n    {\n      \"serviceName\": \"occaecat sed eiusmod\",\n      \"environment\": \"dolor\",\n      \"url\": \"ullamco fugiat\",\n      \"dpc\": \"irure non proident cillum\"\n    },\n    {\n      \"serviceName\": \"ut consequat\",\n      \"environment\": \"laborum\",\n      \"url\": \"et reprehenderit\",\n      \"dpc\": \"elit\"\n    }\n  ],\n  \"company\": {\n    \"globalCompanyId\": \"proident\",\n    \"companyName\": \"commodo\",\n    \"apiRateLimitPolicy\": \"adipisicing mollit dolor nisi\",\n    \"companyId\": 42410811\n  }\n}"
						},
						{
							"name": "resource_not_found - could not find company with given parameters",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/discovery/endpoints?dpc=aliqua&rsid=aliqua&companyName=aliqua&globalCompanyId=aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"discovery",
										"endpoints"
									],
									"query": [
										{
											"key": "dpc",
											"value": "aliqua"
										},
										{
											"key": "rsid",
											"value": "aliqua"
										},
										{
											"key": "companyName",
											"value": "aliqua"
										},
										{
											"key": "globalCompanyId",
											"value": "aliqua"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"io_error\",\n  \"errorDescription\": \"reprehenderit sit aliqua\",\n  \"errorId\": \"magna\",\n  \"errorDetails\": {\n    \"velitf00\": {}\n  },\n  \"rootCauseService\": \"eu tempor ullamco ipsum\"\n}"
						},
						{
							"name": "unexpected_error - Internal error while fetching endpoint info",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/discovery/endpoints?dpc=aliqua&rsid=aliqua&companyName=aliqua&globalCompanyId=aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"discovery",
										"endpoints"
									],
									"query": [
										{
											"key": "dpc",
											"value": "aliqua"
										},
										{
											"key": "rsid",
											"value": "aliqua"
										},
										{
											"key": "companyName",
											"value": "aliqua"
										},
										{
											"key": "globalCompanyId",
											"value": "aliqua"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"io_error\",\n  \"errorDescription\": \"reprehenderit sit aliqua\",\n  \"errorId\": \"magna\",\n  \"errorDetails\": {\n    \"velitf00\": {}\n  },\n  \"rootCauseService\": \"eu tempor ullamco ipsum\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "favorites",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Retrieve a 'favorite' record by id",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/favorites/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"favorites",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The id of the \"Favorite\" record to return"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/favorites/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"favorites",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The id of the \"Favorite\" record to return"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"Lorem_6\": {},\n  \"consectetur1b7\": {}\n}"
								}
							]
						},
						{
							"name": "Deletes the \"Favorite\" with the given id",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/favorites/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"favorites",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The id of the favorite"
										}
									]
								},
								"description": "Deletes by favoriteId."
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/favorites/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"favorites",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The id of the favorite"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"Lorem_6\": {},\n  \"consectetur1b7\": {}\n}"
								},
								{
									"name": "Attempting to remove a favorite by id that does not exist",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/favorites/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"favorites",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The id of the favorite"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Attempting to remove a favorite for a user other than the authenticated user",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/favorites/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"favorites",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The id of the favorite"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Returns a list of favorite objects for the current user meeting the paging restriction",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/favorites?componentType=project&componentIds=aliqua&userid=43407647&limit=10&page=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"favorites"
							],
							"query": [
								{
									"key": "componentType",
									"value": "project",
									"description": "The component type to filter on. Required if also using componentIds filter."
								},
								{
									"key": "componentIds",
									"value": "aliqua",
									"description": "Comma-delimited list of componentIds to filter on. Must also pass componentType."
								},
								{
									"key": "userid",
									"value": "43407647",
									"description": "The user ID to return details for. Only admins may use this option."
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Number of results per page"
								},
								{
									"key": "page",
									"value": "0",
									"description": "Page number (base 0 - first page is \"0\")"
								}
							]
						},
						"description": "Returns an array of all of the favorites objects tied to the company. Setting a very large page size will return the list in a single request, but it may be more data than you expect and you may experience performance issues."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/favorites?componentType=project&componentIds=aliqua&userid=43407647&limit=10&page=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"favorites"
									],
									"query": [
										{
											"key": "componentType",
											"value": "project"
										},
										{
											"key": "componentIds",
											"value": "aliqua"
										},
										{
											"key": "userid",
											"value": "43407647"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"favoriteId\": -80646169,\n    \"companyId\": 21047042,\n    \"userId\": -4727177,\n    \"componentTypeId\": -56527446,\n    \"componentType\": \"deserunt ex\",\n    \"componentId\": \"magna cillum mollit\",\n    \"favoriteTimestamp\": \"1953-12-01T18:54:46.817Z\"\n  },\n  {\n    \"favoriteId\": -38815940,\n    \"companyId\": -54267151,\n    \"userId\": -26582317,\n    \"componentTypeId\": -57070695,\n    \"componentType\": \"aute reprehenderit in quis\",\n    \"componentId\": \"sit\",\n    \"favoriteTimestamp\": \"2012-02-03T22:32:23.610Z\"\n  }\n]"
						}
					]
				},
				{
					"name": "Creates 'favorite' records for a given component",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"ametf6\": {}\n  },\n  {\n    \"Ut0b6\": {},\n    \"enim_524\": {}\n  }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/favorites",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"favorites"
							]
						},
						"description": "Accepts an array of Favorite objects to allow creation of one or many 'favorite' records in a single call."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"ad_0\": {},\n    \"ullamco00\": {},\n    \"uteb\": {}\n  },\n  {\n    \"est_d08\": {}\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/favorites",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"favorites"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"favoriteId\": -31258940,\n  \"companyId\": -32352441,\n  \"userId\": 51651244,\n  \"componentTypeId\": -89035059,\n  \"componentType\": \"do proident sed magna\",\n  \"componentId\": \"et aliquip\",\n  \"favoriteTimestamp\": \"1966-02-14T04:39:18.184Z\"\n}"
						}
					]
				},
				{
					"name": "Deletes favorites by componentId. Accepts a list of componentIds and deletes any \"Favorites\" associated with them",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/favorites?componentType=project&componentIds=aliqua",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"favorites"
							],
							"query": [
								{
									"key": "componentType",
									"value": "project",
									"description": "(Required) The component type to operate on."
								},
								{
									"key": "componentIds",
									"value": "aliqua",
									"description": "(Required) A comma separated list of component Ids"
								}
							]
						},
						"description": "Deletes favorites based on componentIds."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/favorites?componentType=project&componentIds=aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"favorites"
									],
									"query": [
										{
											"key": "componentType",
											"value": "project"
										},
										{
											"key": "componentIds",
											"value": "aliqua"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"ametf6\": {}\n  },\n  {\n    \"Ut0b6\": {},\n    \"enim_524\": {}\n  }\n]"
						}
					]
				},
				{
					"name": "search for favorite status for several components at once, by the current user",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"componentType\": \"do Duis nostrud id Excepteur\",\n  \"componentIds\": [\n    \"labor\",\n    \"esse ut Duis ex\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/favorites/search?limit=10&page=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"favorites",
								"search"
							],
							"query": [
								{
									"key": "limit",
									"value": "10",
									"description": "Number of results per page"
								},
								{
									"key": "page",
									"value": "0",
									"description": "Page number (base 0 - first page is \"0\")"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/favorites/search?limit=10&page=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"favorites",
										"search"
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"favoriteId\": -31258940,\n  \"companyId\": -32352441,\n  \"userId\": 51651244,\n  \"componentTypeId\": -89035059,\n  \"componentType\": \"do proident sed magna\",\n  \"componentId\": \"et aliquip\",\n  \"favoriteTimestamp\": \"1966-02-14T04:39:18.184Z\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "featureaccess",
			"item": [
				{
					"name": "Retrieves feature access for all features.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "Company Id for which to retrieve access information",
								"key": "x-proxy-company-id",
								"value": "aliqua"
							},
							{
								"description": "Company Name for which to retrieve access information",
								"key": "x-proxy-company",
								"value": "aliqua"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/featureaccess",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"featureaccess"
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									},
									{
										"description": "Company Id for which to retrieve access information",
										"key": "x-proxy-company-id",
										"value": "aliqua"
									},
									{
										"description": "Company Name for which to retrieve access information",
										"key": "x-proxy-company",
										"value": "aliqua"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/featureaccess",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"featureaccess"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"Lorem_6\": {},\n  \"consectetur1b7\": {}\n}"
						},
						{
							"name": "Unexpected error; feature access retrieval failed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									},
									{
										"description": "Company Id for which to retrieve access information",
										"key": "x-proxy-company-id",
										"value": "aliqua"
									},
									{
										"description": "Company Name for which to retrieve access information",
										"key": "x-proxy-company",
										"value": "aliqua"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/featureaccess",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"featureaccess"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Retrieves feature access for a single feature.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "Company Id for which to retrieve access information",
								"key": "x-proxy-company-id",
								"value": "aliqua"
							},
							{
								"description": "Company Name for which to retrieve access information",
								"key": "x-proxy-company",
								"value": "aliqua"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/featureaccess/:featureId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"featureaccess",
								":featureId"
							],
							"variable": [
								{
									"key": "featureId",
									"value": "mediaAnalytics",
									"description": "(Required) The feature Id for which to retrieve access information"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									},
									{
										"description": "Company Id for which to retrieve access information",
										"key": "x-proxy-company-id",
										"value": "aliqua"
									},
									{
										"description": "Company Name for which to retrieve access information",
										"key": "x-proxy-company",
										"value": "aliqua"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/featureaccess/:featureId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"featureaccess",
										":featureId"
									],
									"variable": [
										{
											"key": "featureId",
											"value": "mediaAnalytics",
											"description": "(Required) The feature Id for which to retrieve access information"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"Lorem_6\": {},\n  \"consectetur1b7\": {}\n}"
						},
						{
							"name": "Unexpected error; feature access retrieval failed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									},
									{
										"description": "Company Id for which to retrieve access information",
										"key": "x-proxy-company-id",
										"value": "aliqua"
									},
									{
										"description": "Company Name for which to retrieve access information",
										"key": "x-proxy-company",
										"value": "aliqua"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/featureaccess/:featureId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"featureaccess",
										":featureId"
									],
									"variable": [
										{
											"key": "featureId",
											"value": "mediaAnalytics",
											"description": "(Required) The feature Id for which to retrieve access information"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "ims",
			"item": [
				{
					"name": "Get the tenant ID for an IMS Organization",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/ims/:imsOrgId/tenantid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ims",
								":imsOrgId",
								"tenantid"
							],
							"variable": [
								{
									"key": "imsOrgId",
									"value": "aliqua",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ims/:imsOrgId/tenantid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ims",
										":imsOrgId",
										"tenantid"
									],
									"variable": [
										{
											"key": "imsOrgId",
											"value": "aliqua",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"imsOrgId\": \"voluptate\",\n  \"tenantId\": \"non sed Ut\"\n}"
						}
					]
				},
				{
					"name": "Get the IMS product ID for the current company",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/ims/productid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ims",
								"productid"
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ims/productid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ims",
										"productid"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"Lorem_6\": {},\n  \"consectetur1b7\": {}\n}"
						}
					]
				},
				{
					"name": "Get ims profile info for the given ims user id",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/ims/users/:imsUserId?companyName=aliqua",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ims",
								"users",
								":imsUserId"
							],
							"query": [
								{
									"key": "companyName",
									"value": "aliqua",
									"description": "Filter the results to users that belong to an analytics product context for this company"
								}
							],
							"variable": [
								{
									"key": "imsUserId",
									"value": "aliqua",
									"description": "(Required) ims user id"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ims/users/:imsUserId?companyName=aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ims",
										"users",
										":imsUserId"
									],
									"query": [
										{
											"key": "companyName",
											"value": "aliqua"
										}
									],
									"variable": [
										{
											"key": "imsUserId",
											"value": "aliqua",
											"description": "(Required) ims user id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"countryCode\": \"voluptate mollit\",\n  \"organization\": \"ipsum aliquip cillum sunt ullamco\",\n  \"userId\": \"fugiat\",\n  \"utcOffset\": \"labore ea dolor voluptate sit\",\n  \"mrktPerm\": \"elit Duis cillum\",\n  \"roles\": [\n    {\n      \"principal\": \"irure reprehenderit do quis\",\n      \"organization\": \"sit amet\",\n      \"named_role\": \"mollit do tempor ullamco ut\",\n      \"target\": \"velit Duis\"\n    },\n    {\n      \"principal\": \"minim dolore sit ipsum\",\n      \"organization\": \"aliqua ea ut aute velit\",\n      \"named_role\": \"esse laboris\",\n      \"target\": \"c\"\n    }\n  ]\n}"
						},
						{
							"name": "Internal error while fetching ims user profile info",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ims/users/:imsUserId?companyName=aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ims",
										"users",
										":imsUserId"
									],
									"query": [
										{
											"key": "companyName",
											"value": "aliqua"
										}
									],
									"variable": [
										{
											"key": "imsUserId",
											"value": "aliqua",
											"description": "(Required) ims user id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"io_error\",\n  \"errorDescription\": \"reprehenderit sit aliqua\",\n  \"errorId\": \"magna\",\n  \"errorDetails\": {\n    \"velitf00\": {}\n  },\n  \"rootCauseService\": \"eu tempor ullamco ipsum\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "reportsuites",
			"item": [
				{
					"name": "{rsid}",
					"item": [
						{
							"name": "mcassociations",
							"item": [
								{
									"name": "Get marketing cloud association for the rsid",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reportsuites/:rsid/mcassociations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reportsuites",
												":rsid",
												"mcassociations"
											],
											"variable": [
												{
													"key": "rsid",
													"value": "aliqua",
													"description": "(Required) the report suite id"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reportsuites/:rsid/mcassociations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reportsuites",
														":rsid",
														"mcassociations"
													],
													"variable": [
														{
															"key": "rsid",
															"value": "aliqua",
															"description": "(Required) the report suite id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"imsOrgId\": \"Duis Ut est labore\",\n  \"rsid\": \"elit\",\n  \"partnerId\": 51665416,\n  \"dataSourceId\": -12700750,\n  \"createUser\": \"nisi Duis qui aliqua\",\n  \"createTimestamp\": \"1961-04-07T10:38:50.144Z\",\n  \"createdBySystem\": true,\n  \"updateTimestamp\": \"1994-07-29T11:35:00.498Z\",\n  \"dataCenter\": \"laborum dolor velit aliquip pariatur\"\n}"
										},
										{
											"name": "Internal error while fetching mcassociation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reportsuites/:rsid/mcassociations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reportsuites",
														":rsid",
														"mcassociations"
													],
													"variable": [
														{
															"key": "rsid",
															"value": "aliqua",
															"description": "(Required) the report suite id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"io_error\",\n  \"errorDescription\": \"reprehenderit sit aliqua\",\n  \"errorId\": \"magna\",\n  \"errorDetails\": {\n    \"velitf00\": {}\n  },\n  \"rootCauseService\": \"eu tempor ullamco ipsum\"\n}"
										}
									]
								},
								{
									"name": "Notify Analytics that a report suite has been mcAssociated",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"imsOrgId\": \"Duis Ut est labore\",\n  \"rsid\": \"elit\",\n  \"partnerId\": 51665416,\n  \"dataSourceId\": -12700750,\n  \"createUser\": \"nisi Duis qui aliqua\",\n  \"createTimestamp\": \"1961-04-07T10:38:50.144Z\",\n  \"createdBySystem\": true,\n  \"updateTimestamp\": \"1994-07-29T11:35:00.498Z\",\n  \"dataCenter\": \"laborum dolor velit aliquip pariatur\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reportsuites/:rsid/mcassociations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reportsuites",
												":rsid",
												"mcassociations"
											],
											"variable": [
												{
													"key": "rsid",
													"value": "aliqua",
													"description": "(Required) the report suite id"
												}
											]
										},
										"description": "This endpoint notifies Analytics that a report suite has been associated with an IMS Organization.  It will not override existing marketing cloud associations, if an existing value is found a 403 error will be returned. The client must remove the association first and then set it with the new value."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"imsOrgId\": \"Duis Ut est labore\",\n  \"rsid\": \"elit\",\n  \"partnerId\": 51665416,\n  \"dataSourceId\": -12700750,\n  \"createUser\": \"nisi Duis qui aliqua\",\n  \"createTimestamp\": \"1961-04-07T10:38:50.144Z\",\n  \"createdBySystem\": true,\n  \"updateTimestamp\": \"1994-07-29T11:35:00.498Z\",\n  \"dataCenter\": \"laborum dolor velit aliquip pariatur\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reportsuites/:rsid/mcassociations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reportsuites",
														":rsid",
														"mcassociations"
													],
													"variable": [
														{
															"key": "rsid",
															"value": "aliqua",
															"description": "(Required) the report suite id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"imsOrgId\": \"Duis Ut est labore\",\n  \"rsid\": \"elit\",\n  \"partnerId\": 51665416,\n  \"dataSourceId\": -12700750,\n  \"createUser\": \"nisi Duis qui aliqua\",\n  \"createTimestamp\": \"1961-04-07T10:38:50.144Z\",\n  \"createdBySystem\": true,\n  \"updateTimestamp\": \"1994-07-29T11:35:00.498Z\",\n  \"dataCenter\": \"laborum dolor velit aliquip pariatur\"\n}"
										},
										{
											"name": "Cannot override exisitng value",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"imsOrgId\": \"Duis Ut est labore\",\n  \"rsid\": \"elit\",\n  \"partnerId\": 51665416,\n  \"dataSourceId\": -12700750,\n  \"createUser\": \"nisi Duis qui aliqua\",\n  \"createTimestamp\": \"1961-04-07T10:38:50.144Z\",\n  \"createdBySystem\": true,\n  \"updateTimestamp\": \"1994-07-29T11:35:00.498Z\",\n  \"dataCenter\": \"laborum dolor velit aliquip pariatur\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reportsuites/:rsid/mcassociations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reportsuites",
														":rsid",
														"mcassociations"
													],
													"variable": [
														{
															"key": "rsid",
															"value": "aliqua",
															"description": "(Required) the report suite id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"io_error\",\n  \"errorDescription\": \"reprehenderit sit aliqua\",\n  \"errorId\": \"magna\",\n  \"errorDetails\": {\n    \"velitf00\": {}\n  },\n  \"rootCauseService\": \"eu tempor ullamco ipsum\"\n}"
										},
										{
											"name": "Internal error while setting mcassociation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"imsOrgId\": \"Duis Ut est labore\",\n  \"rsid\": \"elit\",\n  \"partnerId\": 51665416,\n  \"dataSourceId\": -12700750,\n  \"createUser\": \"nisi Duis qui aliqua\",\n  \"createTimestamp\": \"1961-04-07T10:38:50.144Z\",\n  \"createdBySystem\": true,\n  \"updateTimestamp\": \"1994-07-29T11:35:00.498Z\",\n  \"dataCenter\": \"laborum dolor velit aliquip pariatur\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reportsuites/:rsid/mcassociations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reportsuites",
														":rsid",
														"mcassociations"
													],
													"variable": [
														{
															"key": "rsid",
															"value": "aliqua",
															"description": "(Required) the report suite id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"io_error\",\n  \"errorDescription\": \"reprehenderit sit aliqua\",\n  \"errorId\": \"magna\",\n  \"errorDetails\": {\n    \"velitf00\": {}\n  },\n  \"rootCauseService\": \"eu tempor ullamco ipsum\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "mcconfigurations",
							"item": [
								{
									"name": "mcaudiences",
									"item": [
										{
											"name": "Get the McAudiences McConfiguration object for the rsid.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "<API Key>",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reportsuites/:rsid/mcconfigurations/mcaudiences",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reportsuites",
														":rsid",
														"mcconfigurations",
														"mcaudiences"
													],
													"variable": [
														{
															"key": "rsid",
															"value": "aliqua",
															"description": "(Required) the report suite id"
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/reportsuites/:rsid/mcconfigurations/mcaudiences",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"reportsuites",
																":rsid",
																"mcconfigurations",
																"mcaudiences"
															],
															"variable": [
																{
																	"key": "rsid",
																	"value": "aliqua",
																	"description": "(Required) the report suite id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"enabled\": false\n}"
												},
												{
													"name": "Insufficient access to retrive the mc audiences configuration",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/reportsuites/:rsid/mcconfigurations/mcaudiences",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"reportsuites",
																":rsid",
																"mcconfigurations",
																"mcaudiences"
															],
															"variable": [
																{
																	"key": "rsid",
																	"value": "aliqua",
																	"description": "(Required) the report suite id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"io_error\",\n  \"errorDescription\": \"reprehenderit sit aliqua\",\n  \"errorId\": \"magna\",\n  \"errorDetails\": {\n    \"velitf00\": {}\n  },\n  \"rootCauseService\": \"eu tempor ullamco ipsum\"\n}"
												},
												{
													"name": "invalid rsid.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/reportsuites/:rsid/mcconfigurations/mcaudiences",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"reportsuites",
																":rsid",
																"mcconfigurations",
																"mcaudiences"
															],
															"variable": [
																{
																	"key": "rsid",
																	"value": "aliqua",
																	"description": "(Required) the report suite id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"io_error\",\n  \"errorDescription\": \"reprehenderit sit aliqua\",\n  \"errorId\": \"magna\",\n  \"errorDetails\": {\n    \"velitf00\": {}\n  },\n  \"rootCauseService\": \"eu tempor ullamco ipsum\"\n}"
												},
												{
													"name": "Unexpected error; retrieval of mc audiences configuration failed due to an internal error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/reportsuites/:rsid/mcconfigurations/mcaudiences",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"reportsuites",
																":rsid",
																"mcconfigurations",
																"mcaudiences"
															],
															"variable": [
																{
																	"key": "rsid",
																	"value": "aliqua",
																	"description": "(Required) the report suite id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"io_error\",\n  \"errorDescription\": \"reprehenderit sit aliqua\",\n  \"errorId\": \"magna\",\n  \"errorDetails\": {\n    \"velitf00\": {}\n  },\n  \"rootCauseService\": \"eu tempor ullamco ipsum\"\n}"
												}
											]
										},
										{
											"name": "Sets the McAudiences McConfiguration object for the given report suite.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "<API Key>",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reportsuites/:rsid/mcconfigurations/mcaudiences",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reportsuites",
														":rsid",
														"mcconfigurations",
														"mcaudiences"
													],
													"variable": [
														{
															"key": "rsid",
															"value": "aliqua",
															"description": "(Required) the report suite id"
														}
													]
												}
											},
											"response": [
												{
													"name": "OK successfully set McAudiences object",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": false\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/reportsuites/:rsid/mcconfigurations/mcaudiences",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"reportsuites",
																":rsid",
																"mcconfigurations",
																"mcaudiences"
															],
															"variable": [
																{
																	"key": "rsid",
																	"value": "aliqua",
																	"description": "(Required) the report suite id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"enabled\": false\n}"
												},
												{
													"name": "Insufficient access to retrive the mc audiences configuration",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": false\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/reportsuites/:rsid/mcconfigurations/mcaudiences",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"reportsuites",
																":rsid",
																"mcconfigurations",
																"mcaudiences"
															],
															"variable": [
																{
																	"key": "rsid",
																	"value": "aliqua",
																	"description": "(Required) the report suite id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"io_error\",\n  \"errorDescription\": \"reprehenderit sit aliqua\",\n  \"errorId\": \"magna\",\n  \"errorDetails\": {\n    \"velitf00\": {}\n  },\n  \"rootCauseService\": \"eu tempor ullamco ipsum\"\n}"
												},
												{
													"name": "invalid rsid.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": false\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/reportsuites/:rsid/mcconfigurations/mcaudiences",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"reportsuites",
																":rsid",
																"mcconfigurations",
																"mcaudiences"
															],
															"variable": [
																{
																	"key": "rsid",
																	"value": "aliqua",
																	"description": "(Required) the report suite id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"io_error\",\n  \"errorDescription\": \"reprehenderit sit aliqua\",\n  \"errorId\": \"magna\",\n  \"errorDetails\": {\n    \"velitf00\": {}\n  },\n  \"rootCauseService\": \"eu tempor ullamco ipsum\"\n}"
												},
												{
													"name": "Unexpected error; update of mc audiences configuration failed due to an internal error",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": false\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/reportsuites/:rsid/mcconfigurations/mcaudiences",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"reportsuites",
																":rsid",
																"mcconfigurations",
																"mcaudiences"
															],
															"variable": [
																{
																	"key": "rsid",
																	"value": "aliqua",
																	"description": "(Required) the report suite id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"io_error\",\n  \"errorDescription\": \"reprehenderit sit aliqua\",\n  \"errorId\": \"magna\",\n  \"errorDetails\": {\n    \"velitf00\": {}\n  },\n  \"rootCauseService\": \"eu tempor ullamco ipsum\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "estimatedclusters",
									"item": [
										{
											"name": "Returns the EstimatedCluster McConfiguration object for the rsid.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "<API Key>",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reportsuites/:rsid/mcconfigurations/estimatedclusters?expansion=mcAssociations,mcAssociations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reportsuites",
														":rsid",
														"mcconfigurations",
														"estimatedclusters"
													],
													"query": [
														{
															"key": "expansion",
															"value": "mcAssociations,mcAssociations",
															"description": "Comma-delimited list of additional attributes to include on response."
														}
													],
													"variable": [
														{
															"key": "rsid",
															"value": "aliqua",
															"description": "(Required) the report suite id"
														}
													]
												},
												"description": "NOTE: estimatedclusters is the working title for this endpoint, this will change"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/reportsuites/:rsid/mcconfigurations/estimatedclusters?expansion=mcAssociations,mcAssociations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"reportsuites",
																":rsid",
																"mcconfigurations",
																"estimatedclusters"
															],
															"query": [
																{
																	"key": "expansion",
																	"value": "mcAssociations,mcAssociations"
																}
															],
															"variable": [
																{
																	"key": "rsid",
																	"value": "aliqua",
																	"description": "(Required) the report suite id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"coopEnabled\": false,\n  \"rsid\": \"esse in\",\n  \"mcAssociation\": {\n    \"imsOrgId\": \"aliqua\",\n    \"rsid\": \"ut dolor commodo co\",\n    \"partnerId\": -68471934,\n    \"dataSourceId\": 86908329,\n    \"createUser\": \"aute do sit et\",\n    \"createTimestamp\": \"1951-03-01T10:01:44.938Z\",\n    \"createdBySystem\": false,\n    \"updateTimestamp\": \"1967-06-18T00:33:49.647Z\",\n    \"dataCenter\": \"sit cillum Duis\"\n  },\n  \"estimatedPeople\": {\n    \"dataSourceId\": \"nostrud\"\n  }\n}"
												},
												{
													"name": "Insufficient access to data, i.e. the user does not belong to the company owning the rsid",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/reportsuites/:rsid/mcconfigurations/estimatedclusters?expansion=mcAssociations,mcAssociations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"reportsuites",
																":rsid",
																"mcconfigurations",
																"estimatedclusters"
															],
															"query": [
																{
																	"key": "expansion",
																	"value": "mcAssociations,mcAssociations"
																}
															],
															"variable": [
																{
																	"key": "rsid",
																	"value": "aliqua",
																	"description": "(Required) the report suite id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"io_error\",\n  \"errorDescription\": \"reprehenderit sit aliqua\",\n  \"errorId\": \"magna\",\n  \"errorDetails\": {\n    \"velitf00\": {}\n  },\n  \"rootCauseService\": \"eu tempor ullamco ipsum\"\n}"
												},
												{
													"name": "The association for EstimatedClusters was not found, it has not been created or was deleted.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/reportsuites/:rsid/mcconfigurations/estimatedclusters?expansion=mcAssociations,mcAssociations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"reportsuites",
																":rsid",
																"mcconfigurations",
																"estimatedclusters"
															],
															"query": [
																{
																	"key": "expansion",
																	"value": "mcAssociations,mcAssociations"
																}
															],
															"variable": [
																{
																	"key": "rsid",
																	"value": "aliqua",
																	"description": "(Required) the report suite id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"io_error\",\n  \"errorDescription\": \"reprehenderit sit aliqua\",\n  \"errorId\": \"magna\",\n  \"errorDetails\": {\n    \"velitf00\": {}\n  },\n  \"rootCauseService\": \"eu tempor ullamco ipsum\"\n}"
												},
												{
													"name": "Unexpected error; Fetch of EstimatedClusters failed due to an internal error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/reportsuites/:rsid/mcconfigurations/estimatedclusters?expansion=mcAssociations,mcAssociations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"reportsuites",
																":rsid",
																"mcconfigurations",
																"estimatedclusters"
															],
															"query": [
																{
																	"key": "expansion",
																	"value": "mcAssociations,mcAssociations"
																}
															],
															"variable": [
																{
																	"key": "rsid",
																	"value": "aliqua",
																	"description": "(Required) the report suite id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"io_error\",\n  \"errorDescription\": \"reprehenderit sit aliqua\",\n  \"errorId\": \"magna\",\n  \"errorDetails\": {\n    \"velitf00\": {}\n  },\n  \"rootCauseService\": \"eu tempor ullamco ipsum\"\n}"
												}
											]
										},
										{
											"name": "Sets the EstimatedClusters McConfiguration object for the rsid.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "<API Key>",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"coopEnabled\": false,\n  \"rsid\": \"esse in\",\n  \"mcAssociation\": {\n    \"imsOrgId\": \"aliqua\",\n    \"rsid\": \"ut dolor commodo co\",\n    \"partnerId\": -68471934,\n    \"dataSourceId\": 86908329,\n    \"createUser\": \"aute do sit et\",\n    \"createTimestamp\": \"1951-03-01T10:01:44.938Z\",\n    \"createdBySystem\": false,\n    \"updateTimestamp\": \"1967-06-18T00:33:49.647Z\",\n    \"dataCenter\": \"sit cillum Duis\"\n  },\n  \"estimatedPeople\": {\n    \"dataSourceId\": \"nostrud\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reportsuites/:rsid/mcconfigurations/estimatedclusters",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reportsuites",
														":rsid",
														"mcconfigurations",
														"estimatedclusters"
													],
													"variable": [
														{
															"key": "rsid",
															"value": "aliqua",
															"description": "(Required) the report suite id"
														}
													]
												}
											},
											"response": [
												{
													"name": "OK successfully set EstimatedClusters object",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"coopEnabled\": false,\n  \"rsid\": \"esse in\",\n  \"mcAssociation\": {\n    \"imsOrgId\": \"aliqua\",\n    \"rsid\": \"ut dolor commodo co\",\n    \"partnerId\": -68471934,\n    \"dataSourceId\": 86908329,\n    \"createUser\": \"aute do sit et\",\n    \"createTimestamp\": \"1951-03-01T10:01:44.938Z\",\n    \"createdBySystem\": false,\n    \"updateTimestamp\": \"1967-06-18T00:33:49.647Z\",\n    \"dataCenter\": \"sit cillum Duis\"\n  },\n  \"estimatedPeople\": {\n    \"dataSourceId\": \"nostrud\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/reportsuites/:rsid/mcconfigurations/estimatedclusters",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"reportsuites",
																":rsid",
																"mcconfigurations",
																"estimatedclusters"
															],
															"variable": [
																{
																	"key": "rsid",
																	"value": "aliqua",
																	"description": "(Required) the report suite id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"coopEnabled\": false,\n  \"rsid\": \"esse in\",\n  \"mcAssociation\": {\n    \"imsOrgId\": \"aliqua\",\n    \"rsid\": \"ut dolor commodo co\",\n    \"partnerId\": -68471934,\n    \"dataSourceId\": 86908329,\n    \"createUser\": \"aute do sit et\",\n    \"createTimestamp\": \"1951-03-01T10:01:44.938Z\",\n    \"createdBySystem\": false,\n    \"updateTimestamp\": \"1967-06-18T00:33:49.647Z\",\n    \"dataCenter\": \"sit cillum Duis\"\n  },\n  \"estimatedPeople\": {\n    \"dataSourceId\": \"nostrud\"\n  }\n}"
												},
												{
													"name": "Insufficient access to data, i.e. the user does not belong to the company owning the rsid",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"coopEnabled\": false,\n  \"rsid\": \"esse in\",\n  \"mcAssociation\": {\n    \"imsOrgId\": \"aliqua\",\n    \"rsid\": \"ut dolor commodo co\",\n    \"partnerId\": -68471934,\n    \"dataSourceId\": 86908329,\n    \"createUser\": \"aute do sit et\",\n    \"createTimestamp\": \"1951-03-01T10:01:44.938Z\",\n    \"createdBySystem\": false,\n    \"updateTimestamp\": \"1967-06-18T00:33:49.647Z\",\n    \"dataCenter\": \"sit cillum Duis\"\n  },\n  \"estimatedPeople\": {\n    \"dataSourceId\": \"nostrud\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/reportsuites/:rsid/mcconfigurations/estimatedclusters",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"reportsuites",
																":rsid",
																"mcconfigurations",
																"estimatedclusters"
															],
															"variable": [
																{
																	"key": "rsid",
																	"value": "aliqua",
																	"description": "(Required) the report suite id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"io_error\",\n  \"errorDescription\": \"reprehenderit sit aliqua\",\n  \"errorId\": \"magna\",\n  \"errorDetails\": {\n    \"velitf00\": {}\n  },\n  \"rootCauseService\": \"eu tempor ullamco ipsum\"\n}"
												},
												{
													"name": "Unexpected error; update of EstimatedClusters failed due to an internal error",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"coopEnabled\": false,\n  \"rsid\": \"esse in\",\n  \"mcAssociation\": {\n    \"imsOrgId\": \"aliqua\",\n    \"rsid\": \"ut dolor commodo co\",\n    \"partnerId\": -68471934,\n    \"dataSourceId\": 86908329,\n    \"createUser\": \"aute do sit et\",\n    \"createTimestamp\": \"1951-03-01T10:01:44.938Z\",\n    \"createdBySystem\": false,\n    \"updateTimestamp\": \"1967-06-18T00:33:49.647Z\",\n    \"dataCenter\": \"sit cillum Duis\"\n  },\n  \"estimatedPeople\": {\n    \"dataSourceId\": \"nostrud\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/reportsuites/:rsid/mcconfigurations/estimatedclusters",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"reportsuites",
																":rsid",
																"mcconfigurations",
																"estimatedclusters"
															],
															"variable": [
																{
																	"key": "rsid",
																	"value": "aliqua",
																	"description": "(Required) the report suite id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"io_error\",\n  \"errorDescription\": \"reprehenderit sit aliqua\",\n  \"errorId\": \"magna\",\n  \"errorDetails\": {\n    \"velitf00\": {}\n  },\n  \"rootCauseService\": \"eu tempor ullamco ipsum\"\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "segmentpublishing",
							"item": [
								{
									"name": "Retrieves the specified report suite's segment publishing configuration for the user's company.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reportsuites/:rsid/segmentpublishing?callrss=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reportsuites",
												":rsid",
												"segmentpublishing"
											],
											"query": [
												{
													"key": "callrss",
													"value": "true",
													"description": "Call Report Suite Service"
												}
											],
											"variable": [
												{
													"key": "rsid",
													"value": "aliqua",
													"description": "(Required) The rsid to retrieve segment publishing configuration for"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reportsuites/:rsid/segmentpublishing?callrss=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reportsuites",
														":rsid",
														"segmentpublishing"
													],
													"query": [
														{
															"key": "callrss",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "rsid",
															"value": "aliqua",
															"description": "(Required) The rsid to retrieve segment publishing configuration for"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"rsid\": \"dolor ut commodo ullamco\",\n  \"dataSourceId\": 24120944,\n  \"traitFolderId\": 70975406,\n  \"segmentFolderId\": -96150962,\n  \"fullSyncInterval\": 16265603,\n  \"lastFullSync\": \"est\"\n}"
										},
										{
											"name": "Unexpected error; retrieval of segment publishing configuration failed due to an internal error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reportsuites/:rsid/segmentpublishing?callrss=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reportsuites",
														":rsid",
														"segmentpublishing"
													],
													"query": [
														{
															"key": "callrss",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "rsid",
															"value": "aliqua",
															"description": "(Required) The rsid to retrieve segment publishing configuration for"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creates a report suite segment publishing configuration for the user's company.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"rsid\": \"dolor ut commodo ullamco\",\n  \"dataSourceId\": 24120944,\n  \"traitFolderId\": 70975406,\n  \"segmentFolderId\": -96150962,\n  \"fullSyncInterval\": 16265603,\n  \"lastFullSync\": \"est\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reportsuites/:rsid/segmentpublishing?callrss=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reportsuites",
												":rsid",
												"segmentpublishing"
											],
											"query": [
												{
													"key": "callrss",
													"value": "true",
													"description": "Call Report Suite Service"
												}
											],
											"variable": [
												{
													"key": "rsid",
													"value": "aliqua",
													"description": "(Required) The rsid to create a segment publishing configuration for"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reportsuites/:rsid/segmentpublishing?callrss=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reportsuites",
														":rsid",
														"segmentpublishing"
													],
													"query": [
														{
															"key": "callrss",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "rsid",
															"value": "aliqua",
															"description": "(Required) The rsid to create a segment publishing configuration for"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"rsid\": \"dolor ut commodo ullamco\",\n  \"dataSourceId\": 24120944,\n  \"traitFolderId\": 70975406,\n  \"segmentFolderId\": -96150962,\n  \"fullSyncInterval\": 16265603,\n  \"lastFullSync\": \"est\"\n}"
										},
										{
											"name": "Unexpected error; update of segment publishing configuration failed due to an internal error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reportsuites/:rsid/segmentpublishing?callrss=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reportsuites",
														":rsid",
														"segmentpublishing"
													],
													"query": [
														{
															"key": "callrss",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "rsid",
															"value": "aliqua",
															"description": "(Required) The rsid to create a segment publishing configuration for"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Updates a report suite's segment publishing configuration for the user's company.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"rsid\": \"dolor ut commodo ullamco\",\n  \"dataSourceId\": 24120944,\n  \"traitFolderId\": 70975406,\n  \"segmentFolderId\": -96150962,\n  \"fullSyncInterval\": 16265603,\n  \"lastFullSync\": \"est\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reportsuites/:rsid/segmentpublishing?callrss=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reportsuites",
												":rsid",
												"segmentpublishing"
											],
											"query": [
												{
													"key": "callrss",
													"value": "true",
													"description": "Call Report Suite Service"
												}
											],
											"variable": [
												{
													"key": "rsid",
													"value": "aliqua",
													"description": "(Required) The rsid of the suite to update segment publishing configuration for"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reportsuites/:rsid/segmentpublishing?callrss=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reportsuites",
														":rsid",
														"segmentpublishing"
													],
													"query": [
														{
															"key": "callrss",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "rsid",
															"value": "aliqua",
															"description": "(Required) The rsid of the suite to update segment publishing configuration for"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"rsid\": \"dolor ut commodo ullamco\",\n  \"dataSourceId\": 24120944,\n  \"traitFolderId\": 70975406,\n  \"segmentFolderId\": -96150962,\n  \"fullSyncInterval\": 16265603,\n  \"lastFullSync\": \"est\"\n}"
										},
										{
											"name": "Unexpected error; update of segment publishing configuration failed due to an internal error",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reportsuites/:rsid/segmentpublishing?callrss=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reportsuites",
														":rsid",
														"segmentpublishing"
													],
													"query": [
														{
															"key": "callrss",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "rsid",
															"value": "aliqua",
															"description": "(Required) The rsid of the suite to update segment publishing configuration for"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Deletes a report suite's segment publishing configuration for the user's company.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reportsuites/:rsid/segmentpublishing?callrss=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reportsuites",
												":rsid",
												"segmentpublishing"
											],
											"query": [
												{
													"key": "callrss",
													"value": "true",
													"description": "Call Report Suite Service"
												}
											],
											"variable": [
												{
													"key": "rsid",
													"value": "aliqua",
													"description": "(Required) The rsid or numericRsid of the suite to return"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reportsuites/:rsid/segmentpublishing?callrss=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reportsuites",
														":rsid",
														"segmentpublishing"
													],
													"query": [
														{
															"key": "callrss",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "rsid",
															"value": "aliqua",
															"description": "(Required) The rsid or numericRsid of the suite to return"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"rsid\": \"dolor ut commodo ullamco\",\n  \"dataSourceId\": 24120944,\n  \"traitFolderId\": 70975406,\n  \"segmentFolderId\": -96150962,\n  \"fullSyncInterval\": 16265603,\n  \"lastFullSync\": \"est\"\n}"
										},
										{
											"name": "Unexpected error; delete of segment publishing configuration failed due to an internal error",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reportsuites/:rsid/segmentpublishing?callrss=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reportsuites",
														":rsid",
														"segmentpublishing"
													],
													"query": [
														{
															"key": "callrss",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "rsid",
															"value": "aliqua",
															"description": "(Required) The rsid or numericRsid of the suite to return"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "tnt",
							"item": [
								{
									"name": "Retrieves the TNT configuration for a single report suite.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reportsuites/:rsid/tnt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reportsuites",
												":rsid",
												"tnt"
											],
											"variable": [
												{
													"key": "rsid",
													"value": "aliqua",
													"description": "(Required) The rsid of the suite for which to retrieve TNT configuration"
												}
											]
										},
										"description": "tntExpireType values:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0  = Visit<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1  = Page View<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2  = Never<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3  = Minute<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4  = Hour<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5  = Day<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;6  = Week<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7  = Month<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;8  = Quarter<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;9  = Year<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10 = Purchase<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;11 = Product View<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;12 = Cart Open<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;13 = Cart Checkout<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;14 = Cart Add<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;15 = Cart Remove<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;16 = Cart View<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;17 = event1<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;18 = event2<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;19 = event3<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;etc...<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;116 = event100<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>tntAllocationType values:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 = Full<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 = Linear"
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reportsuites/:rsid/tnt",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reportsuites",
														":rsid",
														"tnt"
													],
													"variable": [
														{
															"key": "rsid",
															"value": "aliqua",
															"description": "(Required) The rsid of the suite for which to retrieve TNT configuration"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"tnt\": false,\n  \"tntExpireType\": 50821150,\n  \"tntExpirePeriods\": -51793030,\n  \"tntAllocationType\": -47341719,\n  \"tntA4tDateEnabled\": true,\n  \"tntClientCode\": \"incididunt ex cillum occaecat\"\n}"
										},
										{
											"name": "Unexpected error; retrieving TNT configuration failed due to an internal error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reportsuites/:rsid/tnt",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reportsuites",
														":rsid",
														"tnt"
													],
													"variable": [
														{
															"key": "rsid",
															"value": "aliqua",
															"description": "(Required) The rsid of the suite for which to retrieve TNT configuration"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Updates the tnt configuration for a single report suite.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"tnt\": false,\n  \"tntExpireType\": 50821150,\n  \"tntExpirePeriods\": -51793030,\n  \"tntAllocationType\": -47341719,\n  \"tntA4tDateEnabled\": true,\n  \"tntClientCode\": \"incididunt ex cillum occaecat\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reportsuites/:rsid/tnt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reportsuites",
												":rsid",
												"tnt"
											],
											"variable": [
												{
													"key": "rsid",
													"value": "aliqua",
													"description": "(Required) The rsid of the suite to update tnt configuration for"
												}
											]
										},
										"description": "tntExpireType values:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0  = Visit<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1  = Page View<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2  = Never<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3  = Minute<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4  = Hour<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5  = Day<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;6  = Week<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7  = Month<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;8  = Quarter<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;9  = Year<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10 = Purchase<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;11 = Product View<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;12 = Cart Open<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;13 = Cart Checkout<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;14 = Cart Add<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;15 = Cart Remove<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;16 = Cart View<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;17 = event1<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;18 = event2<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;19 = event3<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;etc...<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;116 = event100<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>tntAllocationType values:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 = Full<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 = Linear"
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tnt\": false,\n  \"tntExpireType\": 50821150,\n  \"tntExpirePeriods\": -51793030,\n  \"tntAllocationType\": -47341719,\n  \"tntA4tDateEnabled\": true,\n  \"tntClientCode\": \"incididunt ex cillum occaecat\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reportsuites/:rsid/tnt",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reportsuites",
														":rsid",
														"tnt"
													],
													"variable": [
														{
															"key": "rsid",
															"value": "aliqua",
															"description": "(Required) The rsid of the suite to update tnt configuration for"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"tnt\": false,\n  \"tntExpireType\": 50821150,\n  \"tntExpirePeriods\": -51793030,\n  \"tntAllocationType\": -47341719,\n  \"tntA4tDateEnabled\": true,\n  \"tntClientCode\": \"incididunt ex cillum occaecat\"\n}"
										},
										{
											"name": "Unexpected error; update of tnt configuration failed due to an internal error",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tnt\": false,\n  \"tntExpireType\": 50821150,\n  \"tntExpirePeriods\": -51793030,\n  \"tntAllocationType\": -47341719,\n  \"tntA4tDateEnabled\": true,\n  \"tntClientCode\": \"incididunt ex cillum occaecat\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reportsuites/:rsid/tnt",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reportsuites",
														":rsid",
														"tnt"
													],
													"variable": [
														{
															"key": "rsid",
															"value": "aliqua",
															"description": "(Required) The rsid of the suite to update tnt configuration for"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Retrieves report suite information for a single report suite.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/reportsuites/:rsid?expansion=reportSuiteName,timezoneZoneinfo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reportsuites",
										":rsid"
									],
									"query": [
										{
											"key": "expansion",
											"value": "reportSuiteName,timezoneZoneinfo",
											"description": "Comma-delimited list of additional attributes to include on response."
										}
									],
									"variable": [
										{
											"key": "rsid",
											"value": "aliqua",
											"description": "(Required) The rsid of the suite to return"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reportsuites/:rsid?expansion=tnt,tags",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reportsuites",
												":rsid"
											],
											"query": [
												{
													"key": "expansion",
													"value": "tnt,tags"
												}
											],
											"variable": [
												{
													"key": "rsid",
													"value": "aliqua",
													"description": "(Required) The rsid of the suite to return"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"rsid\": \"tempor exercitation nostrud laboris\",\n  \"numericRsid\": 73919700,\n  \"reportSuiteName\": \"nisi est magna in\",\n  \"active\": true,\n  \"baseUrl\": \"esse do Lorem\",\n  \"defaultPage\": \"aliqua\",\n  \"currency\": \"do reprehenderit \",\n  \"calendarAnchorDate\": \"1949-03-09T20:28:57.590Z\",\n  \"organization\": -80283519,\n  \"companyId\": 56608891,\n  \"billingCustomerId\": 71932544,\n  \"timezone\": 44761446,\n  \"timezoneZoneInfo\": \"officia adipisicing\",\n  \"stitchingEnabled\": true,\n  \"signedUpDate\": \"1951-03-26T22:16:04.078Z\",\n  \"lastModified\": \"2021-10-04T06:44:13.270Z\",\n  \"signedUpOurTime\": \"1983-02-13T19:01:48.761Z\",\n  \"saveAamIdValues\": true,\n  \"references\": {\n    \"companyUrl\": \"ullamco ipsum\",\n    \"billingCustomerUrl\": \"reprehenderit dolor ad cillum\"\n  },\n  \"calendarType\": {\n    \"rsid\": \"dolor nisi sed tempor\",\n    \"type\": \"CUSTOM_544\",\n    \"anchorDate\": \"2009-01-31T21:07:49.089Z\",\n    \"firstDayOfWeek\": 23455103,\n    \"firstMonthOfYear\": -25717721,\n    \"firstDayOfYear\": \"1945-07-27T19:13:26.098Z\",\n    \"anomalyYear\": \"Duis esse magna aliquip\"\n  },\n  \"axleConfig\": {\n    \"axleData\": true,\n    \"axleStart\": \"cillum irure\"\n  },\n  \"tntConfig\": {\n    \"tnt\": false,\n    \"tntExpireType\": 94052703,\n    \"tntExpirePeriods\": 81831191,\n    \"tntAllocationType\": -52633273,\n    \"tntA4tDateEnabled\": false,\n    \"tntClientCode\": \"nisi irure elit\"\n  },\n  \"ipObfuscationEnabled\": false,\n  \"type\": \"in et officia\",\n  \"currentTimezoneOffset\": 76535456.21586165,\n  \"numGroups\": 64001744,\n  \"isBlocked\": false,\n  \"taxonomist\": false,\n  \"mcAssociation\": {\n    \"imsOrgId\": \"ullamco nulla qu\",\n    \"rsid\": \"dolor in dolore\",\n    \"partnerId\": 21952781,\n    \"dataSourceId\": 10999589,\n    \"createUser\": \"ut voluptate laboris consectetur\",\n    \"createTimestamp\": \"1972-05-13T13:08:01.956Z\",\n    \"createdBySystem\": true,\n    \"updateTimestamp\": \"1959-12-30T20:38:54.413Z\",\n    \"dataCenter\": \"quis esse reprehenderit\"\n  },\n  \"mcAudiences\": {\n    \"enabled\": false\n  },\n  \"mcEstimatedClusters\": {\n    \"coopEnabled\": true,\n    \"rsid\": \"mollit non et\",\n    \"mcAssociation\": {\n      \"imsOrgId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"rsid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"partnerId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataSourceId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"createUser\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"createTimestamp\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"createdBySystem\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"updateTimestamp\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataCenter\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"estimatedPeople\": {\n      \"dataSourceId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"imsOrgIdsFromRelatedCompanies\": {\n    \"owningImsOrgId\": \"tempor dolor\",\n    \"relatedImsOrgIds\": [\n      \"consectetur nulla nisi dolor\",\n      \"velit sit\"\n    ]\n  },\n  \"relatedCompanies\": [\n    {\n      \"companyId\": -51796408,\n      \"name\": \"nostrud Duis amet ex labore\"\n    },\n    {\n      \"companyId\": 73629991,\n      \"name\": \"incididunt sint dolor eiusmod aliqua\"\n    }\n  ],\n  \"dataCurrentAsOf\": \"1945-12-18T17:36:12.731Z\",\n  \"enabledSolutions\": [\n    \"nulla consectetur pariatur eiusmod\",\n    \"non sit laboris occaecat aute\"\n  ],\n  \"timestampSupport\": \"REQUIRED\",\n  \"localizationEnabled\": true,\n  \"adCloudConfiguration\": {\n    \"dataSourcesId\": 8826703,\n    \"cidUrlParam\": \"esse cupidatat dolore non\",\n    \"secondaryRel\": 35798703\n  },\n  \"dataSchema\": \"proident sint do qui\",\n  \"customFilterGroups\": [\n    {\n      \"customGroupId\": 56867369,\n      \"customGroupName\": \"Excepteur id aute\"\n    },\n    {\n      \"customGroupId\": -59179980,\n      \"customGroupName\": \"deserunt nostrud\"\n    }\n  ],\n  \"dataRetentionSettings\": {\n    \"retentionStatus\": \"eiusmod dolore id\",\n    \"retentionMessage\": \"ut qui magna\",\n    \"getdWMonths\": 11431631,\n    \"fragSubRelMonths\": 89240648,\n    \"fragNonKeyMonths\": -76447640,\n    \"fragKeyMonths\": 23380365,\n    \"fragMonths\": 10416377\n  },\n  \"remoteLoading\": false,\n  \"activeDpc\": \"deserunt \",\n  \"aamServerSideForwarding\": true,\n  \"enablePkvdataDebugKey\": false,\n  \"referencedContextDataKeys\": [\n    \"do consequat cupidatat\",\n    \"voluptate ut dolore\"\n  ],\n  \"pipelineStreamingEnabled\": true,\n  \"pipelineBatchNotifyEnabled\": true,\n  \"tags\": [\n    {\n      \"consequat_a\": {}\n    },\n    {\n      \"officiaff\": {},\n      \"do_987\": {},\n      \"ea_b6\": {}\n    }\n  ],\n  \"shares\": [\n    {\n      \"amet_d3\": {}\n    },\n    {\n      \"incididunt__\": {},\n      \"quis0ab\": {},\n      \"occaecat_d\": {}\n    }\n  ],\n  \"approved\": true,\n  \"favorite\": true,\n  \"usageSummary\": {\n    \"laborum_7\": {}\n  },\n  \"isDeleted\": false,\n  \"parentRsid\": \"cillum\"\n}"
								},
								{
									"name": "Unexpected error; report suite retrieval failed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reportsuites/:rsid?expansion=tnt,tags",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reportsuites",
												":rsid"
											],
											"query": [
												{
													"key": "expansion",
													"value": "tnt,tags"
												}
											],
											"variable": [
												{
													"key": "rsid",
													"value": "aliqua",
													"description": "(Required) The rsid of the suite to return"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Updates report suite settings for the passed RSID.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"rsid\": \"tempor exercitation nostrud laboris\",\n  \"numericRsid\": 73919700,\n  \"reportSuiteName\": \"nisi est magna in\",\n  \"active\": true,\n  \"baseUrl\": \"esse do Lorem\",\n  \"defaultPage\": \"aliqua\",\n  \"currency\": \"do reprehenderit \",\n  \"calendarAnchorDate\": \"1949-03-09T20:28:57.590Z\",\n  \"organization\": -80283519,\n  \"companyId\": 56608891,\n  \"billingCustomerId\": 71932544,\n  \"timezone\": 44761446,\n  \"timezoneZoneInfo\": \"officia adipisicing\",\n  \"stitchingEnabled\": true,\n  \"signedUpDate\": \"1951-03-26T22:16:04.078Z\",\n  \"lastModified\": \"2021-10-04T06:44:13.270Z\",\n  \"signedUpOurTime\": \"1983-02-13T19:01:48.761Z\",\n  \"saveAamIdValues\": true,\n  \"references\": {\n    \"companyUrl\": \"ullamco ipsum\",\n    \"billingCustomerUrl\": \"reprehenderit dolor ad cillum\"\n  },\n  \"calendarType\": {\n    \"rsid\": \"dolor nisi sed tempor\",\n    \"type\": \"CUSTOM_544\",\n    \"anchorDate\": \"2009-01-31T21:07:49.089Z\",\n    \"firstDayOfWeek\": 23455103,\n    \"firstMonthOfYear\": -25717721,\n    \"firstDayOfYear\": \"1945-07-27T19:13:26.098Z\",\n    \"anomalyYear\": \"Duis esse magna aliquip\"\n  },\n  \"axleConfig\": {\n    \"axleData\": true,\n    \"axleStart\": \"cillum irure\"\n  },\n  \"tntConfig\": {\n    \"tnt\": false,\n    \"tntExpireType\": 94052703,\n    \"tntExpirePeriods\": 81831191,\n    \"tntAllocationType\": -52633273,\n    \"tntA4tDateEnabled\": false,\n    \"tntClientCode\": \"nisi irure elit\"\n  },\n  \"ipObfuscationEnabled\": false,\n  \"type\": \"in et officia\",\n  \"currentTimezoneOffset\": 76535456.21586165,\n  \"numGroups\": 64001744,\n  \"isBlocked\": false,\n  \"taxonomist\": false,\n  \"mcAssociation\": {\n    \"imsOrgId\": \"ullamco nulla qu\",\n    \"rsid\": \"dolor in dolore\",\n    \"partnerId\": 21952781,\n    \"dataSourceId\": 10999589,\n    \"createUser\": \"ut voluptate laboris consectetur\",\n    \"createTimestamp\": \"1972-05-13T13:08:01.956Z\",\n    \"createdBySystem\": true,\n    \"updateTimestamp\": \"1959-12-30T20:38:54.413Z\",\n    \"dataCenter\": \"quis esse reprehenderit\"\n  },\n  \"mcAudiences\": {\n    \"enabled\": false\n  },\n  \"mcEstimatedClusters\": {\n    \"coopEnabled\": true,\n    \"rsid\": \"mollit non et\",\n    \"mcAssociation\": {\n      \"imsOrgId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"rsid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"partnerId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataSourceId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"createUser\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"createTimestamp\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"createdBySystem\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"updateTimestamp\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataCenter\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"estimatedPeople\": {\n      \"dataSourceId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"imsOrgIdsFromRelatedCompanies\": {\n    \"owningImsOrgId\": \"tempor dolor\",\n    \"relatedImsOrgIds\": [\n      \"consectetur nulla nisi dolor\",\n      \"velit sit\"\n    ]\n  },\n  \"relatedCompanies\": [\n    {\n      \"companyId\": -51796408,\n      \"name\": \"nostrud Duis amet ex labore\"\n    },\n    {\n      \"companyId\": 73629991,\n      \"name\": \"incididunt sint dolor eiusmod aliqua\"\n    }\n  ],\n  \"dataCurrentAsOf\": \"1945-12-18T17:36:12.731Z\",\n  \"enabledSolutions\": [\n    \"nulla consectetur pariatur eiusmod\",\n    \"non sit laboris occaecat aute\"\n  ],\n  \"timestampSupport\": \"REQUIRED\",\n  \"localizationEnabled\": true,\n  \"adCloudConfiguration\": {\n    \"dataSourcesId\": 8826703,\n    \"cidUrlParam\": \"esse cupidatat dolore non\",\n    \"secondaryRel\": 35798703\n  },\n  \"dataSchema\": \"proident sint do qui\",\n  \"customFilterGroups\": [\n    {\n      \"customGroupId\": 56867369,\n      \"customGroupName\": \"Excepteur id aute\"\n    },\n    {\n      \"customGroupId\": -59179980,\n      \"customGroupName\": \"deserunt nostrud\"\n    }\n  ],\n  \"dataRetentionSettings\": {\n    \"retentionStatus\": \"eiusmod dolore id\",\n    \"retentionMessage\": \"ut qui magna\",\n    \"getdWMonths\": 11431631,\n    \"fragSubRelMonths\": 89240648,\n    \"fragNonKeyMonths\": -76447640,\n    \"fragKeyMonths\": 23380365,\n    \"fragMonths\": 10416377\n  },\n  \"remoteLoading\": false,\n  \"activeDpc\": \"deserunt \",\n  \"aamServerSideForwarding\": true,\n  \"enablePkvdataDebugKey\": false,\n  \"referencedContextDataKeys\": [\n    \"do consequat cupidatat\",\n    \"voluptate ut dolore\"\n  ],\n  \"pipelineStreamingEnabled\": true,\n  \"pipelineBatchNotifyEnabled\": true,\n  \"tags\": [\n    {\n      \"consequat_a\": {}\n    },\n    {\n      \"officiaff\": {},\n      \"do_987\": {},\n      \"ea_b6\": {}\n    }\n  ],\n  \"shares\": [\n    {\n      \"amet_d3\": {}\n    },\n    {\n      \"incididunt__\": {},\n      \"quis0ab\": {},\n      \"occaecat_d\": {}\n    }\n  ],\n  \"approved\": true,\n  \"favorite\": true,\n  \"usageSummary\": {\n    \"laborum_7\": {}\n  },\n  \"isDeleted\": false,\n  \"parentRsid\": \"cillum\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reportsuites/:rsid?expansion=reportSuiteName,timezoneZoneinfo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reportsuites",
										":rsid"
									],
									"query": [
										{
											"key": "expansion",
											"value": "reportSuiteName,timezoneZoneinfo",
											"description": "Comma-delimited list of additional attributes to include on response."
										}
									],
									"variable": [
										{
											"key": "rsid",
											"value": "aliqua",
											"description": "(Required) The rsid to be updated"
										}
									]
								},
								"description": "Only accepts pre-defined fields that are designated as editable; see sample JSON for field list"
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"rsid\": \"tempor exercitation nostrud laboris\",\n  \"numericRsid\": 73919700,\n  \"reportSuiteName\": \"nisi est magna in\",\n  \"active\": true,\n  \"baseUrl\": \"esse do Lorem\",\n  \"defaultPage\": \"aliqua\",\n  \"currency\": \"do reprehenderit \",\n  \"calendarAnchorDate\": \"1949-03-09T20:28:57.590Z\",\n  \"organization\": -80283519,\n  \"companyId\": 56608891,\n  \"billingCustomerId\": 71932544,\n  \"timezone\": 44761446,\n  \"timezoneZoneInfo\": \"officia adipisicing\",\n  \"stitchingEnabled\": true,\n  \"signedUpDate\": \"1951-03-26T22:16:04.078Z\",\n  \"lastModified\": \"2021-10-04T06:44:13.270Z\",\n  \"signedUpOurTime\": \"1983-02-13T19:01:48.761Z\",\n  \"saveAamIdValues\": true,\n  \"references\": {\n    \"companyUrl\": \"ullamco ipsum\",\n    \"billingCustomerUrl\": \"reprehenderit dolor ad cillum\"\n  },\n  \"calendarType\": {\n    \"rsid\": \"dolor nisi sed tempor\",\n    \"type\": \"CUSTOM_544\",\n    \"anchorDate\": \"2009-01-31T21:07:49.089Z\",\n    \"firstDayOfWeek\": 23455103,\n    \"firstMonthOfYear\": -25717721,\n    \"firstDayOfYear\": \"1945-07-27T19:13:26.098Z\",\n    \"anomalyYear\": \"Duis esse magna aliquip\"\n  },\n  \"axleConfig\": {\n    \"axleData\": true,\n    \"axleStart\": \"cillum irure\"\n  },\n  \"tntConfig\": {\n    \"tnt\": false,\n    \"tntExpireType\": 94052703,\n    \"tntExpirePeriods\": 81831191,\n    \"tntAllocationType\": -52633273,\n    \"tntA4tDateEnabled\": false,\n    \"tntClientCode\": \"nisi irure elit\"\n  },\n  \"ipObfuscationEnabled\": false,\n  \"type\": \"in et officia\",\n  \"currentTimezoneOffset\": 76535456.21586165,\n  \"numGroups\": 64001744,\n  \"isBlocked\": false,\n  \"taxonomist\": false,\n  \"mcAssociation\": {\n    \"imsOrgId\": \"ullamco nulla qu\",\n    \"rsid\": \"dolor in dolore\",\n    \"partnerId\": 21952781,\n    \"dataSourceId\": 10999589,\n    \"createUser\": \"ut voluptate laboris consectetur\",\n    \"createTimestamp\": \"1972-05-13T13:08:01.956Z\",\n    \"createdBySystem\": true,\n    \"updateTimestamp\": \"1959-12-30T20:38:54.413Z\",\n    \"dataCenter\": \"quis esse reprehenderit\"\n  },\n  \"mcAudiences\": {\n    \"enabled\": false\n  },\n  \"mcEstimatedClusters\": {\n    \"coopEnabled\": true,\n    \"rsid\": \"mollit non et\",\n    \"mcAssociation\": {\n      \"imsOrgId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"rsid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"partnerId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataSourceId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"createUser\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"createTimestamp\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"createdBySystem\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"updateTimestamp\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataCenter\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"estimatedPeople\": {\n      \"dataSourceId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"imsOrgIdsFromRelatedCompanies\": {\n    \"owningImsOrgId\": \"tempor dolor\",\n    \"relatedImsOrgIds\": [\n      \"consectetur nulla nisi dolor\",\n      \"velit sit\"\n    ]\n  },\n  \"relatedCompanies\": [\n    {\n      \"companyId\": -51796408,\n      \"name\": \"nostrud Duis amet ex labore\"\n    },\n    {\n      \"companyId\": 73629991,\n      \"name\": \"incididunt sint dolor eiusmod aliqua\"\n    }\n  ],\n  \"dataCurrentAsOf\": \"1945-12-18T17:36:12.731Z\",\n  \"enabledSolutions\": [\n    \"nulla consectetur pariatur eiusmod\",\n    \"non sit laboris occaecat aute\"\n  ],\n  \"timestampSupport\": \"REQUIRED\",\n  \"localizationEnabled\": true,\n  \"adCloudConfiguration\": {\n    \"dataSourcesId\": 8826703,\n    \"cidUrlParam\": \"esse cupidatat dolore non\",\n    \"secondaryRel\": 35798703\n  },\n  \"dataSchema\": \"proident sint do qui\",\n  \"customFilterGroups\": [\n    {\n      \"customGroupId\": 56867369,\n      \"customGroupName\": \"Excepteur id aute\"\n    },\n    {\n      \"customGroupId\": -59179980,\n      \"customGroupName\": \"deserunt nostrud\"\n    }\n  ],\n  \"dataRetentionSettings\": {\n    \"retentionStatus\": \"eiusmod dolore id\",\n    \"retentionMessage\": \"ut qui magna\",\n    \"getdWMonths\": 11431631,\n    \"fragSubRelMonths\": 89240648,\n    \"fragNonKeyMonths\": -76447640,\n    \"fragKeyMonths\": 23380365,\n    \"fragMonths\": 10416377\n  },\n  \"remoteLoading\": false,\n  \"activeDpc\": \"deserunt \",\n  \"aamServerSideForwarding\": true,\n  \"enablePkvdataDebugKey\": false,\n  \"referencedContextDataKeys\": [\n    \"do consequat cupidatat\",\n    \"voluptate ut dolore\"\n  ],\n  \"pipelineStreamingEnabled\": true,\n  \"pipelineBatchNotifyEnabled\": true,\n  \"tags\": [\n    {\n      \"consequat_a\": {}\n    },\n    {\n      \"officiaff\": {},\n      \"do_987\": {},\n      \"ea_b6\": {}\n    }\n  ],\n  \"shares\": [\n    {\n      \"amet_d3\": {}\n    },\n    {\n      \"incididunt__\": {},\n      \"quis0ab\": {},\n      \"occaecat_d\": {}\n    }\n  ],\n  \"approved\": true,\n  \"favorite\": true,\n  \"usageSummary\": {\n    \"laborum_7\": {}\n  },\n  \"isDeleted\": false,\n  \"parentRsid\": \"cillum\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reportsuites/:rsid?expansion=tnt,tags",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reportsuites",
												":rsid"
											],
											"query": [
												{
													"key": "expansion",
													"value": "tnt,tags"
												}
											],
											"variable": [
												{
													"key": "rsid",
													"value": "aliqua",
													"description": "(Required) The rsid to be updated"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"rsid\": \"tempor exercitation nostrud laboris\",\n  \"numericRsid\": 73919700,\n  \"reportSuiteName\": \"nisi est magna in\",\n  \"active\": true,\n  \"baseUrl\": \"esse do Lorem\",\n  \"defaultPage\": \"aliqua\",\n  \"currency\": \"do reprehenderit \",\n  \"calendarAnchorDate\": \"1949-03-09T20:28:57.590Z\",\n  \"organization\": -80283519,\n  \"companyId\": 56608891,\n  \"billingCustomerId\": 71932544,\n  \"timezone\": 44761446,\n  \"timezoneZoneInfo\": \"officia adipisicing\",\n  \"stitchingEnabled\": true,\n  \"signedUpDate\": \"1951-03-26T22:16:04.078Z\",\n  \"lastModified\": \"2021-10-04T06:44:13.270Z\",\n  \"signedUpOurTime\": \"1983-02-13T19:01:48.761Z\",\n  \"saveAamIdValues\": true,\n  \"references\": {\n    \"companyUrl\": \"ullamco ipsum\",\n    \"billingCustomerUrl\": \"reprehenderit dolor ad cillum\"\n  },\n  \"calendarType\": {\n    \"rsid\": \"dolor nisi sed tempor\",\n    \"type\": \"CUSTOM_544\",\n    \"anchorDate\": \"2009-01-31T21:07:49.089Z\",\n    \"firstDayOfWeek\": 23455103,\n    \"firstMonthOfYear\": -25717721,\n    \"firstDayOfYear\": \"1945-07-27T19:13:26.098Z\",\n    \"anomalyYear\": \"Duis esse magna aliquip\"\n  },\n  \"axleConfig\": {\n    \"axleData\": true,\n    \"axleStart\": \"cillum irure\"\n  },\n  \"tntConfig\": {\n    \"tnt\": false,\n    \"tntExpireType\": 94052703,\n    \"tntExpirePeriods\": 81831191,\n    \"tntAllocationType\": -52633273,\n    \"tntA4tDateEnabled\": false,\n    \"tntClientCode\": \"nisi irure elit\"\n  },\n  \"ipObfuscationEnabled\": false,\n  \"type\": \"in et officia\",\n  \"currentTimezoneOffset\": 76535456.21586165,\n  \"numGroups\": 64001744,\n  \"isBlocked\": false,\n  \"taxonomist\": false,\n  \"mcAssociation\": {\n    \"imsOrgId\": \"ullamco nulla qu\",\n    \"rsid\": \"dolor in dolore\",\n    \"partnerId\": 21952781,\n    \"dataSourceId\": 10999589,\n    \"createUser\": \"ut voluptate laboris consectetur\",\n    \"createTimestamp\": \"1972-05-13T13:08:01.956Z\",\n    \"createdBySystem\": true,\n    \"updateTimestamp\": \"1959-12-30T20:38:54.413Z\",\n    \"dataCenter\": \"quis esse reprehenderit\"\n  },\n  \"mcAudiences\": {\n    \"enabled\": false\n  },\n  \"mcEstimatedClusters\": {\n    \"coopEnabled\": true,\n    \"rsid\": \"mollit non et\",\n    \"mcAssociation\": {\n      \"imsOrgId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"rsid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"partnerId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataSourceId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"createUser\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"createTimestamp\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"createdBySystem\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"updateTimestamp\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataCenter\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"estimatedPeople\": {\n      \"dataSourceId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"imsOrgIdsFromRelatedCompanies\": {\n    \"owningImsOrgId\": \"tempor dolor\",\n    \"relatedImsOrgIds\": [\n      \"consectetur nulla nisi dolor\",\n      \"velit sit\"\n    ]\n  },\n  \"relatedCompanies\": [\n    {\n      \"companyId\": -51796408,\n      \"name\": \"nostrud Duis amet ex labore\"\n    },\n    {\n      \"companyId\": 73629991,\n      \"name\": \"incididunt sint dolor eiusmod aliqua\"\n    }\n  ],\n  \"dataCurrentAsOf\": \"1945-12-18T17:36:12.731Z\",\n  \"enabledSolutions\": [\n    \"nulla consectetur pariatur eiusmod\",\n    \"non sit laboris occaecat aute\"\n  ],\n  \"timestampSupport\": \"REQUIRED\",\n  \"localizationEnabled\": true,\n  \"adCloudConfiguration\": {\n    \"dataSourcesId\": 8826703,\n    \"cidUrlParam\": \"esse cupidatat dolore non\",\n    \"secondaryRel\": 35798703\n  },\n  \"dataSchema\": \"proident sint do qui\",\n  \"customFilterGroups\": [\n    {\n      \"customGroupId\": 56867369,\n      \"customGroupName\": \"Excepteur id aute\"\n    },\n    {\n      \"customGroupId\": -59179980,\n      \"customGroupName\": \"deserunt nostrud\"\n    }\n  ],\n  \"dataRetentionSettings\": {\n    \"retentionStatus\": \"eiusmod dolore id\",\n    \"retentionMessage\": \"ut qui magna\",\n    \"getdWMonths\": 11431631,\n    \"fragSubRelMonths\": 89240648,\n    \"fragNonKeyMonths\": -76447640,\n    \"fragKeyMonths\": 23380365,\n    \"fragMonths\": 10416377\n  },\n  \"remoteLoading\": false,\n  \"activeDpc\": \"deserunt \",\n  \"aamServerSideForwarding\": true,\n  \"enablePkvdataDebugKey\": false,\n  \"referencedContextDataKeys\": [\n    \"do consequat cupidatat\",\n    \"voluptate ut dolore\"\n  ],\n  \"pipelineStreamingEnabled\": true,\n  \"pipelineBatchNotifyEnabled\": true,\n  \"tags\": [\n    {\n      \"consequat_a\": {}\n    },\n    {\n      \"officiaff\": {},\n      \"do_987\": {},\n      \"ea_b6\": {}\n    }\n  ],\n  \"shares\": [\n    {\n      \"amet_d3\": {}\n    },\n    {\n      \"incididunt__\": {},\n      \"quis0ab\": {},\n      \"occaecat_d\": {}\n    }\n  ],\n  \"approved\": true,\n  \"favorite\": true,\n  \"usageSummary\": {\n    \"laborum_7\": {}\n  },\n  \"isDeleted\": false,\n  \"parentRsid\": \"cillum\"\n}"
								},
								{
									"name": "Unexpected error; update of reportsuite failed due to an internal error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"rsid\": \"tempor exercitation nostrud laboris\",\n  \"numericRsid\": 73919700,\n  \"reportSuiteName\": \"nisi est magna in\",\n  \"active\": true,\n  \"baseUrl\": \"esse do Lorem\",\n  \"defaultPage\": \"aliqua\",\n  \"currency\": \"do reprehenderit \",\n  \"calendarAnchorDate\": \"1949-03-09T20:28:57.590Z\",\n  \"organization\": -80283519,\n  \"companyId\": 56608891,\n  \"billingCustomerId\": 71932544,\n  \"timezone\": 44761446,\n  \"timezoneZoneInfo\": \"officia adipisicing\",\n  \"stitchingEnabled\": true,\n  \"signedUpDate\": \"1951-03-26T22:16:04.078Z\",\n  \"lastModified\": \"2021-10-04T06:44:13.270Z\",\n  \"signedUpOurTime\": \"1983-02-13T19:01:48.761Z\",\n  \"saveAamIdValues\": true,\n  \"references\": {\n    \"companyUrl\": \"ullamco ipsum\",\n    \"billingCustomerUrl\": \"reprehenderit dolor ad cillum\"\n  },\n  \"calendarType\": {\n    \"rsid\": \"dolor nisi sed tempor\",\n    \"type\": \"CUSTOM_544\",\n    \"anchorDate\": \"2009-01-31T21:07:49.089Z\",\n    \"firstDayOfWeek\": 23455103,\n    \"firstMonthOfYear\": -25717721,\n    \"firstDayOfYear\": \"1945-07-27T19:13:26.098Z\",\n    \"anomalyYear\": \"Duis esse magna aliquip\"\n  },\n  \"axleConfig\": {\n    \"axleData\": true,\n    \"axleStart\": \"cillum irure\"\n  },\n  \"tntConfig\": {\n    \"tnt\": false,\n    \"tntExpireType\": 94052703,\n    \"tntExpirePeriods\": 81831191,\n    \"tntAllocationType\": -52633273,\n    \"tntA4tDateEnabled\": false,\n    \"tntClientCode\": \"nisi irure elit\"\n  },\n  \"ipObfuscationEnabled\": false,\n  \"type\": \"in et officia\",\n  \"currentTimezoneOffset\": 76535456.21586165,\n  \"numGroups\": 64001744,\n  \"isBlocked\": false,\n  \"taxonomist\": false,\n  \"mcAssociation\": {\n    \"imsOrgId\": \"ullamco nulla qu\",\n    \"rsid\": \"dolor in dolore\",\n    \"partnerId\": 21952781,\n    \"dataSourceId\": 10999589,\n    \"createUser\": \"ut voluptate laboris consectetur\",\n    \"createTimestamp\": \"1972-05-13T13:08:01.956Z\",\n    \"createdBySystem\": true,\n    \"updateTimestamp\": \"1959-12-30T20:38:54.413Z\",\n    \"dataCenter\": \"quis esse reprehenderit\"\n  },\n  \"mcAudiences\": {\n    \"enabled\": false\n  },\n  \"mcEstimatedClusters\": {\n    \"coopEnabled\": true,\n    \"rsid\": \"mollit non et\",\n    \"mcAssociation\": {\n      \"imsOrgId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"rsid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"partnerId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataSourceId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"createUser\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"createTimestamp\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"createdBySystem\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"updateTimestamp\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataCenter\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"estimatedPeople\": {\n      \"dataSourceId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"imsOrgIdsFromRelatedCompanies\": {\n    \"owningImsOrgId\": \"tempor dolor\",\n    \"relatedImsOrgIds\": [\n      \"consectetur nulla nisi dolor\",\n      \"velit sit\"\n    ]\n  },\n  \"relatedCompanies\": [\n    {\n      \"companyId\": -51796408,\n      \"name\": \"nostrud Duis amet ex labore\"\n    },\n    {\n      \"companyId\": 73629991,\n      \"name\": \"incididunt sint dolor eiusmod aliqua\"\n    }\n  ],\n  \"dataCurrentAsOf\": \"1945-12-18T17:36:12.731Z\",\n  \"enabledSolutions\": [\n    \"nulla consectetur pariatur eiusmod\",\n    \"non sit laboris occaecat aute\"\n  ],\n  \"timestampSupport\": \"REQUIRED\",\n  \"localizationEnabled\": true,\n  \"adCloudConfiguration\": {\n    \"dataSourcesId\": 8826703,\n    \"cidUrlParam\": \"esse cupidatat dolore non\",\n    \"secondaryRel\": 35798703\n  },\n  \"dataSchema\": \"proident sint do qui\",\n  \"customFilterGroups\": [\n    {\n      \"customGroupId\": 56867369,\n      \"customGroupName\": \"Excepteur id aute\"\n    },\n    {\n      \"customGroupId\": -59179980,\n      \"customGroupName\": \"deserunt nostrud\"\n    }\n  ],\n  \"dataRetentionSettings\": {\n    \"retentionStatus\": \"eiusmod dolore id\",\n    \"retentionMessage\": \"ut qui magna\",\n    \"getdWMonths\": 11431631,\n    \"fragSubRelMonths\": 89240648,\n    \"fragNonKeyMonths\": -76447640,\n    \"fragKeyMonths\": 23380365,\n    \"fragMonths\": 10416377\n  },\n  \"remoteLoading\": false,\n  \"activeDpc\": \"deserunt \",\n  \"aamServerSideForwarding\": true,\n  \"enablePkvdataDebugKey\": false,\n  \"referencedContextDataKeys\": [\n    \"do consequat cupidatat\",\n    \"voluptate ut dolore\"\n  ],\n  \"pipelineStreamingEnabled\": true,\n  \"pipelineBatchNotifyEnabled\": true,\n  \"tags\": [\n    {\n      \"consequat_a\": {}\n    },\n    {\n      \"officiaff\": {},\n      \"do_987\": {},\n      \"ea_b6\": {}\n    }\n  ],\n  \"shares\": [\n    {\n      \"amet_d3\": {}\n    },\n    {\n      \"incididunt__\": {},\n      \"quis0ab\": {},\n      \"occaecat_d\": {}\n    }\n  ],\n  \"approved\": true,\n  \"favorite\": true,\n  \"usageSummary\": {\n    \"laborum_7\": {}\n  },\n  \"isDeleted\": false,\n  \"parentRsid\": \"cillum\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reportsuites/:rsid?expansion=tnt,tags",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reportsuites",
												":rsid"
											],
											"query": [
												{
													"key": "expansion",
													"value": "tnt,tags"
												}
											],
											"variable": [
												{
													"key": "rsid",
													"value": "aliqua",
													"description": "(Required) The rsid to be updated"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieves calendar type for a single report suite.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/reportsuites/:rsid/calendartype",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reportsuites",
										":rsid",
										"calendartype"
									],
									"variable": [
										{
											"key": "rsid",
											"value": "aliqua",
											"description": "(Required) rsid"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reportsuites/:rsid/calendartype",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reportsuites",
												":rsid",
												"calendartype"
											],
											"variable": [
												{
													"key": "rsid",
													"value": "aliqua",
													"description": "(Required) rsid"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"rsid\": \"sunt aliquip\",\n  \"type\": \"NRF\",\n  \"anchorDate\": \"1957-10-31T11:45:03.981Z\",\n  \"firstDayOfWeek\": 90624600,\n  \"firstMonthOfYear\": -62149488,\n  \"firstDayOfYear\": \"1970-10-21T04:05:39.538Z\",\n  \"anomalyYear\": \"ad proident et\"\n}"
								},
								{
									"name": "Unexpected error; retrieval of report suite calendar type failed due to an internal error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reportsuites/:rsid/calendartype",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reportsuites",
												":rsid",
												"calendartype"
											],
											"variable": [
												{
													"key": "rsid",
													"value": "aliqua",
													"description": "(Required) rsid"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "mcassociations",
					"item": [
						{
							"name": "Retrieve RSID by data source Id",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/reportsuites/mcassociations?dataSourceId=aliqua&limit=10&page=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reportsuites",
										"mcassociations"
									],
									"query": [
										{
											"key": "dataSourceId",
											"value": "aliqua",
											"description": "(Required) data source id"
										},
										{
											"key": "limit",
											"value": "10",
											"description": "Number of results per page"
										},
										{
											"key": "page",
											"value": "0",
											"description": "Page number (base 0 - first page is \"0\")"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reportsuites/mcassociations?dataSourceId=aliqua&limit=10&page=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reportsuites",
												"mcassociations"
											],
											"query": [
												{
													"key": "dataSourceId",
													"value": "aliqua"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "0"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"imsOrgId\": \"Duis Ut est labore\",\n  \"rsid\": \"elit\",\n  \"partnerId\": 51665416,\n  \"dataSourceId\": -12700750,\n  \"createUser\": \"nisi Duis qui aliqua\",\n  \"createTimestamp\": \"1961-04-07T10:38:50.144Z\",\n  \"createdBySystem\": true,\n  \"updateTimestamp\": \"1994-07-29T11:35:00.498Z\",\n  \"dataCenter\": \"laborum dolor velit aliquip pariatur\"\n}"
								},
								{
									"name": "Internal error while fetching mcassociation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reportsuites/mcassociations?dataSourceId=aliqua&limit=10&page=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reportsuites",
												"mcassociations"
											],
											"query": [
												{
													"key": "dataSourceId",
													"value": "aliqua"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "0"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"cause\": {\n    \"cause\": {\n      \"value\": \"<Circular reference to #/components/schemas/Throwable detected>\"\n    },\n    \"stackTrace\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"dolor\",\n    \"suppressed\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/Throwable detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/Throwable detected>\"\n      }\n    ],\n    \"localizedMessage\": \"aliquip enim culpa\"\n  },\n  \"stackTrace\": [\n    {\n      \"classLoaderName\": \"id quis c\",\n      \"moduleName\": \"cupidatat ad qui amet\",\n      \"moduleVersion\": \"reprehenderit\",\n      \"methodName\": \"laboris fugiat\",\n      \"fileName\": \"deserunt aute nulla\",\n      \"lineNumber\": 67515214,\n      \"className\": \"adipisic\",\n      \"nativeMethod\": true\n    },\n    {\n      \"classLoaderName\": \"ex reprehenderit dolor dolore\",\n      \"moduleName\": \"consequat sint nisi anim qui\",\n      \"moduleVersion\": \"quis culpa\",\n      \"methodName\": \"sunt minim est\",\n      \"fileName\": \"ad fugiat\",\n      \"lineNumber\": 96129122,\n      \"className\": \"do ullamco \",\n      \"nativeMethod\": false\n    }\n  ],\n  \"response\": {\n    \"cookies\": {\n      \"fugiat_d99\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"occaecat_11e\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"anim_8d\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"mediaType\": {\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"subtype\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"parameters\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"wildcardType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"wildcardSubtype\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"date\": \"1969-12-13T13:28:04.586Z\",\n    \"lastModified\": \"2017-02-07T15:51:25.284Z\",\n    \"headers\": {\n      \"do94\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"entity\": {},\n    \"metadata\": {\n      \"id_75\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"status\": 29533430,\n    \"stringHeaders\": {\n      \"magna86\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"ullamco9\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"statusInfo\": {\n      \"reasonPhrase\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"family\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"statusCode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"allowedMethods\": [\n      \"sunt velit\",\n      \"dolore in fugiat\"\n    ],\n    \"entityTag\": {\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"weak\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"links\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"length\": 36804756,\n    \"location\": \"https://NVYSDfXWINJSXLAtXy.nkpkXojimGCE,Bb88jkXFluPCb+lRrI3ZArS.uQLXqI.GTn-ZJFMqsU9p\",\n    \"language\": {\n      \"script\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"country\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"variant\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"extensionKeys\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"unicodeLocaleAttributes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"unicodeLocaleKeys\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"iso3Language\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"iso3Country\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"displayLanguage\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"displayScript\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"displayCountry\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"displayVariant\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"displayName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"language\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"error\": {\n    \"logLevel\": {\n      \"levelInt\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"levelStr\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"statusCode\": -47420972,\n    \"errorCode\": \"n\"\n  },\n  \"errorDescription\": \"aliqua voluptate reprehenderit\",\n  \"serviceErrorStatus\": {\n    \"errorCode\": \"method_not_allowed\",\n    \"errorDescription\": \"officia aute nulla\",\n    \"errorId\": \"anim ea ut\",\n    \"errorDetails\": {\n      \"tempor_b3\": {}\n    },\n    \"rootCauseService\": \"enim qui\"\n  },\n  \"message\": \"velit exercitation\",\n  \"suppressed\": [\n    {\n      \"cause\": {\n        \"value\": \"<Circular reference to #/components/schemas/Throwable detected>\"\n      },\n      \"stackTrace\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"message\": \"aliqua\",\n      \"suppressed\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localizedMessage\": \"esse\"\n    },\n    {\n      \"cause\": {\n        \"value\": \"<Circular reference to #/components/schemas/Throwable detected>\"\n      },\n      \"stackTrace\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"message\": \"tempor est e\",\n      \"suppressed\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localizedMessage\": \"officia magna\"\n    }\n  ],\n  \"localizedMessage\": \"culpa\"\n}"
								}
							]
						},
						{
							"name": "Batch endpoint to notify analytics that multiple mcAssociations have been created ",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"imsOrgId\": \"ipsum labore nostrud nulla nisi\",\n    \"rsid\": \"voluptate dolor\",\n    \"partnerId\": -42568749,\n    \"dataSourceId\": 75437725,\n    \"createUser\": \"consectetur dolore\",\n    \"createTimestamp\": \"2004-07-04T04:02:36.023Z\",\n    \"createdBySystem\": true,\n    \"updateTimestamp\": \"1959-08-25T18:12:09.858Z\",\n    \"dataCenter\": \"eu veniam ea\"\n  },\n  {\n    \"imsOrgId\": \"Excepteur veniam dolore mollit\",\n    \"rsid\": \"Ut Excepteur ad anim\",\n    \"partnerId\": 80233825,\n    \"dataSourceId\": -65327557,\n    \"createUser\": \"tempor amet est enim velit\",\n    \"createTimestamp\": \"1998-09-05T17:06:29.499Z\",\n    \"createdBySystem\": true,\n    \"updateTimestamp\": \"1979-11-03T14:03:45.511Z\",\n    \"dataCenter\": \"culpa\"\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reportsuites/mcassociations/batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reportsuites",
										"mcassociations",
										"batch"
									]
								},
								"description": "This endpoint allows you to notify analytics that multiple reportsuites have been associated with IMS Organizations"
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"imsOrgId\": \"sunt magna aute sed\",\n    \"rsid\": \"do id nulla\",\n    \"partnerId\": 49189105,\n    \"dataSourceId\": -55163097,\n    \"createUser\": \"aute culpa anim ut\",\n    \"createTimestamp\": \"1978-01-03T13:09:03.722Z\",\n    \"createdBySystem\": false,\n    \"updateTimestamp\": \"2019-11-20T05:32:09.375Z\",\n    \"dataCenter\": \"id nisi\"\n  },\n  {\n    \"imsOrgId\": \"do culpa reprehenderit laboris\",\n    \"rsid\": \"voluptate dolor incididunt id\",\n    \"partnerId\": 2681438,\n    \"dataSourceId\": 17938043,\n    \"createUser\": \"sunt aliqua\",\n    \"createTimestamp\": \"1945-08-18T21:37:16.894Z\",\n    \"createdBySystem\": false,\n    \"updateTimestamp\": \"1994-11-18T13:59:58.999Z\",\n    \"dataCenter\": \"s\"\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reportsuites/mcassociations/batch",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reportsuites",
												"mcassociations",
												"batch"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"imsOrgId\": \"Duis Ut est labore\",\n  \"rsid\": \"elit\",\n  \"partnerId\": 51665416,\n  \"dataSourceId\": -12700750,\n  \"createUser\": \"nisi Duis qui aliqua\",\n  \"createTimestamp\": \"1961-04-07T10:38:50.144Z\",\n  \"createdBySystem\": true,\n  \"updateTimestamp\": \"1994-07-29T11:35:00.498Z\",\n  \"dataCenter\": \"laborum dolor velit aliquip pariatur\"\n}"
								},
								{
									"name": "Multiple status",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"imsOrgId\": \"sunt magna aute sed\",\n    \"rsid\": \"do id nulla\",\n    \"partnerId\": 49189105,\n    \"dataSourceId\": -55163097,\n    \"createUser\": \"aute culpa anim ut\",\n    \"createTimestamp\": \"1978-01-03T13:09:03.722Z\",\n    \"createdBySystem\": false,\n    \"updateTimestamp\": \"2019-11-20T05:32:09.375Z\",\n    \"dataCenter\": \"id nisi\"\n  },\n  {\n    \"imsOrgId\": \"do culpa reprehenderit laboris\",\n    \"rsid\": \"voluptate dolor incididunt id\",\n    \"partnerId\": 2681438,\n    \"dataSourceId\": 17938043,\n    \"createUser\": \"sunt aliqua\",\n    \"createTimestamp\": \"1945-08-18T21:37:16.894Z\",\n    \"createdBySystem\": false,\n    \"updateTimestamp\": \"1994-11-18T13:59:58.999Z\",\n    \"dataCenter\": \"s\"\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reportsuites/mcassociations/batch",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reportsuites",
												"mcassociations",
												"batch"
											]
										}
									},
									"status": "Multi-Status (WebDAV) (RFC 4918)",
									"code": 207,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[]"
								},
								{
									"name": "Insufficient access to set batch associations, i.e. the user does not belong to the company owning the rsid or is not an admin",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"imsOrgId\": \"sunt magna aute sed\",\n    \"rsid\": \"do id nulla\",\n    \"partnerId\": 49189105,\n    \"dataSourceId\": -55163097,\n    \"createUser\": \"aute culpa anim ut\",\n    \"createTimestamp\": \"1978-01-03T13:09:03.722Z\",\n    \"createdBySystem\": false,\n    \"updateTimestamp\": \"2019-11-20T05:32:09.375Z\",\n    \"dataCenter\": \"id nisi\"\n  },\n  {\n    \"imsOrgId\": \"do culpa reprehenderit laboris\",\n    \"rsid\": \"voluptate dolor incididunt id\",\n    \"partnerId\": 2681438,\n    \"dataSourceId\": 17938043,\n    \"createUser\": \"sunt aliqua\",\n    \"createTimestamp\": \"1945-08-18T21:37:16.894Z\",\n    \"createdBySystem\": false,\n    \"updateTimestamp\": \"1994-11-18T13:59:58.999Z\",\n    \"dataCenter\": \"s\"\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reportsuites/mcassociations/batch",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reportsuites",
												"mcassociations",
												"batch"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"io_error\",\n  \"errorDescription\": \"reprehenderit sit aliqua\",\n  \"errorId\": \"magna\",\n  \"errorDetails\": {\n    \"velitf00\": {}\n  },\n  \"rootCauseService\": \"eu tempor ullamco ipsum\"\n}"
								},
								{
									"name": "Internal error while executing the request, it is unknown what associations were successful",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"imsOrgId\": \"sunt magna aute sed\",\n    \"rsid\": \"do id nulla\",\n    \"partnerId\": 49189105,\n    \"dataSourceId\": -55163097,\n    \"createUser\": \"aute culpa anim ut\",\n    \"createTimestamp\": \"1978-01-03T13:09:03.722Z\",\n    \"createdBySystem\": false,\n    \"updateTimestamp\": \"2019-11-20T05:32:09.375Z\",\n    \"dataCenter\": \"id nisi\"\n  },\n  {\n    \"imsOrgId\": \"do culpa reprehenderit laboris\",\n    \"rsid\": \"voluptate dolor incididunt id\",\n    \"partnerId\": 2681438,\n    \"dataSourceId\": 17938043,\n    \"createUser\": \"sunt aliqua\",\n    \"createTimestamp\": \"1945-08-18T21:37:16.894Z\",\n    \"createdBySystem\": false,\n    \"updateTimestamp\": \"1994-11-18T13:59:58.999Z\",\n    \"dataCenter\": \"s\"\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reportsuites/mcassociations/batch",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reportsuites",
												"mcassociations",
												"batch"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"io_error\",\n  \"errorDescription\": \"reprehenderit sit aliqua\",\n  \"errorId\": \"magna\",\n  \"errorDetails\": {\n    \"velitf00\": {}\n  },\n  \"rootCauseService\": \"eu tempor ullamco ipsum\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Retrieves report suites that match the given filters.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/reportsuites?expansion=reportSuiteName,timezoneZoneinfo&permission=aliqua&rsids=aliqua&mcAssociations=exclude&mcAudiences=exclude&relevantOnly=false&cached=true&types=urs,urs&rsidContains=aliqua&rsidOrNameContains=aliqua&mcAssociatedImsOrgId=aliqua&companyName=aliqua&enabledSolutions=aliqua&limit=10&page=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reportsuites"
							],
							"query": [
								{
									"key": "expansion",
									"value": "reportSuiteName,timezoneZoneinfo",
									"description": "Comma-delimited list of additional report suite metadata fields to include on response."
								},
								{
									"key": "permission",
									"value": "aliqua",
									"description": "Filter list to only include suites that have this permission."
								},
								{
									"key": "rsids",
									"value": "aliqua",
									"description": "Filter list to only include suites in this RSID list (comma-delimited)"
								},
								{
									"key": "mcAssociations",
									"value": "exclude",
									"description": "Filter list to include or exclude suites that have MC Associations."
								},
								{
									"key": "mcAudiences",
									"value": "exclude",
									"description": "Filter list to include or exclude suites that are configured for MC Audiences."
								},
								{
									"key": "relevantOnly",
									"value": "false",
									"description": "Return only report suites that are considered recent."
								},
								{
									"key": "cached",
									"value": "true",
									"description": "return cached results"
								},
								{
									"key": "types",
									"value": "urs,urs",
									"description": "Comma-delimited list of types of report suites to return.  No selection returns all types."
								},
								{
									"key": "rsidContains",
									"value": "aliqua",
									"description": "Filter list to only include suites whose rsid contains rsidContains."
								},
								{
									"key": "rsidOrNameContains",
									"value": "aliqua",
									"description": "Filter list to only include suites whose rsid or report suite name contains rsidOrNameContains."
								},
								{
									"key": "mcAssociatedImsOrgId",
									"value": "aliqua",
									"description": "Filter list to only include suites that are associated with the IMS Org ID specified in mcAssociatedImsOrgId"
								},
								{
									"key": "companyName",
									"value": "aliqua",
									"description": "Filter list to only include suites associated to the company with this companyName.  This parameter is only allowed with service tokens."
								},
								{
									"key": "enabledSolutions",
									"value": "aliqua",
									"description": "Filter reportsuites by enabled solutions. Comma deliminated list of solution names"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Number of results per page"
								},
								{
									"key": "page",
									"value": "0",
									"description": "Page number (base 0 - first page is \"0\")"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/reportsuites?expansion=tnt,tags&permission=aliqua&rsids=aliqua&mcAssociations=exclude&mcAudiences=exclude&relevantOnly=false&cached=true&types=rollup,rollup&rsidContains=aliqua&rsidOrNameContains=aliqua&mcAssociatedImsOrgId=aliqua&companyName=aliqua&enabledSolutions=aliqua&limit=10&page=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reportsuites"
									],
									"query": [
										{
											"key": "expansion",
											"value": "tnt,tags"
										},
										{
											"key": "permission",
											"value": "aliqua"
										},
										{
											"key": "rsids",
											"value": "aliqua"
										},
										{
											"key": "mcAssociations",
											"value": "exclude"
										},
										{
											"key": "mcAudiences",
											"value": "exclude"
										},
										{
											"key": "relevantOnly",
											"value": "false"
										},
										{
											"key": "cached",
											"value": "true"
										},
										{
											"key": "types",
											"value": "rollup,rollup"
										},
										{
											"key": "rsidContains",
											"value": "aliqua"
										},
										{
											"key": "rsidOrNameContains",
											"value": "aliqua"
										},
										{
											"key": "mcAssociatedImsOrgId",
											"value": "aliqua"
										},
										{
											"key": "companyName",
											"value": "aliqua"
										},
										{
											"key": "enabledSolutions",
											"value": "aliqua"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"rsid\": \"elit sint\",\n  \"numericRsid\": -5144699,\n  \"reportSuiteName\": \"culpa fugiat cillum\",\n  \"active\": true,\n  \"baseUrl\": \"u\",\n  \"defaultPage\": \"dolor\",\n  \"currency\": \"adipisicing\",\n  \"calendarAnchorDate\": \"1953-02-12T08:36:25.355Z\",\n  \"organization\": 49394149,\n  \"companyId\": 61152322,\n  \"billingCustomerId\": 19289098,\n  \"timezone\": 34438517,\n  \"timezoneZoneInfo\": \"d\",\n  \"stitchingEnabled\": true,\n  \"signedUpDate\": \"1970-07-15T23:17:37.357Z\",\n  \"lastModified\": \"1973-06-27T21:46:39.558Z\",\n  \"signedUpOurTime\": \"1973-09-11T22:24:23.262Z\",\n  \"saveAamIdValues\": true,\n  \"references\": {\n    \"companyUrl\": \"sin\",\n    \"billingCustomerUrl\": \"tempor aliquip\"\n  },\n  \"calendarType\": {\n    \"rsid\": \"aliquip adipisicing anim proident incididunt\",\n    \"type\": \"GREGORIAN\",\n    \"anchorDate\": \"1990-12-28T12:00:54.812Z\",\n    \"firstDayOfWeek\": 56942644,\n    \"firstMonthOfYear\": 75564257,\n    \"firstDayOfYear\": \"1954-01-03T17:54:24.941Z\",\n    \"anomalyYear\": \"\"\n  },\n  \"axleConfig\": {\n    \"axleData\": true,\n    \"axleStart\": \"aliqua laborum ut mollit ipsum\"\n  },\n  \"tntConfig\": {\n    \"tnt\": false,\n    \"tntExpireType\": -24056777,\n    \"tntExpirePeriods\": 92409787,\n    \"tntAllocationType\": 26869499,\n    \"tntA4tDateEnabled\": true,\n    \"tntClientCode\": \"n\"\n  },\n  \"ipObfuscationEnabled\": true,\n  \"type\": \"consequat mollit in\",\n  \"currentTimezoneOffset\": -85826028.74910048,\n  \"numGroups\": 19110222,\n  \"isBlocked\": false,\n  \"taxonomist\": false,\n  \"mcAssociation\": {\n    \"imsOrgId\": \"fugiat\",\n    \"rsid\": \"in mollit labore\",\n    \"partnerId\": -11602359,\n    \"dataSourceId\": -44282045,\n    \"createUser\": \"ex quis amet par\",\n    \"createTimestamp\": \"2011-10-30T09:14:38.612Z\",\n    \"createdBySystem\": true,\n    \"updateTimestamp\": \"1975-02-17T02:41:28.873Z\",\n    \"dataCenter\": \"dolore\"\n  },\n  \"mcAudiences\": {\n    \"enabled\": false\n  },\n  \"mcEstimatedClusters\": {\n    \"coopEnabled\": false,\n    \"rsid\": \"esse cupidatat non\",\n    \"mcAssociation\": {\n      \"imsOrgId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"rsid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"partnerId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataSourceId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"createUser\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"createTimestamp\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"createdBySystem\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"updateTimestamp\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataCenter\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"estimatedPeople\": {\n      \"dataSourceId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"imsOrgIdsFromRelatedCompanies\": {\n    \"owningImsOrgId\": \"consequat sint\",\n    \"relatedImsOrgIds\": [\n      \"ex Ut amet\",\n      \"pariatur irure velit\"\n    ]\n  },\n  \"relatedCompanies\": [\n    {\n      \"companyId\": 77245097,\n      \"name\": \"reprehen\"\n    },\n    {\n      \"companyId\": -99706312,\n      \"name\": \"consectetur in\"\n    }\n  ],\n  \"dataCurrentAsOf\": \"1990-10-30T08:58:02.205Z\",\n  \"enabledSolutions\": [\n    \"fugiat\",\n    \"proident esse\"\n  ],\n  \"timestampSupport\": \"REQUIRED\",\n  \"localizationEnabled\": false,\n  \"adCloudConfiguration\": {\n    \"dataSourcesId\": 45328257,\n    \"cidUrlParam\": \"nulla consectetu\",\n    \"secondaryRel\": 34046838\n  },\n  \"dataSchema\": \"commodo esse tempor anim laboris\",\n  \"customFilterGroups\": [\n    {\n      \"customGroupId\": -36880409,\n      \"customGroupName\": \"labore\"\n    },\n    {\n      \"customGroupId\": 78247899,\n      \"customGroupName\": \"ut \"\n    }\n  ],\n  \"dataRetentionSettings\": {\n    \"retentionStatus\": \"mollit et nisi Except\",\n    \"retentionMessage\": \"incididunt et\",\n    \"getdWMonths\": 24667973,\n    \"fragSubRelMonths\": 31244975,\n    \"fragNonKeyMonths\": -9058279,\n    \"fragKeyMonths\": -49287990,\n    \"fragMonths\": 71647568\n  },\n  \"remoteLoading\": false,\n  \"activeDpc\": \"elit ipsum laboris\",\n  \"aamServerSideForwarding\": false,\n  \"enablePkvdataDebugKey\": false,\n  \"referencedContextDataKeys\": [\n    \"exercitation laborum enim reprehenderit ut\",\n    \"in do nulla occaecat\"\n  ],\n  \"pipelineStreamingEnabled\": true,\n  \"pipelineBatchNotifyEnabled\": false,\n  \"tags\": [\n    {\n      \"dolore_d3c\": {}\n    },\n    {\n      \"irure921\": {}\n    }\n  ],\n  \"shares\": [\n    {\n      \"nulla__1\": {}\n    },\n    {\n      \"nostrudf8\": {}\n    }\n  ],\n  \"approved\": false,\n  \"favorite\": true,\n  \"usageSummary\": {\n    \"dolor33\": {},\n    \"dolore10\": {}\n  },\n  \"isDeleted\": false,\n  \"parentRsid\": \"elit consequat ullamco Duis\"\n}"
						},
						{
							"name": "Unexpected error; report suite retrieval failed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/reportsuites?expansion=tnt,tags&permission=aliqua&rsids=aliqua&mcAssociations=exclude&mcAudiences=exclude&relevantOnly=false&cached=true&types=rollup,rollup&rsidContains=aliqua&rsidOrNameContains=aliqua&mcAssociatedImsOrgId=aliqua&companyName=aliqua&enabledSolutions=aliqua&limit=10&page=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reportsuites"
									],
									"query": [
										{
											"key": "expansion",
											"value": "tnt,tags"
										},
										{
											"key": "permission",
											"value": "aliqua"
										},
										{
											"key": "rsids",
											"value": "aliqua"
										},
										{
											"key": "mcAssociations",
											"value": "exclude"
										},
										{
											"key": "mcAudiences",
											"value": "exclude"
										},
										{
											"key": "relevantOnly",
											"value": "false"
										},
										{
											"key": "cached",
											"value": "true"
										},
										{
											"key": "types",
											"value": "rollup,rollup"
										},
										{
											"key": "rsidContains",
											"value": "aliqua"
										},
										{
											"key": "rsidOrNameContains",
											"value": "aliqua"
										},
										{
											"key": "mcAssociatedImsOrgId",
											"value": "aliqua"
										},
										{
											"key": "companyName",
											"value": "aliqua"
										},
										{
											"key": "enabledSolutions",
											"value": "aliqua"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "0"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Sets the EstimatedClusters McConfiguration object for the rsid.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"coopEnabled\": false,\n    \"rsid\": \"aliqua aliquip sed consectetur\",\n    \"status\": {\n      \"success\": true,\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"mcAssociation\": {\n      \"imsOrgId\": \"magna voluptate veniam mollit in\",\n      \"rsid\": \"sint officia Ut dolor\",\n      \"partnerId\": 51859107,\n      \"dataSourceId\": -42717486,\n      \"createUser\": \"consectetur adipisi\",\n      \"createTimestamp\": \"1993-11-09T04:06:06.893Z\",\n      \"createdBySystem\": true,\n      \"updateTimestamp\": \"1979-04-27T03:18:26.101Z\",\n      \"dataCenter\": \"et consequat qui sint\"\n    },\n    \"estimatedPeople\": {\n      \"dataSourceId\": \"dolor sunt ex non\"\n    }\n  },\n  {\n    \"coopEnabled\": false,\n    \"rsid\": \"et dolore ipsum Lorem\",\n    \"status\": {\n      \"success\": true,\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"mcAssociation\": {\n      \"imsOrgId\": \"commodo sint Ut\",\n      \"rsid\": \"Excepteur\",\n      \"partnerId\": -25041192,\n      \"dataSourceId\": -58901193,\n      \"createUser\": \"laborum\",\n      \"createTimestamp\": \"1985-03-04T16:56:30.637Z\",\n      \"createdBySystem\": false,\n      \"updateTimestamp\": \"1954-09-20T09:02:41.940Z\",\n      \"dataCenter\": \"ut Ut et nostrud\"\n    },\n    \"estimatedPeople\": {\n      \"dataSourceId\": \"voluptate \"\n    }\n  }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/reportsuites/mcconfigurations/estimatedclusters/batch",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reportsuites",
								"mcconfigurations",
								"estimatedclusters",
								"batch"
							]
						}
					},
					"response": [
						{
							"name": "OK successfully set EstimatedClusters object",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"coopEnabled\": true,\n    \"rsid\": \"sed nulla ex ut\",\n    \"status\": {\n      \"success\": true,\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"mcAssociation\": {\n      \"imsOrgId\": \"cillum ut occaecat Duis\",\n      \"rsid\": \"id dolor velit\",\n      \"partnerId\": 85964416,\n      \"dataSourceId\": -76958827,\n      \"createUser\": \"sunt deserunt\",\n      \"createTimestamp\": \"2014-05-07T18:37:23.670Z\",\n      \"createdBySystem\": true,\n      \"updateTimestamp\": \"2006-10-30T14:40:05.521Z\",\n      \"dataCenter\": \"qui eu\"\n    },\n    \"estimatedPeople\": {\n      \"dataSourceId\": \"sit elit nostrud\"\n    }\n  },\n  {\n    \"coopEnabled\": true,\n    \"rsid\": \"pariatur nisi\",\n    \"status\": {\n      \"success\": true,\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"mcAssociation\": {\n      \"imsOrgId\": \"sunt officia\",\n      \"rsid\": \"labore eiusmod dolor\",\n      \"partnerId\": 35411320,\n      \"dataSourceId\": 41504365,\n      \"createUser\": \"sed eiusmod cillum consectetur voluptate\",\n      \"createTimestamp\": \"1956-05-05T13:06:31.853Z\",\n      \"createdBySystem\": true,\n      \"updateTimestamp\": \"1958-10-17T11:51:05.581Z\",\n      \"dataCenter\": \"anim esse quis pariatur\"\n    },\n    \"estimatedPeople\": {\n      \"dataSourceId\": \"sunt laboris\"\n    }\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reportsuites/mcconfigurations/estimatedclusters/batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reportsuites",
										"mcconfigurations",
										"estimatedclusters",
										"batch"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"coopEnabled\": false,\n  \"rsid\": \"esse in\",\n  \"mcAssociation\": {\n    \"imsOrgId\": \"aliqua\",\n    \"rsid\": \"ut dolor commodo co\",\n    \"partnerId\": -68471934,\n    \"dataSourceId\": 86908329,\n    \"createUser\": \"aute do sit et\",\n    \"createTimestamp\": \"1951-03-01T10:01:44.938Z\",\n    \"createdBySystem\": false,\n    \"updateTimestamp\": \"1967-06-18T00:33:49.647Z\",\n    \"dataCenter\": \"sit cillum Duis\"\n  },\n  \"estimatedPeople\": {\n    \"dataSourceId\": \"nostrud\"\n  }\n}"
						},
						{
							"name": "Insufficient access to data, i.e. the user does not belong to the company owning the rsid",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"coopEnabled\": true,\n    \"rsid\": \"sed nulla ex ut\",\n    \"status\": {\n      \"success\": true,\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"mcAssociation\": {\n      \"imsOrgId\": \"cillum ut occaecat Duis\",\n      \"rsid\": \"id dolor velit\",\n      \"partnerId\": 85964416,\n      \"dataSourceId\": -76958827,\n      \"createUser\": \"sunt deserunt\",\n      \"createTimestamp\": \"2014-05-07T18:37:23.670Z\",\n      \"createdBySystem\": true,\n      \"updateTimestamp\": \"2006-10-30T14:40:05.521Z\",\n      \"dataCenter\": \"qui eu\"\n    },\n    \"estimatedPeople\": {\n      \"dataSourceId\": \"sit elit nostrud\"\n    }\n  },\n  {\n    \"coopEnabled\": true,\n    \"rsid\": \"pariatur nisi\",\n    \"status\": {\n      \"success\": true,\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"mcAssociation\": {\n      \"imsOrgId\": \"sunt officia\",\n      \"rsid\": \"labore eiusmod dolor\",\n      \"partnerId\": 35411320,\n      \"dataSourceId\": 41504365,\n      \"createUser\": \"sed eiusmod cillum consectetur voluptate\",\n      \"createTimestamp\": \"1956-05-05T13:06:31.853Z\",\n      \"createdBySystem\": true,\n      \"updateTimestamp\": \"1958-10-17T11:51:05.581Z\",\n      \"dataCenter\": \"anim esse quis pariatur\"\n    },\n    \"estimatedPeople\": {\n      \"dataSourceId\": \"sunt laboris\"\n    }\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reportsuites/mcconfigurations/estimatedclusters/batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reportsuites",
										"mcconfigurations",
										"estimatedclusters",
										"batch"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"io_error\",\n  \"errorDescription\": \"reprehenderit sit aliqua\",\n  \"errorId\": \"magna\",\n  \"errorDetails\": {\n    \"velitf00\": {}\n  },\n  \"rootCauseService\": \"eu tempor ullamco ipsum\"\n}"
						},
						{
							"name": "Unexpected error; update of EstimatedClusters failed due to an internal error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"coopEnabled\": true,\n    \"rsid\": \"sed nulla ex ut\",\n    \"status\": {\n      \"success\": true,\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"mcAssociation\": {\n      \"imsOrgId\": \"cillum ut occaecat Duis\",\n      \"rsid\": \"id dolor velit\",\n      \"partnerId\": 85964416,\n      \"dataSourceId\": -76958827,\n      \"createUser\": \"sunt deserunt\",\n      \"createTimestamp\": \"2014-05-07T18:37:23.670Z\",\n      \"createdBySystem\": true,\n      \"updateTimestamp\": \"2006-10-30T14:40:05.521Z\",\n      \"dataCenter\": \"qui eu\"\n    },\n    \"estimatedPeople\": {\n      \"dataSourceId\": \"sit elit nostrud\"\n    }\n  },\n  {\n    \"coopEnabled\": true,\n    \"rsid\": \"pariatur nisi\",\n    \"status\": {\n      \"success\": true,\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"mcAssociation\": {\n      \"imsOrgId\": \"sunt officia\",\n      \"rsid\": \"labore eiusmod dolor\",\n      \"partnerId\": 35411320,\n      \"dataSourceId\": 41504365,\n      \"createUser\": \"sed eiusmod cillum consectetur voluptate\",\n      \"createTimestamp\": \"1956-05-05T13:06:31.853Z\",\n      \"createdBySystem\": true,\n      \"updateTimestamp\": \"1958-10-17T11:51:05.581Z\",\n      \"dataCenter\": \"anim esse quis pariatur\"\n    },\n    \"estimatedPeople\": {\n      \"dataSourceId\": \"sunt laboris\"\n    }\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reportsuites/mcconfigurations/estimatedclusters/batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reportsuites",
										"mcconfigurations",
										"estimatedclusters",
										"batch"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"io_error\",\n  \"errorDescription\": \"reprehenderit sit aliqua\",\n  \"errorId\": \"magna\",\n  \"errorDetails\": {\n    \"velitf00\": {}\n  },\n  \"rootCauseService\": \"eu tempor ullamco ipsum\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "mcusermigration",
			"item": [
				{
					"name": "Get marketing migration user statistics for the given company",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "ims linked company name",
								"key": "x-proxy-company",
								"value": ""
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/mcusermigration/userstats",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"mcusermigration",
								"userstats"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									},
									{
										"description": "ims linked company name",
										"key": "x-proxy-company",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/mcusermigration/userstats",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mcusermigration",
										"userstats"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"failedMigrationUsers\": 23615777,\n  \"marketingCloudOnlyUsers\": -43058156,\n  \"migratedUsers\": -44431717,\n  \"totalUsers\": -4683233,\n  \"domainStatus\": [\n    {\n      \"failedMigrationUsers\": -18476473,\n      \"marketingCloudOnlyUsers\": -96155440,\n      \"migratedUsers\": -99928862,\n      \"totalUsers\": -15899684,\n      \"domainStatus\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"domain\": \"culpa sed in consectetur officia\",\n      \"ownershipStatus\": \"sunt\"\n    },\n    {\n      \"failedMigrationUsers\": 89235480,\n      \"marketingCloudOnlyUsers\": 83091029,\n      \"migratedUsers\": 50784292,\n      \"totalUsers\": 1449962,\n      \"domainStatus\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"domain\": \"sunt enim aute\",\n      \"ownershipStatus\": \"fugiat nostrud esse\"\n    }\n  ]\n}"
						},
						{
							"name": "Internal error while fetching mcassociation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									},
									{
										"description": "ims linked company name",
										"key": "x-proxy-company",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/mcusermigration/userstats",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mcusermigration",
										"userstats"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"io_error\",\n  \"errorDescription\": \"reprehenderit sit aliqua\",\n  \"errorId\": \"magna\",\n  \"errorDetails\": {\n    \"velitf00\": {}\n  },\n  \"rootCauseService\": \"eu tempor ullamco ipsum\"\n}"
						}
					]
				},
				{
					"name": "Get user migration status for the current user company",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "ims linked company name",
								"key": "x-proxy-company",
								"value": ""
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/mcusermigration/usermigrationstatus?failuresOnly=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"mcusermigration",
								"usermigrationstatus"
							],
							"query": [
								{
									"key": "failuresOnly",
									"value": "true",
									"description": "filter by failures"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									},
									{
										"description": "ims linked company name",
										"key": "x-proxy-company",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/mcusermigration/usermigrationstatus?failuresOnly=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mcusermigration",
										"usermigrationstatus"
									],
									"query": [
										{
											"key": "failuresOnly",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"globalCompanyId\": \"nulla aute reprehenderit adipisicing\",\n  \"login\": \"nulla\",\n  \"email\": \"in qui ut velit\",\n  \"status\": \"SUCCESS\",\n  \"reason\": \"internal_server_error\",\n  \"updateTimestamp\": \"1953-07-07T03:52:04.141Z\",\n  \"updateUser\": \"in nulla deserunt\"\n}"
						},
						{
							"name": "Could not find user migration status data for given company",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									},
									{
										"description": "ims linked company name",
										"key": "x-proxy-company",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/mcusermigration/usermigrationstatus?failuresOnly=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mcusermigration",
										"usermigrationstatus"
									],
									"query": [
										{
											"key": "failuresOnly",
											"value": "true"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"io_error\",\n  \"errorDescription\": \"reprehenderit sit aliqua\",\n  \"errorId\": \"magna\",\n  \"errorDetails\": {\n    \"velitf00\": {}\n  },\n  \"rootCauseService\": \"eu tempor ullamco ipsum\"\n}"
						},
						{
							"name": "Internal error while fetching mcassociation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									},
									{
										"description": "ims linked company name",
										"key": "x-proxy-company",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/mcusermigration/usermigrationstatus?failuresOnly=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mcusermigration",
										"usermigrationstatus"
									],
									"query": [
										{
											"key": "failuresOnly",
											"value": "true"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"io_error\",\n  \"errorDescription\": \"reprehenderit sit aliqua\",\n  \"errorId\": \"magna\",\n  \"errorDetails\": {\n    \"velitf00\": {}\n  },\n  \"rootCauseService\": \"eu tempor ullamco ipsum\"\n}"
						}
					]
				},
				{
					"name": "Migrate analytics users to IMS Org for the given company",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"description": "ims linked company name",
								"key": "x-proxy-company",
								"value": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"idType\": \"adobeId\",\n  \"ids\": [\n    \"in laborum aute do Duis\",\n    \"dolor deserunt\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/mcusermigration/migrate?locale=en_US&asynch=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"mcusermigration",
								"migrate"
							],
							"query": [
								{
									"key": "locale",
									"value": "en_US",
									"description": "Locale"
								},
								{
									"key": "asynch",
									"value": "true",
									"description": "If true make this call asynchronously"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									},
									{
										"description": "ims linked company name",
										"key": "x-proxy-company",
										"value": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"idType\": \"enterpriseId\",\n  \"ids\": [\n    \"est\",\n    \"magna dolor id ea nostrud\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/mcusermigration/migrate?locale=en_US&asynch=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mcusermigration",
										"migrate"
									],
									"query": [
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "asynch",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal error while inviting user to join IMS Org",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									},
									{
										"description": "ims linked company name",
										"key": "x-proxy-company",
										"value": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"idType\": \"enterpriseId\",\n  \"ids\": [\n    \"est\",\n    \"magna dolor id ea nostrud\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/mcusermigration/migrate?locale=en_US&asynch=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mcusermigration",
										"migrate"
									],
									"query": [
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "asynch",
											"value": "true"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"io_error\",\n  \"errorDescription\": \"reprehenderit sit aliqua\",\n  \"errorId\": \"magna\",\n  \"errorDetails\": {\n    \"velitf00\": {}\n  },\n  \"rootCauseService\": \"eu tempor ullamco ipsum\"\n}"
						}
					]
				},
				{
					"name": "Update IMS user migration complete status for the given company",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"imsUserMigrationComplete\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/mcusermigration/companymigrationstatus",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"mcusermigration",
								"companymigrationstatus"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"imsUserMigrationComplete\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/mcusermigration/companymigrationstatus",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mcusermigration",
										"companymigrationstatus"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"imsUserMigrationComplete\": false\n}"
						},
						{
							"name": "Definition must be formatted as a JSON Object; Company is not linked to an IMS Organization",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"imsUserMigrationComplete\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/mcusermigration/companymigrationstatus",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mcusermigration",
										"companymigrationstatus"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"io_error\",\n  \"errorDescription\": \"reprehenderit sit aliqua\",\n  \"errorId\": \"magna\",\n  \"errorDetails\": {\n    \"velitf00\": {}\n  },\n  \"rootCauseService\": \"eu tempor ullamco ipsum\"\n}"
						},
						{
							"name": "User is not admin user, does not have permission to update company migration status",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"imsUserMigrationComplete\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/mcusermigration/companymigrationstatus",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mcusermigration",
										"companymigrationstatus"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"io_error\",\n  \"errorDescription\": \"reprehenderit sit aliqua\",\n  \"errorId\": \"magna\",\n  \"errorDetails\": {\n    \"velitf00\": {}\n  },\n  \"rootCauseService\": \"eu tempor ullamco ipsum\"\n}"
						},
						{
							"name": "External API error; updating user migration status failed",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"imsUserMigrationComplete\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/mcusermigration/companymigrationstatus",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mcusermigration",
										"companymigrationstatus"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"io_error\",\n  \"errorDescription\": \"reprehenderit sit aliqua\",\n  \"errorId\": \"magna\",\n  \"errorDetails\": {\n    \"velitf00\": {}\n  },\n  \"rootCauseService\": \"eu tempor ullamco ipsum\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "metrics",
			"item": [
				{
					"name": "Returns a list of metrics for the given report suite",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/metrics?rsid=aliqua&locale=en_US&support=oberon,oberon&segmentable=false&reportTimeAttribution=false&stitched=false&supportsDataGovernance=true&expansion=curatedItems,favorite&includeType=builderOnly,builderOnly&showMetricViews=false&dataGovernanceLabels=cillum minim dolore,ullamco a",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"metrics"
							],
							"query": [
								{
									"key": "rsid",
									"value": "aliqua",
									"description": "(Required) ID of desired report suite ie. sistr2"
								},
								{
									"key": "locale",
									"value": "en_US",
									"description": "Locale that system named metrics should be returned in"
								},
								{
									"key": "support",
									"value": "oberon,oberon",
									"description": "Which platform that this metric can be used on."
								},
								{
									"key": "segmentable",
									"value": "false",
									"description": "Filter the metrics by if they are valid in a segment."
								},
								{
									"key": "reportTimeAttribution",
									"value": "false",
									"description": "Filter the metrics by if they support reportTimeAttribution."
								},
								{
									"key": "stitched",
									"value": "false",
									"description": "Apply visitor stitching rules to metrics"
								},
								{
									"key": "supportsDataGovernance",
									"value": "true",
									"description": "Only include metrics that contain dataGovernance attribute."
								},
								{
									"key": "expansion",
									"value": "curatedItems,favorite",
									"description": "Add extra metadata to items (comma-delimited list)"
								},
								{
									"key": "includeType",
									"value": "builderOnly,builderOnly",
									"description": "Include additional metrics. The \"builderOnly\" returns metrics which should be visible in builder (Calculated Metric builder and segment builder)"
								},
								{
									"key": "showMetricViews",
									"value": "false",
									"description": "Whether to show metric views. Children metrics will be hidden."
								},
								{
									"key": "dataGovernanceLabels",
									"value": "cillum minim dolore,ullamco a",
									"description": "Filters the response based on data governance labels.  This allows multiple labels to search for in a comma-delimited string format.  Returns any metric/dimension containing one or more of the labels passed in"
								}
							]
						},
						"description": "This returns the metrics list primarily for the Analytics product. The platform identity API Returns a list of all possible metrics for the supported systems."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics?rsid=aliqua&locale=en_US&support=dataWarehouse,dataWarehouse&segmentable=false&reportTimeAttribution=false&stitched=false&supportsDataGovernance=true&expansion=dataSourcesUploadName,allowedForReporting&includeType=unauthorized,builderOnly&showMetricViews=false&dataGovernanceLabels=officia,occaecat minim et anim dolor",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics"
									],
									"query": [
										{
											"key": "rsid",
											"value": "aliqua"
										},
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "support",
											"value": "dataWarehouse,dataWarehouse"
										},
										{
											"key": "segmentable",
											"value": "false"
										},
										{
											"key": "reportTimeAttribution",
											"value": "false"
										},
										{
											"key": "stitched",
											"value": "false"
										},
										{
											"key": "supportsDataGovernance",
											"value": "true"
										},
										{
											"key": "expansion",
											"value": "dataSourcesUploadName,allowedForReporting"
										},
										{
											"key": "includeType",
											"value": "unauthorized,builderOnly"
										},
										{
											"key": "showMetricViews",
											"value": "false"
										},
										{
											"key": "dataGovernanceLabels",
											"value": "officia,occaecat minim et anim dolor"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"id et officia\",\n  \"title\": \"occaecat anim deserunt\",\n  \"name\": \"anim mollit do commodo amet\",\n  \"type\": \"TIME\",\n  \"extraTitleInfo\": \"ut reprehenderi\",\n  \"category\": \"nostrud eiusmod culpa occaecat\",\n  \"categories\": [\n    \"labore esse incididunt dolor\",\n    \"irure in non dolor\"\n  ],\n  \"support\": [\n    \"laborum dolore\",\n    \"deserunt quis officia\"\n  ],\n  \"allocation\": false,\n  \"precision\": -45775827,\n  \"calculated\": false,\n  \"segmentable\": true,\n  \"supportsDataGovernance\": true,\n  \"description\": \"commodo fugiat\",\n  \"polarity\": \"positive\",\n  \"visibility\": \"hiddenEverywhere\",\n  \"dataGroup\": \"elit eiusmod\",\n  \"hidden\": false,\n  \"noAccess\": true,\n  \"metricViews\": [\n    {\n      \"id\": \"labori\",\n      \"name\": \"minim Excepteur\",\n      \"description\": \"amet consequat fugiat Duis\"\n    },\n    {\n      \"id\": \"fugiat sed consectetur\",\n      \"name\": \"anim nostrud\",\n      \"description\": \"mollit fugiat minim id\"\n    }\n  ],\n  \"helpLink\": \"eu Duis deserunt dolor\",\n  \"warning\": {\n    \"title\": \"occaecat in magna culpa labore\",\n    \"text\": \"qui ut enim consequat do\",\n    \"helpLink\": \"laborum consectetur exercitation\"\n  },\n  \"alternateVariableNames\": {\n    \"name\": \"enim\",\n    \"baseName\": \"enim\",\n    \"curatedName\": \"culpa aute dolor Duis aliquip\"\n  },\n  \"curatedItem\": false,\n  \"reportTimeAttribution\": false,\n  \"customerJourney\": true,\n  \"dataGovernance\": {\n    \"namespace\": \"U\",\n    \"auth\": {\n      \"labels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"editable\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"usesDefault\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"allowedEmpty\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"defaultLabels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"gdprAccess\": {\n      \"labels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"editable\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"usesDefault\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"allowedEmpty\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"defaultLabels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"gdprDelete\": {\n      \"labels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"editable\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"usesDefault\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"allowedEmpty\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"defaultLabels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"identifiability\": {\n      \"labels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"editable\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"usesDefault\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"allowedEmpty\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"defaultLabels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"sensitivity\": {\n      \"labels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"editable\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"usesDefault\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"allowedEmpty\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"defaultLabels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"aliasId\": \"in\",\n  \"dataCollectionType\": \"voluptate aliquip ad\",\n  \"attributes\": [\n    \"dolore ipsum ut\",\n    \"ut\"\n  ],\n  \"allowedForReporting\": true,\n  \"dataSourcesUploadName\": \"in aliqu\",\n  \"subType\": \"TIME_MINUTES\",\n  \"tags\": [\n    {\n      \"id\": 48526932,\n      \"name\": \"proident in fugiat\",\n      \"description\": \"sed proident elit\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": -79289962,\n      \"name\": \"officia nulla nisi\",\n      \"description\": \"pariatur\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"usageSummary\": {\n    \"count\": 70385047,\n    \"mostRecentTimestamp\": \"1957-01-08T02:34:54.228Z\",\n    \"itemId\": \"amet esse laborum\",\n    \"relevancyScore\": -71952658.09277193,\n    \"companyCount\": -62456252\n  },\n  \"shares\": [\n    {\n      \"componentId\": \"culpa elit nulla fugiat\",\n      \"shareToId\": -43077064,\n      \"shareToType\": \"ut Ut eu \",\n      \"shareId\": 82295119,\n      \"componentType\": \"fugiat aute voluptate\",\n      \"shareToDisplayName\": \"amet in pariatur commodo\",\n      \"shareToLogin\": \"consectetur ut Lorem id consequat\",\n      \"shareToImsUserId\": \"occaecat Lorem ad ut Duis\",\n      \"accessLevel\": \"co\"\n    },\n    {\n      \"componentId\": \"ullamco non\",\n      \"shareToId\": 4169022,\n      \"shareToType\": \"eiusmod commodo \",\n      \"shareId\": 41041208,\n      \"componentType\": \"non laborum reprehenderit nulla dolore\",\n      \"shareToDisplayName\": \"ea quis ex anim\",\n      \"shareToLogin\": \"officia\",\n      \"shareToImsUserId\": \"proident enim reprehenderit aliqua ad\",\n      \"accessLevel\": \"ea ex\"\n    }\n  ],\n  \"approved\": false,\n  \"favorite\": false\n}"
						},
						{
							"name": "Invalid JSON input",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics?rsid=aliqua&locale=en_US&support=dataWarehouse,dataWarehouse&segmentable=false&reportTimeAttribution=false&stitched=false&supportsDataGovernance=true&expansion=dataSourcesUploadName,allowedForReporting&includeType=unauthorized,builderOnly&showMetricViews=false&dataGovernanceLabels=officia,occaecat minim et anim dolor",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics"
									],
									"query": [
										{
											"key": "rsid",
											"value": "aliqua"
										},
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "support",
											"value": "dataWarehouse,dataWarehouse"
										},
										{
											"key": "segmentable",
											"value": "false"
										},
										{
											"key": "reportTimeAttribution",
											"value": "false"
										},
										{
											"key": "stitched",
											"value": "false"
										},
										{
											"key": "supportsDataGovernance",
											"value": "true"
										},
										{
											"key": "expansion",
											"value": "dataSourcesUploadName,allowedForReporting"
										},
										{
											"key": "includeType",
											"value": "unauthorized,builderOnly"
										},
										{
											"key": "showMetricViews",
											"value": "false"
										},
										{
											"key": "dataGovernanceLabels",
											"value": "officia,occaecat minim et anim dolor"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Insufficient access to perform operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics?rsid=aliqua&locale=en_US&support=dataWarehouse,dataWarehouse&segmentable=false&reportTimeAttribution=false&stitched=false&supportsDataGovernance=true&expansion=dataSourcesUploadName,allowedForReporting&includeType=unauthorized,builderOnly&showMetricViews=false&dataGovernanceLabels=officia,occaecat minim et anim dolor",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics"
									],
									"query": [
										{
											"key": "rsid",
											"value": "aliqua"
										},
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "support",
											"value": "dataWarehouse,dataWarehouse"
										},
										{
											"key": "segmentable",
											"value": "false"
										},
										{
											"key": "reportTimeAttribution",
											"value": "false"
										},
										{
											"key": "stitched",
											"value": "false"
										},
										{
											"key": "supportsDataGovernance",
											"value": "true"
										},
										{
											"key": "expansion",
											"value": "dataSourcesUploadName,allowedForReporting"
										},
										{
											"key": "includeType",
											"value": "unauthorized,builderOnly"
										},
										{
											"key": "showMetricViews",
											"value": "false"
										},
										{
											"key": "dataGovernanceLabels",
											"value": "officia,occaecat minim et anim dolor"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unexpected internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics?rsid=aliqua&locale=en_US&support=dataWarehouse,dataWarehouse&segmentable=false&reportTimeAttribution=false&stitched=false&supportsDataGovernance=true&expansion=dataSourcesUploadName,allowedForReporting&includeType=unauthorized,builderOnly&showMetricViews=false&dataGovernanceLabels=officia,occaecat minim et anim dolor",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics"
									],
									"query": [
										{
											"key": "rsid",
											"value": "aliqua"
										},
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "support",
											"value": "dataWarehouse,dataWarehouse"
										},
										{
											"key": "segmentable",
											"value": "false"
										},
										{
											"key": "reportTimeAttribution",
											"value": "false"
										},
										{
											"key": "stitched",
											"value": "false"
										},
										{
											"key": "supportsDataGovernance",
											"value": "true"
										},
										{
											"key": "expansion",
											"value": "dataSourcesUploadName,allowedForReporting"
										},
										{
											"key": "includeType",
											"value": "unauthorized,builderOnly"
										},
										{
											"key": "showMetricViews",
											"value": "false"
										},
										{
											"key": "dataGovernanceLabels",
											"value": "officia,occaecat minim et anim dolor"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Returns a metric for the given report suite",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/metrics/:id?rsid=aliqua&locale=en_US&includeHidden=false&expansion=curatedItems,favorite",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"metrics",
								":id"
							],
							"query": [
								{
									"key": "rsid",
									"value": "aliqua",
									"description": "(Required) ID of desired report suite ie. sistr2"
								},
								{
									"key": "locale",
									"value": "en_US",
									"description": "Locale that system named metrics should be returned in"
								},
								{
									"key": "includeHidden",
									"value": "false",
									"description": "Whether to include variables that are hidden in the UI or that the user doesn't have permission to."
								},
								{
									"key": "expansion",
									"value": "curatedItems,favorite",
									"description": "Add extra metadata to items (comma-delimited list)"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "aliqua",
									"description": "(Required) The id of the metric for which to retrieve info. Note ids are values like pageviews, not metrics/pageviews"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics/:id?rsid=aliqua&locale=en_US&includeHidden=false&expansion=dataSourcesUploadName,allowedForReporting",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										":id"
									],
									"query": [
										{
											"key": "rsid",
											"value": "aliqua"
										},
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "includeHidden",
											"value": "false"
										},
										{
											"key": "expansion",
											"value": "dataSourcesUploadName,allowedForReporting"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The id of the metric for which to retrieve info. Note ids are values like pageviews, not metrics/pageviews"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"aliquip laboris do\",\n  \"title\": \"nostrud ut\",\n  \"name\": \"tempor comm\",\n  \"type\": \"DECIMAL\",\n  \"extraTitleInfo\": \"\",\n  \"category\": \"cupidatat in ex et ut\",\n  \"categories\": [\n    \"sit sunt laborum est\",\n    \"nulla adipisicing nostrud\"\n  ],\n  \"support\": [\n    \"in est\",\n    \"dolore ipsum aute tempor\"\n  ],\n  \"allocation\": false,\n  \"precision\": -3094112,\n  \"calculated\": true,\n  \"segmentable\": false,\n  \"supportsDataGovernance\": true,\n  \"description\": \"sit sunt\",\n  \"polarity\": \"positive\",\n  \"visibility\": \"builderOnly\",\n  \"dataGroup\": \"nisi sed fugiat ad\",\n  \"hidden\": false,\n  \"noAccess\": false,\n  \"metricViews\": [\n    {\n      \"id\": \"sit\",\n      \"name\": \"ipsum aliquip labor\",\n      \"description\": \"veniam do\"\n    },\n    {\n      \"id\": \"ex cupidatat\",\n      \"name\": \"q\",\n      \"description\": \"pariatur Duis nisi dolor consectetur\"\n    }\n  ],\n  \"helpLink\": \"exercitation ullamco\",\n  \"warning\": {\n    \"title\": \"eu irure\",\n    \"text\": \"sunt velit Excepteur\",\n    \"helpLink\": \"enim null\"\n  },\n  \"alternateVariableNames\": {\n    \"name\": \"Ut\",\n    \"baseName\": \"reprehenderit Duis qui in\",\n    \"curatedName\": \"ip\"\n  },\n  \"curatedItem\": false,\n  \"reportTimeAttribution\": true,\n  \"customerJourney\": false,\n  \"dataGovernance\": {\n    \"namespace\": \"ali\",\n    \"auth\": {\n      \"labels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"editable\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"usesDefault\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"allowedEmpty\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"defaultLabels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"gdprAccess\": {\n      \"labels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"editable\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"usesDefault\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"allowedEmpty\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"defaultLabels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"gdprDelete\": {\n      \"labels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"editable\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"usesDefault\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"allowedEmpty\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"defaultLabels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"identifiability\": {\n      \"labels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"editable\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"usesDefault\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"allowedEmpty\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"defaultLabels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"sensitivity\": {\n      \"labels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"editable\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"usesDefault\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"allowedEmpty\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"defaultLabels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"aliasId\": \"sunt consectetur id tempor\",\n  \"dataCollectionType\": \"veniam eli\",\n  \"attributes\": [\n    \"ex ad\",\n    \"aute reprehenderit sed veniam\"\n  ],\n  \"allowedForReporting\": false,\n  \"dataSourcesUploadName\": \"ut pariatur aute\",\n  \"subType\": \"TIME_SECONDS\",\n  \"tags\": [\n    {\n      \"id\": -22911398,\n      \"name\": \"in aliquip\",\n      \"description\": \"qu\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": 72387341,\n      \"name\": \"in pariatur labore\",\n      \"description\": \"consectet\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"usageSummary\": {\n    \"count\": -26001065,\n    \"mostRecentTimestamp\": \"1979-03-07T15:41:10.467Z\",\n    \"itemId\": \"veniam cillum\",\n    \"relevancyScore\": 42090375.5483093,\n    \"companyCount\": 22070824\n  },\n  \"shares\": [\n    {\n      \"componentId\": \"veniam\",\n      \"shareToId\": -20616774,\n      \"shareToType\": \"velit\",\n      \"shareId\": 42387475,\n      \"componentType\": \"amet\",\n      \"shareToDisplayName\": \"ipsum velit laborum sed\",\n      \"shareToLogin\": \"in Duis consequat\",\n      \"shareToImsUserId\": \"ex enim\",\n      \"accessLevel\": \"id eiusmod\"\n    },\n    {\n      \"componentId\": \"ea eiusmod sit\",\n      \"shareToId\": 72550996,\n      \"shareToType\": \"dolore laboris\",\n      \"shareId\": 32095531,\n      \"componentType\": \"aute consequat ad\",\n      \"shareToDisplayName\": \"minim irure in Ut\",\n      \"shareToLogin\": \"ea tempor\",\n      \"shareToImsUserId\": \"dolor ut officia\",\n      \"accessLevel\": \"et\"\n    }\n  ],\n  \"approved\": true,\n  \"favorite\": true\n}"
						},
						{
							"name": "Invalid JSON input",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics/:id?rsid=aliqua&locale=en_US&includeHidden=false&expansion=dataSourcesUploadName,allowedForReporting",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										":id"
									],
									"query": [
										{
											"key": "rsid",
											"value": "aliqua"
										},
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "includeHidden",
											"value": "false"
										},
										{
											"key": "expansion",
											"value": "dataSourcesUploadName,allowedForReporting"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The id of the metric for which to retrieve info. Note ids are values like pageviews, not metrics/pageviews"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Insufficient access to perform operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics/:id?rsid=aliqua&locale=en_US&includeHidden=false&expansion=dataSourcesUploadName,allowedForReporting",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										":id"
									],
									"query": [
										{
											"key": "rsid",
											"value": "aliqua"
										},
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "includeHidden",
											"value": "false"
										},
										{
											"key": "expansion",
											"value": "dataSourcesUploadName,allowedForReporting"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The id of the metric for which to retrieve info. Note ids are values like pageviews, not metrics/pageviews"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unexpected internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics/:id?rsid=aliqua&locale=en_US&includeHidden=false&expansion=dataSourcesUploadName,allowedForReporting",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										":id"
									],
									"query": [
										{
											"key": "rsid",
											"value": "aliqua"
										},
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "includeHidden",
											"value": "false"
										},
										{
											"key": "expansion",
											"value": "dataSourcesUploadName,allowedForReporting"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The id of the metric for which to retrieve info. Note ids are values like pageviews, not metrics/pageviews"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Modification of metric data usage settings",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"namespace\": \"quis deserunt qui nulla\",\n  \"auth\": {\n    \"labels\": [\n      \"et anim aliqua enim quis\",\n      \"cupidatat deser\"\n    ],\n    \"editable\": true,\n    \"usesDefault\": false,\n    \"allowedEmpty\": true,\n    \"defaultLabels\": [\n      \"dolore veniam et\",\n      \"in dolor laboris\"\n    ]\n  },\n  \"gdprAccess\": {\n    \"labels\": [\n      \"et laborum aliquip est ut\",\n      \"do\"\n    ],\n    \"editable\": true,\n    \"usesDefault\": false,\n    \"allowedEmpty\": false,\n    \"defaultLabels\": [\n      \"officia ex\",\n      \"mollit do non\"\n    ]\n  },\n  \"gdprDelete\": {\n    \"labels\": [\n      \"ut nostrud mollit anim\",\n      \"eu esse ut pariatur\"\n    ],\n    \"editable\": false,\n    \"usesDefault\": false,\n    \"allowedEmpty\": false,\n    \"defaultLabels\": [\n      \"deserunt id\",\n      \"ea\"\n    ]\n  },\n  \"identifiability\": {\n    \"labels\": [\n      \"proident quis\",\n      \"magna Lorem\"\n    ],\n    \"editable\": false,\n    \"usesDefault\": true,\n    \"allowedEmpty\": false,\n    \"defaultLabels\": [\n      \"sunt Excepteur\",\n      \"Lorem do exercitation dolor\"\n    ]\n  },\n  \"sensitivity\": {\n    \"labels\": [\n      \"velit ut aute consequat adipisicing\",\n      \"sint occaecat\"\n    ],\n    \"editable\": false,\n    \"usesDefault\": false,\n    \"allowedEmpty\": true,\n    \"defaultLabels\": [\n      \"occaecat \",\n      \"nisi ad\"\n    ]\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/metrics/:metricId/datagovernance?rsid=aliqua",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"metrics",
								":metricId",
								"datagovernance"
							],
							"query": [
								{
									"key": "rsid",
									"value": "aliqua",
									"description": "RSID to retrieve metric values for"
								}
							],
							"variable": [
								{
									"key": "metricId",
									"value": "aliqua",
									"description": "(Required) The id of the metric to modify its data governance settings."
								}
							]
						},
						"description": "Updates a specific metric data governance settings."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"namespace\": \"quis deserunt qui nulla\",\n  \"auth\": {\n    \"labels\": [\n      \"et anim aliqua enim quis\",\n      \"cupidatat deser\"\n    ],\n    \"editable\": true,\n    \"usesDefault\": false,\n    \"allowedEmpty\": true,\n    \"defaultLabels\": [\n      \"dolore veniam et\",\n      \"in dolor laboris\"\n    ]\n  },\n  \"gdprAccess\": {\n    \"labels\": [\n      \"et laborum aliquip est ut\",\n      \"do\"\n    ],\n    \"editable\": true,\n    \"usesDefault\": false,\n    \"allowedEmpty\": false,\n    \"defaultLabels\": [\n      \"officia ex\",\n      \"mollit do non\"\n    ]\n  },\n  \"gdprDelete\": {\n    \"labels\": [\n      \"ut nostrud mollit anim\",\n      \"eu esse ut pariatur\"\n    ],\n    \"editable\": false,\n    \"usesDefault\": false,\n    \"allowedEmpty\": false,\n    \"defaultLabels\": [\n      \"deserunt id\",\n      \"ea\"\n    ]\n  },\n  \"identifiability\": {\n    \"labels\": [\n      \"proident quis\",\n      \"magna Lorem\"\n    ],\n    \"editable\": false,\n    \"usesDefault\": true,\n    \"allowedEmpty\": false,\n    \"defaultLabels\": [\n      \"sunt Excepteur\",\n      \"Lorem do exercitation dolor\"\n    ]\n  },\n  \"sensitivity\": {\n    \"labels\": [\n      \"velit ut aute consequat adipisicing\",\n      \"sint occaecat\"\n    ],\n    \"editable\": false,\n    \"usesDefault\": false,\n    \"allowedEmpty\": true,\n    \"defaultLabels\": [\n      \"occaecat \",\n      \"nisi ad\"\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/metrics/:metricId/datagovernance?rsid=aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										":metricId",
										"datagovernance"
									],
									"query": [
										{
											"key": "rsid",
											"value": "aliqua"
										}
									],
									"variable": [
										{
											"key": "metricId",
											"value": "aliqua",
											"description": "(Required) The id of the metric to modify its data governance settings."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"namespace\": \"quis deserunt qui nulla\",\n  \"auth\": {\n    \"labels\": [\n      \"et anim aliqua enim quis\",\n      \"cupidatat deser\"\n    ],\n    \"editable\": true,\n    \"usesDefault\": false,\n    \"allowedEmpty\": true,\n    \"defaultLabels\": [\n      \"dolore veniam et\",\n      \"in dolor laboris\"\n    ]\n  },\n  \"gdprAccess\": {\n    \"labels\": [\n      \"et laborum aliquip est ut\",\n      \"do\"\n    ],\n    \"editable\": true,\n    \"usesDefault\": false,\n    \"allowedEmpty\": false,\n    \"defaultLabels\": [\n      \"officia ex\",\n      \"mollit do non\"\n    ]\n  },\n  \"gdprDelete\": {\n    \"labels\": [\n      \"ut nostrud mollit anim\",\n      \"eu esse ut pariatur\"\n    ],\n    \"editable\": false,\n    \"usesDefault\": false,\n    \"allowedEmpty\": false,\n    \"defaultLabels\": [\n      \"deserunt id\",\n      \"ea\"\n    ]\n  },\n  \"identifiability\": {\n    \"labels\": [\n      \"proident quis\",\n      \"magna Lorem\"\n    ],\n    \"editable\": false,\n    \"usesDefault\": true,\n    \"allowedEmpty\": false,\n    \"defaultLabels\": [\n      \"sunt Excepteur\",\n      \"Lorem do exercitation dolor\"\n    ]\n  },\n  \"sensitivity\": {\n    \"labels\": [\n      \"velit ut aute consequat adipisicing\",\n      \"sint occaecat\"\n    ],\n    \"editable\": false,\n    \"usesDefault\": false,\n    \"allowedEmpty\": true,\n    \"defaultLabels\": [\n      \"occaecat \",\n      \"nisi ad\"\n    ]\n  }\n}"
						},
						{
							"name": "Invalid JSON input",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"namespace\": \"quis deserunt qui nulla\",\n  \"auth\": {\n    \"labels\": [\n      \"et anim aliqua enim quis\",\n      \"cupidatat deser\"\n    ],\n    \"editable\": true,\n    \"usesDefault\": false,\n    \"allowedEmpty\": true,\n    \"defaultLabels\": [\n      \"dolore veniam et\",\n      \"in dolor laboris\"\n    ]\n  },\n  \"gdprAccess\": {\n    \"labels\": [\n      \"et laborum aliquip est ut\",\n      \"do\"\n    ],\n    \"editable\": true,\n    \"usesDefault\": false,\n    \"allowedEmpty\": false,\n    \"defaultLabels\": [\n      \"officia ex\",\n      \"mollit do non\"\n    ]\n  },\n  \"gdprDelete\": {\n    \"labels\": [\n      \"ut nostrud mollit anim\",\n      \"eu esse ut pariatur\"\n    ],\n    \"editable\": false,\n    \"usesDefault\": false,\n    \"allowedEmpty\": false,\n    \"defaultLabels\": [\n      \"deserunt id\",\n      \"ea\"\n    ]\n  },\n  \"identifiability\": {\n    \"labels\": [\n      \"proident quis\",\n      \"magna Lorem\"\n    ],\n    \"editable\": false,\n    \"usesDefault\": true,\n    \"allowedEmpty\": false,\n    \"defaultLabels\": [\n      \"sunt Excepteur\",\n      \"Lorem do exercitation dolor\"\n    ]\n  },\n  \"sensitivity\": {\n    \"labels\": [\n      \"velit ut aute consequat adipisicing\",\n      \"sint occaecat\"\n    ],\n    \"editable\": false,\n    \"usesDefault\": false,\n    \"allowedEmpty\": true,\n    \"defaultLabels\": [\n      \"occaecat \",\n      \"nisi ad\"\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/metrics/:metricId/datagovernance?rsid=aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										":metricId",
										"datagovernance"
									],
									"query": [
										{
											"key": "rsid",
											"value": "aliqua"
										}
									],
									"variable": [
										{
											"key": "metricId",
											"value": "aliqua",
											"description": "(Required) The id of the metric to modify its data governance settings."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Insufficient access to perform operation",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"namespace\": \"quis deserunt qui nulla\",\n  \"auth\": {\n    \"labels\": [\n      \"et anim aliqua enim quis\",\n      \"cupidatat deser\"\n    ],\n    \"editable\": true,\n    \"usesDefault\": false,\n    \"allowedEmpty\": true,\n    \"defaultLabels\": [\n      \"dolore veniam et\",\n      \"in dolor laboris\"\n    ]\n  },\n  \"gdprAccess\": {\n    \"labels\": [\n      \"et laborum aliquip est ut\",\n      \"do\"\n    ],\n    \"editable\": true,\n    \"usesDefault\": false,\n    \"allowedEmpty\": false,\n    \"defaultLabels\": [\n      \"officia ex\",\n      \"mollit do non\"\n    ]\n  },\n  \"gdprDelete\": {\n    \"labels\": [\n      \"ut nostrud mollit anim\",\n      \"eu esse ut pariatur\"\n    ],\n    \"editable\": false,\n    \"usesDefault\": false,\n    \"allowedEmpty\": false,\n    \"defaultLabels\": [\n      \"deserunt id\",\n      \"ea\"\n    ]\n  },\n  \"identifiability\": {\n    \"labels\": [\n      \"proident quis\",\n      \"magna Lorem\"\n    ],\n    \"editable\": false,\n    \"usesDefault\": true,\n    \"allowedEmpty\": false,\n    \"defaultLabels\": [\n      \"sunt Excepteur\",\n      \"Lorem do exercitation dolor\"\n    ]\n  },\n  \"sensitivity\": {\n    \"labels\": [\n      \"velit ut aute consequat adipisicing\",\n      \"sint occaecat\"\n    ],\n    \"editable\": false,\n    \"usesDefault\": false,\n    \"allowedEmpty\": true,\n    \"defaultLabels\": [\n      \"occaecat \",\n      \"nisi ad\"\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/metrics/:metricId/datagovernance?rsid=aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										":metricId",
										"datagovernance"
									],
									"query": [
										{
											"key": "rsid",
											"value": "aliqua"
										}
									],
									"variable": [
										{
											"key": "metricId",
											"value": "aliqua",
											"description": "(Required) The id of the metric to modify its data governance settings."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unexpected internal server error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"namespace\": \"quis deserunt qui nulla\",\n  \"auth\": {\n    \"labels\": [\n      \"et anim aliqua enim quis\",\n      \"cupidatat deser\"\n    ],\n    \"editable\": true,\n    \"usesDefault\": false,\n    \"allowedEmpty\": true,\n    \"defaultLabels\": [\n      \"dolore veniam et\",\n      \"in dolor laboris\"\n    ]\n  },\n  \"gdprAccess\": {\n    \"labels\": [\n      \"et laborum aliquip est ut\",\n      \"do\"\n    ],\n    \"editable\": true,\n    \"usesDefault\": false,\n    \"allowedEmpty\": false,\n    \"defaultLabels\": [\n      \"officia ex\",\n      \"mollit do non\"\n    ]\n  },\n  \"gdprDelete\": {\n    \"labels\": [\n      \"ut nostrud mollit anim\",\n      \"eu esse ut pariatur\"\n    ],\n    \"editable\": false,\n    \"usesDefault\": false,\n    \"allowedEmpty\": false,\n    \"defaultLabels\": [\n      \"deserunt id\",\n      \"ea\"\n    ]\n  },\n  \"identifiability\": {\n    \"labels\": [\n      \"proident quis\",\n      \"magna Lorem\"\n    ],\n    \"editable\": false,\n    \"usesDefault\": true,\n    \"allowedEmpty\": false,\n    \"defaultLabels\": [\n      \"sunt Excepteur\",\n      \"Lorem do exercitation dolor\"\n    ]\n  },\n  \"sensitivity\": {\n    \"labels\": [\n      \"velit ut aute consequat adipisicing\",\n      \"sint occaecat\"\n    ],\n    \"editable\": false,\n    \"usesDefault\": false,\n    \"allowedEmpty\": true,\n    \"defaultLabels\": [\n      \"occaecat \",\n      \"nisi ad\"\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/metrics/:metricId/datagovernance?rsid=aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										":metricId",
										"datagovernance"
									],
									"query": [
										{
											"key": "rsid",
											"value": "aliqua"
										}
									],
									"variable": [
										{
											"key": "metricId",
											"value": "aliqua",
											"description": "(Required) The id of the metric to modify its data governance settings."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Batch modification of data governance settings for given metrics",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"namespace\": \"consectetur\",\n    \"auth\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": true,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprAccess\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": false,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprDelete\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": true,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"identifiability\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": false,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"sensitivity\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": false,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"status\": {\n      \"success\": true,\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"variableIdTranslationMessage\": \"consectetur aut\",\n      \"variableIdSavedAs\": \"labore Duis\"\n    },\n    \"variableId\": \"est\"\n  },\n  {\n    \"namespace\": \"ex ut\",\n    \"auth\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": false,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprAccess\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": true,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprDelete\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": true,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"identifiability\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": false,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"sensitivity\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": true,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"status\": {\n      \"success\": false,\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"variableIdTranslationMessage\": \"dolor nostrud\",\n      \"variableIdSavedAs\": \"dolore eiusmod adipisicing ut\"\n    },\n    \"variableId\": \"ullamco id elit\"\n  }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/metrics/:rsid/datagovernance/batch?recordsDuplicatedFromRsid=aliqua",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"metrics",
								":rsid",
								"datagovernance",
								"batch"
							],
							"query": [
								{
									"key": "recordsDuplicatedFromRsid",
									"value": "aliqua",
									"description": "RSID duplicating settings from; used to match identities across report suites (e.g. classification divs)"
								}
							],
							"variable": [
								{
									"key": "rsid",
									"value": "aliqua",
									"description": "(Required) rsid for metric."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success status; all updates successfully completed.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"namespace\": \"reprehenderit minim Excepteur in nulla\",\n    \"auth\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": false,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprAccess\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": true,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprDelete\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": true,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"identifiability\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": true,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"sensitivity\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": false,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"status\": {\n      \"success\": true,\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"variableIdTranslationMessage\": \"ullamco veniam\",\n      \"variableIdSavedAs\": \"laboris Ut\"\n    },\n    \"variableId\": \"sed laborum dolor consequ\"\n  },\n  {\n    \"namespace\": \"commodo\",\n    \"auth\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": true,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprAccess\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": false,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprDelete\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": true,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"identifiability\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": false,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"sensitivity\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": false,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"status\": {\n      \"success\": true,\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"variableIdTranslationMessage\": \"sunt irure aliqua sed\",\n      \"variableIdSavedAs\": \"ipsum tempor anim in\"\n    },\n    \"variableId\": \"ad deserunt aute\"\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/metrics/:rsid/datagovernance/batch?recordsDuplicatedFromRsid=aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										":rsid",
										"datagovernance",
										"batch"
									],
									"query": [
										{
											"key": "recordsDuplicatedFromRsid",
											"value": "aliqua"
										}
									],
									"variable": [
										{
											"key": "rsid",
											"value": "aliqua",
											"description": "(Required) rsid for metric."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"namespace\": \"consectetur\",\n    \"auth\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": true,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprAccess\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": false,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprDelete\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": true,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"identifiability\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": false,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"sensitivity\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": false,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"status\": {\n      \"success\": true,\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"variableIdTranslationMessage\": \"consectetur aut\",\n      \"variableIdSavedAs\": \"labore Duis\"\n    },\n    \"variableId\": \"est\"\n  },\n  {\n    \"namespace\": \"ex ut\",\n    \"auth\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": false,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprAccess\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": true,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprDelete\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": true,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"identifiability\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": false,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"sensitivity\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": true,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"status\": {\n      \"success\": false,\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"variableIdTranslationMessage\": \"dolor nostrud\",\n      \"variableIdSavedAs\": \"dolore eiusmod adipisicing ut\"\n    },\n    \"variableId\": \"ullamco id elit\"\n  }\n]"
						},
						{
							"name": "Multiple status; partial success, some batch settings produced errors, see individual batch setting status for details.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"namespace\": \"reprehenderit minim Excepteur in nulla\",\n    \"auth\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": false,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprAccess\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": true,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprDelete\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": true,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"identifiability\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": true,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"sensitivity\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": false,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"status\": {\n      \"success\": true,\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"variableIdTranslationMessage\": \"ullamco veniam\",\n      \"variableIdSavedAs\": \"laboris Ut\"\n    },\n    \"variableId\": \"sed laborum dolor consequ\"\n  },\n  {\n    \"namespace\": \"commodo\",\n    \"auth\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": true,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprAccess\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": false,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprDelete\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": true,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"identifiability\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": false,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"sensitivity\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": false,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"status\": {\n      \"success\": true,\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"variableIdTranslationMessage\": \"sunt irure aliqua sed\",\n      \"variableIdSavedAs\": \"ipsum tempor anim in\"\n    },\n    \"variableId\": \"ad deserunt aute\"\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/metrics/:rsid/datagovernance/batch?recordsDuplicatedFromRsid=aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										":rsid",
										"datagovernance",
										"batch"
									],
									"query": [
										{
											"key": "recordsDuplicatedFromRsid",
											"value": "aliqua"
										}
									],
									"variable": [
										{
											"key": "rsid",
											"value": "aliqua",
											"description": "(Required) rsid for metric."
										}
									]
								}
							},
							"status": "Multi-Status (WebDAV) (RFC 4918)",
							"code": 207,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"namespace\": \"consectetur\",\n    \"auth\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": true,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprAccess\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": false,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprDelete\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": true,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"identifiability\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": false,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"sensitivity\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": false,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"status\": {\n      \"success\": true,\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"variableIdTranslationMessage\": \"consectetur aut\",\n      \"variableIdSavedAs\": \"labore Duis\"\n    },\n    \"variableId\": \"est\"\n  },\n  {\n    \"namespace\": \"ex ut\",\n    \"auth\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": false,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprAccess\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": true,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprDelete\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": true,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"identifiability\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": false,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"sensitivity\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": true,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"status\": {\n      \"success\": false,\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"variableIdTranslationMessage\": \"dolor nostrud\",\n      \"variableIdSavedAs\": \"dolore eiusmod adipisicing ut\"\n    },\n    \"variableId\": \"ullamco id elit\"\n  }\n]"
						},
						{
							"name": "Invalid JSON input",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"namespace\": \"reprehenderit minim Excepteur in nulla\",\n    \"auth\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": false,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprAccess\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": true,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprDelete\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": true,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"identifiability\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": true,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"sensitivity\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": false,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"status\": {\n      \"success\": true,\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"variableIdTranslationMessage\": \"ullamco veniam\",\n      \"variableIdSavedAs\": \"laboris Ut\"\n    },\n    \"variableId\": \"sed laborum dolor consequ\"\n  },\n  {\n    \"namespace\": \"commodo\",\n    \"auth\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": true,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprAccess\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": false,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprDelete\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": true,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"identifiability\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": false,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"sensitivity\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": false,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"status\": {\n      \"success\": true,\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"variableIdTranslationMessage\": \"sunt irure aliqua sed\",\n      \"variableIdSavedAs\": \"ipsum tempor anim in\"\n    },\n    \"variableId\": \"ad deserunt aute\"\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/metrics/:rsid/datagovernance/batch?recordsDuplicatedFromRsid=aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										":rsid",
										"datagovernance",
										"batch"
									],
									"query": [
										{
											"key": "recordsDuplicatedFromRsid",
											"value": "aliqua"
										}
									],
									"variable": [
										{
											"key": "rsid",
											"value": "aliqua",
											"description": "(Required) rsid for metric."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Insufficient access to perform operation",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"namespace\": \"reprehenderit minim Excepteur in nulla\",\n    \"auth\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": false,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprAccess\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": true,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprDelete\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": true,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"identifiability\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": true,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"sensitivity\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": false,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"status\": {\n      \"success\": true,\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"variableIdTranslationMessage\": \"ullamco veniam\",\n      \"variableIdSavedAs\": \"laboris Ut\"\n    },\n    \"variableId\": \"sed laborum dolor consequ\"\n  },\n  {\n    \"namespace\": \"commodo\",\n    \"auth\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": true,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprAccess\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": false,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprDelete\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": true,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"identifiability\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": false,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"sensitivity\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": false,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"status\": {\n      \"success\": true,\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"variableIdTranslationMessage\": \"sunt irure aliqua sed\",\n      \"variableIdSavedAs\": \"ipsum tempor anim in\"\n    },\n    \"variableId\": \"ad deserunt aute\"\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/metrics/:rsid/datagovernance/batch?recordsDuplicatedFromRsid=aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										":rsid",
										"datagovernance",
										"batch"
									],
									"query": [
										{
											"key": "recordsDuplicatedFromRsid",
											"value": "aliqua"
										}
									],
									"variable": [
										{
											"key": "rsid",
											"value": "aliqua",
											"description": "(Required) rsid for metric."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unexpected internal server error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"namespace\": \"reprehenderit minim Excepteur in nulla\",\n    \"auth\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": false,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprAccess\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": true,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprDelete\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": true,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"identifiability\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": true,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"sensitivity\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": false,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"status\": {\n      \"success\": true,\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"variableIdTranslationMessage\": \"ullamco veniam\",\n      \"variableIdSavedAs\": \"laboris Ut\"\n    },\n    \"variableId\": \"sed laborum dolor consequ\"\n  },\n  {\n    \"namespace\": \"commodo\",\n    \"auth\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": true,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprAccess\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": false,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"gdprDelete\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": true,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"identifiability\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": true,\n      \"usesDefault\": false,\n      \"allowedEmpty\": true,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"sensitivity\": {\n      \"labels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"editable\": false,\n      \"usesDefault\": false,\n      \"allowedEmpty\": false,\n      \"defaultLabels\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"status\": {\n      \"success\": true,\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"variableIdTranslationMessage\": \"sunt irure aliqua sed\",\n      \"variableIdSavedAs\": \"ipsum tempor anim in\"\n    },\n    \"variableId\": \"ad deserunt aute\"\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/metrics/:rsid/datagovernance/batch?recordsDuplicatedFromRsid=aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										":rsid",
										"datagovernance",
										"batch"
									],
									"query": [
										{
											"key": "recordsDuplicatedFromRsid",
											"value": "aliqua"
										}
									],
									"variable": [
										{
											"key": "rsid",
											"value": "aliqua",
											"description": "(Required) rsid for metric."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "pastebin",
			"item": [
				{
					"name": "Saves clients data into the Paste Bin and returns an id",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/plain"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\"aliqua\""
						},
						"url": {
							"raw": "{{baseUrl}}/pastebin",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pastebin"
							]
						},
						"description": "The mime type only accepts text/plain. The data is stored into memcached. The max size is 2Meg, but this API does not do up front checking to make sure that the data is within the size range. The data storage capability of this API is limited so please contact the Adobe Analytics App team if you are considering using this API."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\"aliqua\""
								},
								"url": {
									"raw": "{{baseUrl}}/pastebin",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pastebin"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"aliqua\""
						},
						{
							"name": "Valid (non empty) pastebin data is required",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\"aliqua\""
								},
								"url": {
									"raw": "{{baseUrl}}/pastebin",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pastebin"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Retrieves an item from the paste bin object by its key",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/plain"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pastebin/:key",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pastebin",
								":key"
							],
							"variable": [
								{
									"key": "key",
									"value": "aliqua",
									"description": "(Required) The retrieval key from the post operation."
								}
							]
						},
						"description": "The mime type is text/plain and does not play nicely with swagger, but does work well on API requests."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pastebin/:key",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pastebin",
										":key"
									],
									"variable": [
										{
											"key": "key",
											"value": "aliqua",
											"description": "(Required) The retrieval key from the post operation."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": "aliqua"
						}
					]
				}
			]
		},
		{
			"name": "permissions/users",
			"item": [
				{
					"name": "me",
					"item": [
						{
							"name": "Returns a list of metrics for the user",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/permissions/users/me?rsids=aliqua&unionAll=false&cached=true&filterToPermissions=aliqua&expand=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"permissions",
										"users",
										"me"
									],
									"query": [
										{
											"key": "rsids",
											"value": "aliqua",
											"description": "get permissions that apply to this report suite, or comma delimited list of reportsuites. If no rsid is specified, only reportsuiteless permissions will be returned."
										},
										{
											"key": "unionAll",
											"value": "false",
											"description": "return the union of all permissions, without regard to report suite. If this filter is present, the rsid parameter will be ignored."
										},
										{
											"key": "cached",
											"value": "true",
											"description": "return cached results"
										},
										{
											"key": "filterToPermissions",
											"value": "aliqua",
											"description": "return only permissions in the comma delimited list of permission strings"
										},
										{
											"key": "expand",
											"value": "false",
											"description": "get expanded permissions (Omni.UI.Reporting.Dimensions.evar expands to 250 evar tokens"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/permissions/users/me?rsids=aliqua&unionAll=false&cached=true&filterToPermissions=aliqua&expand=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"permissions",
												"users",
												"me"
											],
											"query": [
												{
													"key": "rsids",
													"value": "aliqua"
												},
												{
													"key": "unionAll",
													"value": "false"
												},
												{
													"key": "cached",
													"value": "true"
												},
												{
													"key": "filterToPermissions",
													"value": "aliqua"
												},
												{
													"key": "expand",
													"value": "false"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  \"cillum minim dolore\",\n  \"ullamco a\"\n]"
								},
								{
									"name": "User Doesn't have sufficient privileges",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/permissions/users/me?rsids=aliqua&unionAll=false&cached=true&filterToPermissions=aliqua&expand=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"permissions",
												"users",
												"me"
											],
											"query": [
												{
													"key": "rsids",
													"value": "aliqua"
												},
												{
													"key": "unionAll",
													"value": "false"
												},
												{
													"key": "cached",
													"value": "true"
												},
												{
													"key": "filterToPermissions",
													"value": "aliqua"
												},
												{
													"key": "expand",
													"value": "false"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Returns a list of metrics for the user",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\"aliqua\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/permissions/users/me/search?unionAll=false&cached=true&filterToPermissions=aliqua&expand=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"permissions",
										"users",
										"me",
										"search"
									],
									"query": [
										{
											"key": "unionAll",
											"value": "false",
											"description": "return the union of all permissions, without regard to report suite. If this filter is present, the rsid parameter will be ignored."
										},
										{
											"key": "cached",
											"value": "true",
											"description": "return cached results"
										},
										{
											"key": "filterToPermissions",
											"value": "aliqua",
											"description": "return only permissions in the comma delimited list of permission strings"
										},
										{
											"key": "expand",
											"value": "false",
											"description": "get expanded permissions (Omni.UI.Reporting.Dimensions.evar expands to 250 evar tokens"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/permissions/users/me/search?unionAll=false&cached=true&filterToPermissions=aliqua&expand=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"permissions",
												"users",
												"me",
												"search"
											],
											"query": [
												{
													"key": "unionAll",
													"value": "false"
												},
												{
													"key": "cached",
													"value": "true"
												},
												{
													"key": "filterToPermissions",
													"value": "aliqua"
												},
												{
													"key": "expand",
													"value": "false"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  \"cillum minim dolore\",\n  \"ullamco a\"\n]"
								},
								{
									"name": "User Doesn't have sufficient privileges",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/permissions/users/me/search?unionAll=false&cached=true&filterToPermissions=aliqua&expand=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"permissions",
												"users",
												"me",
												"search"
											],
											"query": [
												{
													"key": "unionAll",
													"value": "false"
												},
												{
													"key": "cached",
													"value": "true"
												},
												{
													"key": "filterToPermissions",
													"value": "aliqua"
												},
												{
													"key": "expand",
													"value": "false"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Checks each of the dimensions in dimensionIds to see if the user is authorized to use them",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/permissions/users/me/dimensions?rsid=aliqua&dimensionIds=aliqua&stitched=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"permissions",
										"users",
										"me",
										"dimensions"
									],
									"query": [
										{
											"key": "rsid",
											"value": "aliqua",
											"description": "(Required) report suite to check against."
										},
										{
											"key": "dimensionIds",
											"value": "aliqua",
											"description": "(Required) comma-separated list of dimension ids to check permissions for."
										},
										{
											"key": "stitched",
											"value": "true",
											"description": "(Required) is report stitched."
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/permissions/users/me/dimensions?rsid=aliqua&dimensionIds=aliqua&stitched=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"permissions",
												"users",
												"me",
												"dimensions"
											],
											"query": [
												{
													"key": "rsid",
													"value": "aliqua"
												},
												{
													"key": "dimensionIds",
													"value": "aliqua"
												},
												{
													"key": "stitched",
													"value": "true"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"unauthorizedDimensionSets\": {\n    \"dimensionIds\": [\n      \"occaecat aute\",\n      \"dolore\"\n    ],\n    \"empty\": false\n  },\n  \"notEnabledDimensionSets\": {\n    \"dimensionIds\": [\n      \"est officia in eu\",\n      \"occaeca\"\n    ],\n    \"empty\": true\n  },\n  \"empty\": false\n}"
								},
								{
									"name": "User Doesn't have sufficient privileges",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/permissions/users/me/dimensions?rsid=aliqua&dimensionIds=aliqua&stitched=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"permissions",
												"users",
												"me",
												"dimensions"
											],
											"query": [
												{
													"key": "rsid",
													"value": "aliqua"
												},
												{
													"key": "dimensionIds",
													"value": "aliqua"
												},
												{
													"key": "stitched",
													"value": "true"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Checks each of the metrics in metricIds to see if the user is authorized to use them",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"formula\": {\n      \"aute_569\": {}\n    },\n    \"func\": \"cupidatat Lorem\",\n    \"version\": [\n      99123486,\n      -20037304\n    ],\n    \"filters\": [\n      {\n        \"nisi96\": {}\n      },\n      {\n        \"eiusmod_9f8\": {}\n      }\n    ]\n  },\n  {\n    \"formula\": {\n      \"in214\": {},\n      \"Duis5f\": {},\n      \"eiusmod651\": {},\n      \"ullamco6\": {}\n    },\n    \"func\": \"esse in occaecat\",\n    \"version\": [\n      -20194524,\n      -89725996\n    ],\n    \"filters\": [\n      {\n        \"Duis_8e0\": {}\n      },\n      {\n        \"ut_7ef\": {},\n        \"minim_d1\": {},\n        \"amet_639\": {}\n      }\n    ]\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/permissions/users/me/metrics?rsid=aliqua&metricIds=aliqua&reportingMode=false&stitched=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"permissions",
										"users",
										"me",
										"metrics"
									],
									"query": [
										{
											"key": "rsid",
											"value": "aliqua",
											"description": "(Required) report suite to check against."
										},
										{
											"key": "metricIds",
											"value": "aliqua",
											"description": "(Required) comma-separated list of metric ids to check permissions for."
										},
										{
											"key": "reportingMode",
											"value": "false",
											"description": "is in reporting mode."
										},
										{
											"key": "stitched",
											"value": "true",
											"description": "(Required) is report stitched."
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"formula\": {\n      \"dolore6_\": {}\n    },\n    \"func\": \"sunt commodo dolore\",\n    \"version\": [\n      83938413,\n      39169744\n    ],\n    \"filters\": [\n      {\n        \"sint_d\": {},\n        \"temporb4\": {}\n      },\n      {\n        \"laboris74\": {}\n      }\n    ]\n  },\n  {\n    \"formula\": {\n      \"labore_23b\": {}\n    },\n    \"func\": \"cillum Duis\",\n    \"version\": [\n      1971784,\n      -14955104\n    ],\n    \"filters\": [\n      {\n        \"non348\": {}\n      },\n      {\n        \"velitde\": {},\n        \"enim28\": {},\n        \"proident_e7f\": {}\n      }\n    ]\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/permissions/users/me/metrics?rsid=aliqua&metricIds=aliqua&reportingMode=false&stitched=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"permissions",
												"users",
												"me",
												"metrics"
											],
											"query": [
												{
													"key": "rsid",
													"value": "aliqua"
												},
												{
													"key": "metricIds",
													"value": "aliqua"
												},
												{
													"key": "reportingMode",
													"value": "false"
												},
												{
													"key": "stitched",
													"value": "true"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"unauthorizedMetricSets\": {\n    \"metricIds\": [\n      \"ipsum officia dolore exercitation\",\n      \"labor\"\n    ],\n    \"calcMetricIds\": [\n      \"nisi culpa eiusmod\",\n      \"dolore voluptate adipisicing nulla quis\"\n    ],\n    \"calculatedMetricDefs\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"empty\": false\n  },\n  \"notEnabledMetricSets\": {\n    \"metricIds\": [\n      \"anim minim laboris culpa adipisicing\",\n      \"eiusmod veli\"\n    ],\n    \"calcMetricIds\": [\n      \"ut\",\n      \"amet exercitation\"\n    ],\n    \"calculatedMetricDefs\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"empty\": false\n  },\n  \"empty\": false\n}"
								},
								{
									"name": "User Doesn't have sufficient privileges",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"formula\": {\n      \"dolore6_\": {}\n    },\n    \"func\": \"sunt commodo dolore\",\n    \"version\": [\n      83938413,\n      39169744\n    ],\n    \"filters\": [\n      {\n        \"sint_d\": {},\n        \"temporb4\": {}\n      },\n      {\n        \"laboris74\": {}\n      }\n    ]\n  },\n  {\n    \"formula\": {\n      \"labore_23b\": {}\n    },\n    \"func\": \"cillum Duis\",\n    \"version\": [\n      1971784,\n      -14955104\n    ],\n    \"filters\": [\n      {\n        \"non348\": {}\n      },\n      {\n        \"velitde\": {},\n        \"enim28\": {},\n        \"proident_e7f\": {}\n      }\n    ]\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/permissions/users/me/metrics?rsid=aliqua&metricIds=aliqua&reportingMode=false&stitched=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"permissions",
												"users",
												"me",
												"metrics"
											],
											"query": [
												{
													"key": "rsid",
													"value": "aliqua"
												},
												{
													"key": "metricIds",
													"value": "aliqua"
												},
												{
													"key": "reportingMode",
													"value": "false"
												},
												{
													"key": "stitched",
													"value": "true"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "{user Id}",
					"item": [
						{
							"name": "Returns a list of metrics for the user",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/permissions/users/:userId?rsids=aliqua&unionAll=false&cached=true&filterToPermissions=aliqua&expand=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"permissions",
										"users",
										":userId"
									],
									"query": [
										{
											"key": "rsids",
											"value": "aliqua",
											"description": "get permissions that apply to this report suite, or comma delimited list of reportsuites. If no rsid is specified, only reportsuiteless permissions will be returned."
										},
										{
											"key": "unionAll",
											"value": "false",
											"description": "return the union of all permissions, without regard to report suite. If this filter is present, the rsid parameter will be ignored."
										},
										{
											"key": "cached",
											"value": "true",
											"description": "return cached results"
										},
										{
											"key": "filterToPermissions",
											"value": "aliqua",
											"description": "return only permissions in the comma delimited list of permission strings"
										},
										{
											"key": "expand",
											"value": "false",
											"description": "get expanded permissions (Omni.UI.Reporting.Dimensions.evar expands to 250 evar tokens"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "aliqua",
											"description": "(Required) The id of the user to retrieve permissions for"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/permissions/users/:userId?rsids=aliqua&unionAll=false&cached=true&filterToPermissions=aliqua&expand=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"permissions",
												"users",
												":userId"
											],
											"query": [
												{
													"key": "rsids",
													"value": "aliqua"
												},
												{
													"key": "unionAll",
													"value": "false"
												},
												{
													"key": "cached",
													"value": "true"
												},
												{
													"key": "filterToPermissions",
													"value": "aliqua"
												},
												{
													"key": "expand",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "aliqua",
													"description": "(Required) The id of the user to retrieve permissions for"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  \"cillum minim dolore\",\n  \"ullamco a\"\n]"
								},
								{
									"name": "User Doesn't have sufficient privileges",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/permissions/users/:userId?rsids=aliqua&unionAll=false&cached=true&filterToPermissions=aliqua&expand=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"permissions",
												"users",
												":userId"
											],
											"query": [
												{
													"key": "rsids",
													"value": "aliqua"
												},
												{
													"key": "unionAll",
													"value": "false"
												},
												{
													"key": "cached",
													"value": "true"
												},
												{
													"key": "filterToPermissions",
													"value": "aliqua"
												},
												{
													"key": "expand",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "aliqua",
													"description": "(Required) The id of the user to retrieve permissions for"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Returns a list of metrics for the user",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\"aliqua\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/permissions/users/:userId/search?unionAll=false&cached=true&filterToPermissions=aliqua&expand=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"permissions",
										"users",
										":userId",
										"search"
									],
									"query": [
										{
											"key": "unionAll",
											"value": "false",
											"description": "return the union of all permissions, without regard to report suite. If this filter is present, the rsid parameter will be ignored."
										},
										{
											"key": "cached",
											"value": "true",
											"description": "return cached results"
										},
										{
											"key": "filterToPermissions",
											"value": "aliqua",
											"description": "return only permissions in the comma delimited list of permission strings"
										},
										{
											"key": "expand",
											"value": "false",
											"description": "get expanded permissions (Omni.UI.Reporting.Dimensions.evar expands to 250 evar tokens"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "aliqua",
											"description": "(Required) The id of the user to retrieve permissions for"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/permissions/users/:userId/search?unionAll=false&cached=true&filterToPermissions=aliqua&expand=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"permissions",
												"users",
												":userId",
												"search"
											],
											"query": [
												{
													"key": "unionAll",
													"value": "false"
												},
												{
													"key": "cached",
													"value": "true"
												},
												{
													"key": "filterToPermissions",
													"value": "aliqua"
												},
												{
													"key": "expand",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "aliqua",
													"description": "(Required) The id of the user to retrieve permissions for"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  \"cillum minim dolore\",\n  \"ullamco a\"\n]"
								},
								{
									"name": "User Doesn't have sufficient privileges",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/permissions/users/:userId/search?unionAll=false&cached=true&filterToPermissions=aliqua&expand=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"permissions",
												"users",
												":userId",
												"search"
											],
											"query": [
												{
													"key": "unionAll",
													"value": "false"
												},
												{
													"key": "cached",
													"value": "true"
												},
												{
													"key": "filterToPermissions",
													"value": "aliqua"
												},
												{
													"key": "expand",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "aliqua",
													"description": "(Required) The id of the user to retrieve permissions for"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "projects",
			"item": [
				{
					"name": "{project Id}",
					"item": [
						{
							"name": "Retrieves configuration for a Project.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/projects/:projectId?expansion=reportSuiteName,ownerFullName&locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":projectId"
									],
									"query": [
										{
											"key": "expansion",
											"value": "reportSuiteName,ownerFullName",
											"description": "Comma-delimited list of additional project metadata fields to include on response."
										},
										{
											"key": "locale",
											"value": "en_US",
											"description": "Locale"
										}
									],
									"variable": [
										{
											"key": "projectId",
											"value": "aliqua",
											"description": "(Required) The Project id for which to retrieve information"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/projects/:projectId?expansion=usageSummary,isDeleted&locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":projectId"
											],
											"query": [
												{
													"key": "expansion",
													"value": "usageSummary,isDeleted"
												},
												{
													"key": "locale",
													"value": "en_US"
												}
											],
											"variable": [
												{
													"key": "projectId",
													"value": "aliqua",
													"description": "(Required) The Project id for which to retrieve information"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"voluptate sed cu\",\n  \"name\": \"aliqua\",\n  \"description\": \"Lorem laboris ullamco sint\",\n  \"rsid\": \"nisi velit non exercitation\",\n  \"reportSuiteName\": \"pariatur fugiat ad et\",\n  \"owner\": {\n    \"id\": 9366892,\n    \"imsUserId\": \"do\"\n  },\n  \"isDeleted\": true,\n  \"migratedIds\": [\n    \"irure amet\",\n    \"elit\"\n  ],\n  \"internal\": false,\n  \"companyTemplate\": true,\n  \"template\": false,\n  \"type\": \"project\",\n  \"definition\": {},\n  \"externalReferences\": {\n    \"esse96\": [\n      \"cillum veniam adipisicing\",\n      \"est dolore reprehenderit quis eu\"\n    ],\n    \"elit13\": [\n      \"irure veniam est eiusmod\",\n      \"eu consectetur qui culpa\"\n    ],\n    \"labore_c\": [\n      \"sint reprehenderit non\",\n      \"nostrud reprehenderit\"\n    ]\n  },\n  \"accessLevel\": \"ad dolore anim\",\n  \"complexity\": {\n    \"proidente_\": {},\n    \"nulla_97a\": {}\n  },\n  \"tags\": [\n    {\n      \"id\": 70360614,\n      \"name\": \"cillum esse ex nostrud\",\n      \"description\": \"officia\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": 4859659,\n      \"name\": \"ea in\",\n      \"description\": \"et\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"usageSummary\": {\n    \"count\": 23306833,\n    \"mostRecentTimestamp\": \"1971-02-02T14:06:08.800Z\",\n    \"itemId\": \"enim\",\n    \"relevancyScore\": -14478500.551336423,\n    \"companyCount\": 78183584\n  },\n  \"shares\": [\n    {\n      \"componentId\": \"l\",\n      \"shareToId\": -46541973,\n      \"shareToType\": \"esse enim aliquip ex\",\n      \"shareId\": -99342163,\n      \"componentType\": \"magna\",\n      \"shareToDisplayName\": \"ipsum\",\n      \"shareToLogin\": \"commodo incididunt cillum anim in\",\n      \"shareToImsUserId\": \"dolore ut occaecat\",\n      \"accessLevel\": \"incididunt cupidatat elit\"\n    },\n    {\n      \"componentId\": \"tempor esse quis voluptate\",\n      \"shareToId\": -67953051,\n      \"shareToType\": \"adipisicing\",\n      \"shareId\": -72212058,\n      \"componentType\": \"cillum aute nulla\",\n      \"shareToDisplayName\": \"pariatu\",\n      \"shareToLogin\": \"sint reprehende\",\n      \"shareToImsUserId\": \"ad id officia in\",\n      \"accessLevel\": \"eu est\"\n    }\n  ],\n  \"approved\": false,\n  \"favorite\": false,\n  \"alternateVariableNames\": {\n    \"name\": \"est aliquip\",\n    \"baseName\": \"dolor aliqua\",\n    \"curatedName\": \"nulla\"\n  },\n  \"siteTitle\": \"ullamco adipisicing\",\n  \"modified\": \"1965-09-24T03:57:29.898Z\",\n  \"created\": \"2003-03-23T03:48:31.239Z\"\n}"
								}
							]
						},
						{
							"name": "Updates configuration for a project.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"Lorem_6\": {},\n  \"consectetur1b7\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/projects/:projectId?expansion=reportSuiteName,ownerFullName&locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":projectId"
									],
									"query": [
										{
											"key": "expansion",
											"value": "reportSuiteName,ownerFullName",
											"description": "Comma-delimited list of additional project metadata fields to include on response."
										},
										{
											"key": "locale",
											"value": "en_US",
											"description": "Locale"
										}
									],
									"variable": [
										{
											"key": "projectId",
											"value": "aliqua",
											"description": "(Required) The Project id for which to retrieve information"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/projects/:projectId?expansion=usageSummary,isDeleted&locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":projectId"
											],
											"query": [
												{
													"key": "expansion",
													"value": "usageSummary,isDeleted"
												},
												{
													"key": "locale",
													"value": "en_US"
												}
											],
											"variable": [
												{
													"key": "projectId",
													"value": "aliqua",
													"description": "(Required) The Project id for which to retrieve information"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"voluptate sed cu\",\n  \"name\": \"aliqua\",\n  \"description\": \"Lorem laboris ullamco sint\",\n  \"rsid\": \"nisi velit non exercitation\",\n  \"reportSuiteName\": \"pariatur fugiat ad et\",\n  \"owner\": {\n    \"id\": 9366892,\n    \"imsUserId\": \"do\"\n  },\n  \"isDeleted\": true,\n  \"migratedIds\": [\n    \"irure amet\",\n    \"elit\"\n  ],\n  \"internal\": false,\n  \"companyTemplate\": true,\n  \"template\": false,\n  \"type\": \"project\",\n  \"definition\": {},\n  \"externalReferences\": {\n    \"esse96\": [\n      \"cillum veniam adipisicing\",\n      \"est dolore reprehenderit quis eu\"\n    ],\n    \"elit13\": [\n      \"irure veniam est eiusmod\",\n      \"eu consectetur qui culpa\"\n    ],\n    \"labore_c\": [\n      \"sint reprehenderit non\",\n      \"nostrud reprehenderit\"\n    ]\n  },\n  \"accessLevel\": \"ad dolore anim\",\n  \"complexity\": {\n    \"proidente_\": {},\n    \"nulla_97a\": {}\n  },\n  \"tags\": [\n    {\n      \"id\": 70360614,\n      \"name\": \"cillum esse ex nostrud\",\n      \"description\": \"officia\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": 4859659,\n      \"name\": \"ea in\",\n      \"description\": \"et\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"usageSummary\": {\n    \"count\": 23306833,\n    \"mostRecentTimestamp\": \"1971-02-02T14:06:08.800Z\",\n    \"itemId\": \"enim\",\n    \"relevancyScore\": -14478500.551336423,\n    \"companyCount\": 78183584\n  },\n  \"shares\": [\n    {\n      \"componentId\": \"l\",\n      \"shareToId\": -46541973,\n      \"shareToType\": \"esse enim aliquip ex\",\n      \"shareId\": -99342163,\n      \"componentType\": \"magna\",\n      \"shareToDisplayName\": \"ipsum\",\n      \"shareToLogin\": \"commodo incididunt cillum anim in\",\n      \"shareToImsUserId\": \"dolore ut occaecat\",\n      \"accessLevel\": \"incididunt cupidatat elit\"\n    },\n    {\n      \"componentId\": \"tempor esse quis voluptate\",\n      \"shareToId\": -67953051,\n      \"shareToType\": \"adipisicing\",\n      \"shareId\": -72212058,\n      \"componentType\": \"cillum aute nulla\",\n      \"shareToDisplayName\": \"pariatu\",\n      \"shareToLogin\": \"sint reprehende\",\n      \"shareToImsUserId\": \"ad id officia in\",\n      \"accessLevel\": \"eu est\"\n    }\n  ],\n  \"approved\": false,\n  \"favorite\": false,\n  \"alternateVariableNames\": {\n    \"name\": \"est aliquip\",\n    \"baseName\": \"dolor aliqua\",\n    \"curatedName\": \"nulla\"\n  },\n  \"siteTitle\": \"ullamco adipisicing\",\n  \"modified\": \"1965-09-24T03:57:29.898Z\",\n  \"created\": \"2003-03-23T03:48:31.239Z\"\n}"
								}
							]
						},
						{
							"name": "deletes a project.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/projects/:projectId?locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":projectId"
									],
									"query": [
										{
											"key": "locale",
											"value": "en_US",
											"description": "Locale"
										}
									],
									"variable": [
										{
											"key": "projectId",
											"value": "aliqua",
											"description": "(Required) The Project id for which to retrieve information"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/projects/:projectId?locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":projectId"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US"
												}
											],
											"variable": [
												{
													"key": "projectId",
													"value": "aliqua",
													"description": "(Required) The Project id for which to retrieve information"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"Lorem_6\": {},\n  \"consectetur1b7\": {}\n}"
								}
							]
						}
					]
				},
				{
					"name": "Returns a list of projects for the user",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/projects?includeType=companyTemplate,shared&types=project,mobileScorecard&expansion=isDeleted,modified&filterByIds=aliqua&includeDeleted=false&locale=en_US&pagination=false&filterByModifiedAfter=aliqua&ownerId=43407647&limit=10&page=0&sortDirection=ASC&sortProperty=id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects"
							],
							"query": [
								{
									"key": "includeType",
									"value": "companyTemplate,shared",
									"description": "Include additional projects not owned by user. The \"all\" option takes precedence over \"shared\". If niether guided, or project is included, both types are returned"
								},
								{
									"key": "types",
									"value": "project,mobileScorecard",
									"description": "Comma-delimited list of project types to retrieve, when nothing is provided all types will be returned."
								},
								{
									"key": "expansion",
									"value": "isDeleted,modified",
									"description": "Comma-delimited list of additional project metadata fields to include on response."
								},
								{
									"key": "filterByIds",
									"value": "aliqua",
									"description": "Filter list to only include projects in the specified list (comma-delimited list of IDs)"
								},
								{
									"key": "includeDeleted",
									"value": "false",
									"description": "DEPRECATED use deleted includeType - Include disabled/deleted projects in the response. Note: also forces the 'isDeleted' expansion"
								},
								{
									"key": "locale",
									"value": "en_US",
									"description": "Locale"
								},
								{
									"key": "pagination",
									"value": "false",
									"description": "return paginated results"
								},
								{
									"key": "filterByModifiedAfter",
									"value": "aliqua",
									"description": "Filter list to only include projects modified since this date (ISO8601 format)"
								},
								{
									"key": "ownerId",
									"value": "43407647",
									"description": "Filter list to only include projects owned by the specified loginId"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Number of results per page"
								},
								{
									"key": "page",
									"value": "0",
									"description": "Page number (base 0 - first page is \"0\")"
								},
								{
									"key": "sortDirection",
									"value": "ASC",
									"description": "Sort direction (ASC or DESC"
								},
								{
									"key": "sortProperty",
									"value": "id",
									"description": "Property to sort by (name, modified_date, id is currently allowed)"
								}
							]
						},
						"description": "This Returns the projects list primarily for the Analytics product. "
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/projects?includeType=companyTemplate,templates&types=mobileScorecard,project&expansion=isDeleted,migratedIds&filterByIds=aliqua&includeDeleted=false&locale=en_US&pagination=false&filterByModifiedAfter=aliqua&ownerId=43407647&limit=10&page=0&sortDirection=ASC&sortProperty=id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects"
									],
									"query": [
										{
											"key": "includeType",
											"value": "companyTemplate,templates"
										},
										{
											"key": "types",
											"value": "mobileScorecard,project"
										},
										{
											"key": "expansion",
											"value": "isDeleted,migratedIds"
										},
										{
											"key": "filterByIds",
											"value": "aliqua"
										},
										{
											"key": "includeDeleted",
											"value": "false"
										},
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "pagination",
											"value": "false"
										},
										{
											"key": "filterByModifiedAfter",
											"value": "aliqua"
										},
										{
											"key": "ownerId",
											"value": "43407647"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "sortDirection",
											"value": "ASC"
										},
										{
											"key": "sortProperty",
											"value": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"voluptate minim tempor\",\n  \"name\": \"dolor qui\",\n  \"description\": \"mollit esse dolore occaecat\",\n  \"rsid\": \"aute est min\",\n  \"reportSuiteName\": \"ut mollit\",\n  \"owner\": {\n    \"id\": -46496378,\n    \"imsUserId\": \"enim dolor minim non\"\n  },\n  \"isDeleted\": false,\n  \"migratedIds\": [\n    \"cillum eiusmod\",\n    \"aliquip Duis dolore sint fugiat\"\n  ],\n  \"internal\": false,\n  \"companyTemplate\": false,\n  \"template\": false,\n  \"type\": \"mobileScorecard\",\n  \"definition\": {},\n  \"externalReferences\": {\n    \"nonee4\": [\n      \"sunt qui sed ut\",\n      \"do\"\n    ]\n  },\n  \"accessLevel\": \"quis\",\n  \"complexity\": {\n    \"fugiat6a8\": {},\n    \"esta6\": {}\n  },\n  \"tags\": [\n    {\n      \"id\": 32483211,\n      \"name\": \"nostrud in\",\n      \"description\": \"consectetur cillum exercitation velit voluptate\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": 735863,\n      \"name\": \"aliqua exercitation\",\n      \"description\": \"sed\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"usageSummary\": {\n    \"count\": -54870546,\n    \"mostRecentTimestamp\": \"2000-09-27T07:24:54.514Z\",\n    \"itemId\": \"in nisi\",\n    \"relevancyScore\": 74693200.0452897,\n    \"companyCount\": -5941893\n  },\n  \"shares\": [\n    {\n      \"componentId\": \"amet Duis anim\",\n      \"shareToId\": 82175422,\n      \"shareToType\": \"Duis pariatur\",\n      \"shareId\": -46649082,\n      \"componentType\": \"deserunt aliqua\",\n      \"shareToDisplayName\": \"veniam sun\",\n      \"shareToLogin\": \"incididunt\",\n      \"shareToImsUserId\": \"do aliquip in\",\n      \"accessLevel\": \"sit qui\"\n    },\n    {\n      \"componentId\": \"fugiat dolor amet\",\n      \"shareToId\": 56026109,\n      \"shareToType\": \"quis qui dolore deserunt enim\",\n      \"shareId\": -16575743,\n      \"componentType\": \"minim do pariatur id\",\n      \"shareToDisplayName\": \"pariatur\",\n      \"shareToLogin\": \"adip\",\n      \"shareToImsUserId\": \"laboris consectetur\",\n      \"accessLevel\": \"consequat ad veniam\"\n    }\n  ],\n  \"approved\": true,\n  \"favorite\": false,\n  \"alternateVariableNames\": {\n    \"name\": \"cupidatat aute commodo\",\n    \"baseName\": \"mollit lab\",\n    \"curatedName\": \"reprehenderit id amet mollit commodo\"\n  },\n  \"siteTitle\": \"non sunt amet\",\n  \"modified\": \"1958-04-06T13:58:03.634Z\",\n  \"created\": \"2014-09-29T13:05:26.534Z\"\n}"
						}
					]
				},
				{
					"name": "Creates a single project.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"Lorem_6\": {},\n  \"consectetur1b7\": {}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/projects?expansion=reportSuiteName,ownerFullName&locale=en_US",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects"
							],
							"query": [
								{
									"key": "expansion",
									"value": "reportSuiteName,ownerFullName",
									"description": "Comma-delimited list of additional project metadata fields to include on response."
								},
								{
									"key": "locale",
									"value": "en_US",
									"description": "Locale"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/projects?expansion=usageSummary,isDeleted&locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects"
									],
									"query": [
										{
											"key": "expansion",
											"value": "usageSummary,isDeleted"
										},
										{
											"key": "locale",
											"value": "en_US"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"voluptate sed cu\",\n  \"name\": \"aliqua\",\n  \"description\": \"Lorem laboris ullamco sint\",\n  \"rsid\": \"nisi velit non exercitation\",\n  \"reportSuiteName\": \"pariatur fugiat ad et\",\n  \"owner\": {\n    \"id\": 9366892,\n    \"imsUserId\": \"do\"\n  },\n  \"isDeleted\": true,\n  \"migratedIds\": [\n    \"irure amet\",\n    \"elit\"\n  ],\n  \"internal\": false,\n  \"companyTemplate\": true,\n  \"template\": false,\n  \"type\": \"project\",\n  \"definition\": {},\n  \"externalReferences\": {\n    \"esse96\": [\n      \"cillum veniam adipisicing\",\n      \"est dolore reprehenderit quis eu\"\n    ],\n    \"elit13\": [\n      \"irure veniam est eiusmod\",\n      \"eu consectetur qui culpa\"\n    ],\n    \"labore_c\": [\n      \"sint reprehenderit non\",\n      \"nostrud reprehenderit\"\n    ]\n  },\n  \"accessLevel\": \"ad dolore anim\",\n  \"complexity\": {\n    \"proidente_\": {},\n    \"nulla_97a\": {}\n  },\n  \"tags\": [\n    {\n      \"id\": 70360614,\n      \"name\": \"cillum esse ex nostrud\",\n      \"description\": \"officia\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": 4859659,\n      \"name\": \"ea in\",\n      \"description\": \"et\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"usageSummary\": {\n    \"count\": 23306833,\n    \"mostRecentTimestamp\": \"1971-02-02T14:06:08.800Z\",\n    \"itemId\": \"enim\",\n    \"relevancyScore\": -14478500.551336423,\n    \"companyCount\": 78183584\n  },\n  \"shares\": [\n    {\n      \"componentId\": \"l\",\n      \"shareToId\": -46541973,\n      \"shareToType\": \"esse enim aliquip ex\",\n      \"shareId\": -99342163,\n      \"componentType\": \"magna\",\n      \"shareToDisplayName\": \"ipsum\",\n      \"shareToLogin\": \"commodo incididunt cillum anim in\",\n      \"shareToImsUserId\": \"dolore ut occaecat\",\n      \"accessLevel\": \"incididunt cupidatat elit\"\n    },\n    {\n      \"componentId\": \"tempor esse quis voluptate\",\n      \"shareToId\": -67953051,\n      \"shareToType\": \"adipisicing\",\n      \"shareId\": -72212058,\n      \"componentType\": \"cillum aute nulla\",\n      \"shareToDisplayName\": \"pariatu\",\n      \"shareToLogin\": \"sint reprehende\",\n      \"shareToImsUserId\": \"ad id officia in\",\n      \"accessLevel\": \"eu est\"\n    }\n  ],\n  \"approved\": false,\n  \"favorite\": false,\n  \"alternateVariableNames\": {\n    \"name\": \"est aliquip\",\n    \"baseName\": \"dolor aliqua\",\n    \"curatedName\": \"nulla\"\n  },\n  \"siteTitle\": \"ullamco adipisicing\",\n  \"modified\": \"1965-09-24T03:57:29.898Z\",\n  \"created\": \"2003-03-23T03:48:31.239Z\"\n}"
						}
					]
				},
				{
					"name": "Validates a Project definition",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\"{\\n\\\"project\\\":\\\"...project...\\\",\\n\\\"validator\\\":\\\"...validatorSchema...\\\"\\n}\"",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/projects/validate?locale=en_US",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								"validate"
							],
							"query": [
								{
									"key": "locale",
									"value": "en_US",
									"description": "Locale"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\"{\\n\\\"project\\\":\\\"...project...\\\",\\n\\\"validator\\\":\\\"...validatorSchema...\\\"\\n}\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/projects/validate?locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"validate"
									],
									"query": [
										{
											"key": "locale",
											"value": "en_US"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"valid\": false,\n  \"validatorVersion\": \"dolore \",\n  \"message\": \"aute fugiat et sit veniam\"\n}"
						},
						{
							"name": "Invalid input; definition is required. Definition must be formatted as a JSON Object.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\"{\\n\\\"project\\\":\\\"...project...\\\",\\n\\\"validator\\\":\\\"...validatorSchema...\\\"\\n}\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/projects/validate?locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"validate"
									],
									"query": [
										{
											"key": "locale",
											"value": "en_US"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "External API error; Project validation failed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\"{\\n\\\"project\\\":\\\"...project...\\\",\\n\\\"validator\\\":\\\"...validatorSchema...\\\"\\n}\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/projects/validate?locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"validate"
									],
									"query": [
										{
											"key": "locale",
											"value": "en_US"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "reports",
			"item": [
				{
					"name": "Runs a report for the request in the post body",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"Lorem_6\": {},\n  \"consectetur1b7\": {}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/reports?allowRemoteLoad=default&useCache=true&includeOberonXml=false&includePlatformPredictiveObjects=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reports"
							],
							"query": [
								{
									"key": "allowRemoteLoad",
									"value": "default",
									"description": "Controls if Oberon should remote load data.  Default behavior is true with fallback to false if remote data does not exist"
								},
								{
									"key": "useCache",
									"value": "true",
									"description": "Use caching for faster requests (Use cached dimensions to speed up permission checks - This does not do any report caching)"
								},
								{
									"key": "includeOberonXml",
									"value": "false",
									"description": "Controls if Oberon XML should be returned in the response - DEBUG ONLY"
								},
								{
									"key": "includePlatformPredictiveObjects",
									"value": "false",
									"description": "Controls if platform Predictive Objects should be returned in the response. Only available when using Anomaly Detection or Forecasting- DEBUG ONLY"
								}
							]
						},
						"description": "See the [Reporting User Guide](https://github.com/AdobeDocs/analytics-2.0-apis/blob/master/reporting-guide.md) for details."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/reports?allowRemoteLoad=default&useCache=true&includeOberonXml=false&includePlatformPredictiveObjects=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports"
									],
									"query": [
										{
											"key": "allowRemoteLoad",
											"value": "default"
										},
										{
											"key": "useCache",
											"value": "true"
										},
										{
											"key": "includeOberonXml",
											"value": "false"
										},
										{
											"key": "includePlatformPredictiveObjects",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"totalPages\": -2605842,\n  \"firstPage\": true,\n  \"lastPage\": true,\n  \"numberOfElements\": 63316244,\n  \"number\": 44341546,\n  \"totalElements\": 65226016,\n  \"message\": \"commodo elit\",\n  \"resultsTruncated\": true,\n  \"request\": {\n    \"rsid\": \"eu cillum\",\n    \"dataId\": \"commodo enim nisi sit\",\n    \"dimension\": \"esse cillum ullamco irure\",\n    \"locale\": {\n      \"script\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"country\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"variant\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"extensionKeys\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"unicodeLocaleAttributes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"unicodeLocaleKeys\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"iso3Language\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"iso3Country\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"displayLanguage\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"displayScript\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"displayCountry\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"displayVariant\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"displayName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"language\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"globalFilters\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"search\": {\n      \"clause\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"excludeItemIds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"itemIds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"empty\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"settings\": {\n      \"limit\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"page\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dimensionSort\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"countRepeatInstances\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"reflectRequest\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"suiteReportingContext\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"includeAnomalyDetection\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"includeAnnotations\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"internalAnnotations\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"includePercentChange\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"sessionExpiration\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"darkSessionsEnabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"includeLatLong\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataSchema\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"justStitchedDataSchema\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"sampling\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"samplingSeed\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"samplingUpSample\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"nonesBehavior\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isDataExportRequest\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"statistics\": {\n      \"functions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ignoreZeroes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"metricContainer\": {\n      \"metricFilters\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metrics\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"rowContainer\": {\n      \"rowFilters\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"rows\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"globalPredictiveSettings\": {\n      \"trainingPeriods\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"highAnomalies\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lowAnomalies\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"anchorDate\": \"do elit voluptate\",\n    \"bulkExportSettings\": {\n      \"blobContainerUrl\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"blobPath\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"blobSASToken\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"attributeNames\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"identityOverrides\": [\n      {\n        \"laboris_c8\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"Excepteur___\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ]\n  },\n  \"reportId\": \"eiusmod sunt Ut dolore aliquip\",\n  \"columns\": {\n    \"dimension\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"columnIds\": [\n      \"eu\",\n      \"cillum\"\n    ],\n    \"columnErrors\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"rows\": [\n    {\n      \"itemId\": \"eiusmod elit consequat\",\n      \"value\": \"qui nisi\",\n      \"rowId\": \"in\",\n      \"data\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"dataExpected\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"dataUpperBound\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"dataLowerBound\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"dataAnomalyDetected\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"percentChange\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"latitude\": 21679283.03203608,\n      \"longitude\": 65894640.73266241,\n      \"annotations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"itemId\": \"dolor velit amet\",\n      \"value\": \"enim do anim voluptate\",\n      \"rowId\": \"est pariatur\",\n      \"data\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"dataExpected\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"dataUpperBound\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"dataLowerBound\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"dataAnomalyDetected\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"percentChange\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"latitude\": 44881190.2625494,\n      \"longitude\": -94994576.50497876,\n      \"annotations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"summaryData\": {\n    \"summaryData\": {\n      \"nostrud31e\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  },\n  \"oberonRequestXML\": [\n    \"exercitation sunt dolore\",\n    \"proident non\"\n  ],\n  \"oberonResponseXML\": [\n    \"et \",\n    \"esse Excepteur laboris aliqua dolor\"\n  ],\n  \"predictiveRequestObjects\": [\n    \"laborum laboris\",\n    \"dolore fugiat\"\n  ],\n  \"predictiveResponseObjects\": [\n    \"ex\",\n    \"voluptate minim velit anim proident\"\n  ]\n}"
						},
						{
							"name": "Invalid input; name, rsid, and definition are all required. Definition must be formatted as a JSON Object.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/reports?allowRemoteLoad=default&useCache=true&includeOberonXml=false&includePlatformPredictiveObjects=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports"
									],
									"query": [
										{
											"key": "allowRemoteLoad",
											"value": "default"
										},
										{
											"key": "useCache",
											"value": "true"
										},
										{
											"key": "includeOberonXml",
											"value": "false"
										},
										{
											"key": "includePlatformPredictiveObjects",
											"value": "false"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"resource_temporarily_unavailable\",\n  \"errorDescription\": \"velit aliquip ex\",\n  \"errorId\": \"Duis nulla occaecat sit incididunt\",\n  \"errorDetails\": {\n    \"dolor_65\": {}\n  },\n  \"rootCauseService\": \"laborum eu\"\n}"
						}
					]
				},
				{
					"name": "Runs a ranked report for the report in the post body",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"Lorem_6\": {},\n  \"consectetur1b7\": {}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/reports/ranked?allowRemoteLoad=default&useCache=true&includeOberonXml=false&includePlatformPredictiveObjects=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reports",
								"ranked"
							],
							"query": [
								{
									"key": "allowRemoteLoad",
									"value": "default",
									"description": "Controls if Oberon should remote load data.  Default behavior is true with fallback to false if remote data does not exist"
								},
								{
									"key": "useCache",
									"value": "true",
									"description": "Use caching for faster requests (Use cached dimensions to speed up permission checks - This does not do any report caching)"
								},
								{
									"key": "includeOberonXml",
									"value": "false",
									"description": "Controls if Oberon XML should be returned in the response - DEBUG ONLY"
								},
								{
									"key": "includePlatformPredictiveObjects",
									"value": "false",
									"description": "Controls if platform Predictive Objects should be returned in the response. Only available when using Anomaly Detection or Forecasting- DEBUG ONLY"
								}
							]
						},
						"description": "See the [Reporting Interface wiki page](https://wiki.corp.adobe.com/display/scservices/Reporting+Interface) for details."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/reports/ranked?allowRemoteLoad=default&useCache=true&includeOberonXml=false&includePlatformPredictiveObjects=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										"ranked"
									],
									"query": [
										{
											"key": "allowRemoteLoad",
											"value": "default"
										},
										{
											"key": "useCache",
											"value": "true"
										},
										{
											"key": "includeOberonXml",
											"value": "false"
										},
										{
											"key": "includePlatformPredictiveObjects",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"totalPages\": 43780627,\n  \"firstPage\": true,\n  \"lastPage\": true,\n  \"numberOfElements\": 95953937,\n  \"number\": -8470595,\n  \"totalElements\": 311064,\n  \"message\": \"consectetur velit ipsum esse\",\n  \"resultsTruncated\": false,\n  \"request\": {\n    \"rsid\": \"anim ullamco exercitation\",\n    \"dataId\": \"in id elit\",\n    \"dimension\": \"in\",\n    \"locale\": {\n      \"script\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"country\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"variant\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"extensionKeys\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"unicodeLocaleAttributes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"unicodeLocaleKeys\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"iso3Language\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"iso3Country\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"displayLanguage\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"displayScript\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"displayCountry\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"displayVariant\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"displayName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"language\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"globalFilters\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"search\": {\n      \"clause\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"excludeItemIds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"itemIds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"empty\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"settings\": {\n      \"limit\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"page\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dimensionSort\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"countRepeatInstances\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"reflectRequest\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"suiteReportingContext\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"includeAnomalyDetection\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"includeAnnotations\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"internalAnnotations\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"includePercentChange\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"sessionExpiration\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"darkSessionsEnabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"includeLatLong\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataSchema\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"justStitchedDataSchema\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"sampling\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"samplingSeed\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"samplingUpSample\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"nonesBehavior\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isDataExportRequest\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"statistics\": {\n      \"functions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ignoreZeroes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"metricContainer\": {\n      \"metricFilters\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metrics\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"rowContainer\": {\n      \"rowFilters\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"rows\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"globalPredictiveSettings\": {\n      \"trainingPeriods\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"highAnomalies\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lowAnomalies\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"anchorDate\": \"id veniam\",\n    \"bulkExportSettings\": {\n      \"blobContainerUrl\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"blobPath\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"blobSASToken\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"attributeNames\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"identityOverrides\": [\n      {\n        \"elit7c\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dolore_c\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"minim6e1\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"veniam_122\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"deserunt529\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"tempor96\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"consequat_a1\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ]\n  },\n  \"reportId\": \"dolor laboris in culpa id\",\n  \"columns\": {\n    \"dimension\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"columnIds\": [\n      \"cupidatat\",\n      \"adipisicing elit mollit consequat ullamco\"\n    ],\n    \"columnErrors\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"rows\": [\n    {\n      \"itemId\": \"et Lorem\",\n      \"value\": \"ut adipisicing\",\n      \"rowId\": \"esse\",\n      \"data\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"dataExpected\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"dataUpperBound\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"dataLowerBound\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"dataAnomalyDetected\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"percentChange\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"latitude\": -30783409.38829589,\n      \"longitude\": -4251300.891763821,\n      \"annotations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"itemId\": \"commodo qui elit ea\",\n      \"value\": \"aliquip\",\n      \"rowId\": \"in Lorem nostrud\",\n      \"data\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"dataExpected\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"dataUpperBound\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"dataLowerBound\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"dataAnomalyDetected\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"percentChange\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"latitude\": 78496700.14480737,\n      \"longitude\": 86219599.18023011,\n      \"annotations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"summaryData\": {\n    \"summaryData\": {\n      \"ea25_\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  },\n  \"oberonRequestXML\": [\n    \"Ut nulla cillum quis\",\n    \"occaecat dolore\"\n  ],\n  \"oberonResponseXML\": [\n    \"dolore voluptate consequat\",\n    \"eu labore elit\"\n  ],\n  \"predictiveRequestObjects\": [\n    \"esse\",\n    \"co\"\n  ],\n  \"predictiveResponseObjects\": [\n    \"amet id dolor consectetur\",\n    \"Lor\"\n  ]\n}"
						},
						{
							"name": "Invalid input; name, rsid, and definition are all required. Definition must be formatted as a JSON Object.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/reports/ranked?allowRemoteLoad=default&useCache=true&includeOberonXml=false&includePlatformPredictiveObjects=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										"ranked"
									],
									"query": [
										{
											"key": "allowRemoteLoad",
											"value": "default"
										},
										{
											"key": "useCache",
											"value": "true"
										},
										{
											"key": "includeOberonXml",
											"value": "false"
										},
										{
											"key": "includePlatformPredictiveObjects",
											"value": "false"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"resource_temporarily_unavailable\",\n  \"errorDescription\": \"velit aliquip ex\",\n  \"errorId\": \"Duis nulla occaecat sit incididunt\",\n  \"errorDetails\": {\n    \"dolor_65\": {}\n  },\n  \"rootCauseService\": \"laborum eu\"\n}"
						}
					]
				},
				{
					"name": "Runs a ranked report for the report in the post body",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"Lorem_6\": {},\n  \"consectetur1b7\": {}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/reports/anomalies?allowRemoteLoad=default&useCache=true&includeOberonXml=false&includePlatformPredictiveObjects=false&modelId=aliqua",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reports",
								"anomalies"
							],
							"query": [
								{
									"key": "allowRemoteLoad",
									"value": "default",
									"description": "Controls if Oberon should remote load data.  Default behavior is true with fallback to false if remote data does not exist"
								},
								{
									"key": "useCache",
									"value": "true",
									"description": "Use caching for faster requests (Use cached dimensions to speed up permission checks - This does not do any report caching)"
								},
								{
									"key": "includeOberonXml",
									"value": "false",
									"description": "Controls if Oberon XML should be returned in the response - DEBUG ONLY"
								},
								{
									"key": "includePlatformPredictiveObjects",
									"value": "false",
									"description": "Controls if platform Predictive Objects should be returned in the response. Only available when using Anomaly Detection or Forecasting- DEBUG ONLY"
								},
								{
									"key": "modelId",
									"value": "aliqua",
									"description": "The Anomaly Detection Model Id to use for this request. A model will be created if this field is omitted."
								}
							]
						},
						"description": "This endpoint is very similar to /ranked. It will only accept an day dimension and accepts a modelID. It exists to improve performance on daily anomaly detection reports and will update the model every time it is run."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/reports/anomalies?allowRemoteLoad=default&useCache=true&includeOberonXml=false&includePlatformPredictiveObjects=false&modelId=aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										"anomalies"
									],
									"query": [
										{
											"key": "allowRemoteLoad",
											"value": "default"
										},
										{
											"key": "useCache",
											"value": "true"
										},
										{
											"key": "includeOberonXml",
											"value": "false"
										},
										{
											"key": "includePlatformPredictiveObjects",
											"value": "false"
										},
										{
											"key": "modelId",
											"value": "aliqua"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"totalPages\": 78668310,\n  \"firstPage\": true,\n  \"lastPage\": false,\n  \"numberOfElements\": 72032663,\n  \"number\": -14040981,\n  \"totalElements\": 90194649,\n  \"message\": \"amet\",\n  \"resultsTruncated\": false,\n  \"request\": {\n    \"rsid\": \"aliquip consequ\",\n    \"dataId\": \"mollit adipisicing incididunt qui\",\n    \"dimension\": \"ea exercitation\",\n    \"locale\": {\n      \"script\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"country\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"variant\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"extensionKeys\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"unicodeLocaleAttributes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"unicodeLocaleKeys\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"iso3Language\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"iso3Country\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"displayLanguage\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"displayScript\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"displayCountry\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"displayVariant\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"displayName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"language\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"globalFilters\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"search\": {\n      \"clause\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"excludeItemIds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"itemIds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"empty\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"settings\": {\n      \"limit\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"page\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dimensionSort\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"countRepeatInstances\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"reflectRequest\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"suiteReportingContext\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"includeAnomalyDetection\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"includeAnnotations\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"internalAnnotations\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"includePercentChange\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"sessionExpiration\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"darkSessionsEnabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"includeLatLong\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataSchema\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"justStitchedDataSchema\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"sampling\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"samplingSeed\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"samplingUpSample\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"nonesBehavior\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isDataExportRequest\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"statistics\": {\n      \"functions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ignoreZeroes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"metricContainer\": {\n      \"metricFilters\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metrics\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"rowContainer\": {\n      \"rowFilters\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"rows\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"globalPredictiveSettings\": {\n      \"trainingPeriods\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"highAnomalies\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lowAnomalies\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"anchorDate\": \"aute\",\n    \"bulkExportSettings\": {\n      \"blobContainerUrl\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"blobPath\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"blobSASToken\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"attributeNames\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"identityOverrides\": [\n      {\n        \"ut_70\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"cillum7\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ]\n  },\n  \"reportId\": \"consequat fugiat amet nulla dolore\",\n  \"columns\": {\n    \"dimension\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"columnIds\": [\n      \"labore in magna ut veniam\",\n      \"velit laboris e\"\n    ],\n    \"columnErrors\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"rows\": [\n    {\n      \"itemId\": \"reprehenderit nisi in labore\",\n      \"value\": \"in quis laborum\",\n      \"rowId\": \"laborum et\",\n      \"data\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"dataExpected\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"dataUpperBound\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"dataLowerBound\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"dataAnomalyDetected\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"percentChange\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"latitude\": -80455212.77335191,\n      \"longitude\": 72261002.4321998,\n      \"annotations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"itemId\": \"ex incididunt\",\n      \"value\": \"est\",\n      \"rowId\": \"sunt\",\n      \"data\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"dataExpected\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"dataUpperBound\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"dataLowerBound\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"dataAnomalyDetected\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"percentChange\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"latitude\": 93322416.74691567,\n      \"longitude\": 5320320.920399442,\n      \"annotations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"summaryData\": {\n    \"summaryData\": {\n      \"cupidatat_0\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"sit_42e\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  },\n  \"oberonRequestXML\": [\n    \"id\",\n    \"sint quis\"\n  ],\n  \"oberonResponseXML\": [\n    \"exercitation tempor sit ullamco\",\n    \"minim sint ipsum proident qui\"\n  ],\n  \"predictiveRequestObjects\": [\n    \"voluptate\",\n    \"laboris eu elit laborum cupidatat\"\n  ],\n  \"predictiveResponseObjects\": [\n    \"qui cupidatat cillum\",\n    \"\"\n  ],\n  \"modelId\": \"cillum i\"\n}"
						},
						{
							"name": "Invalid input; name, rsid, and definition are all required. Definition must be formatted as a JSON Object.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/reports/anomalies?allowRemoteLoad=default&useCache=true&includeOberonXml=false&includePlatformPredictiveObjects=false&modelId=aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										"anomalies"
									],
									"query": [
										{
											"key": "allowRemoteLoad",
											"value": "default"
										},
										{
											"key": "useCache",
											"value": "true"
										},
										{
											"key": "includeOberonXml",
											"value": "false"
										},
										{
											"key": "includePlatformPredictiveObjects",
											"value": "false"
										},
										{
											"key": "modelId",
											"value": "aliqua"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"resource_temporarily_unavailable\",\n  \"errorDescription\": \"velit aliquip ex\",\n  \"errorId\": \"Duis nulla occaecat sit incididunt\",\n  \"errorDetails\": {\n    \"dolor_65\": {}\n  },\n  \"rootCauseService\": \"laborum eu\"\n}"
						}
					]
				},
				{
					"name": "Returns a top items report for the given dimension",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/reports/topItems?rsid=aliqua&dimension=aliqua&locale=en_US&dateRange=aliqua&search-clause=aliqua&startDate=aliqua&endDate=aliqua&searchAnd=aliqua&searchOr=aliqua&searchNot=aliqua&searchPhrase=aliqua&allowRemoteLoad=default&includeOberonXml=false&limit=10&page=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reports",
								"topItems"
							],
							"query": [
								{
									"key": "rsid",
									"value": "aliqua",
									"description": "(Required) RSID to run the report against"
								},
								{
									"key": "dimension",
									"value": "aliqua",
									"description": "(Required) Dimension to run the report against. Example: \"variables/page\""
								},
								{
									"key": "locale",
									"value": "en_US",
									"description": "Locale"
								},
								{
									"key": "dateRange",
									"value": "aliqua",
									"description": "Format: YYYY-MM-DD/YYYY-MM-DD"
								},
								{
									"key": "search-clause",
									"value": "aliqua",
									"description": "General search string; wrap with single quotes. Example: 'PageABC'"
								},
								{
									"key": "startDate",
									"value": "aliqua",
									"description": "Format: YYYY-MM-DD"
								},
								{
									"key": "endDate",
									"value": "aliqua",
									"description": "Format: YYYY-MM-DD"
								},
								{
									"key": "searchAnd",
									"value": "aliqua",
									"description": "Search terms that will be AND-ed together. Space delimited."
								},
								{
									"key": "searchOr",
									"value": "aliqua",
									"description": "Search terms that will be OR-ed together. Space delimited."
								},
								{
									"key": "searchNot",
									"value": "aliqua",
									"description": "Search terms that will be treated as NOT including. Space delimited."
								},
								{
									"key": "searchPhrase",
									"value": "aliqua",
									"description": "A full search phrase that will be searched for."
								},
								{
									"key": "allowRemoteLoad",
									"value": "default",
									"description": "Controls if Oberon should remote load data.  Default behavior is true with fallback to false if remote data does not exist"
								},
								{
									"key": "includeOberonXml",
									"value": "false",
									"description": "Controls if Oberon XML should be returned in the response - DEBUG ONLY"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Number of results per page"
								},
								{
									"key": "page",
									"value": "0",
									"description": "Page number (base 0 - first page is \"0\")"
								}
							]
						},
						"description": "Get the top X items (based on paging restriction) for the specified dimension and rsid. Defaults to last 90 days.\n\nSearch Clause examples:\ncontains test: 'test'\n\n contains test or test1: 'test' OR 'test1'\n\ncontains test and test1: 'test' AND 'test1'\n\ncontains test and not (test1 or test2): 'test' AND NOT ('test1' OR 'test2')\n\ndoes not contain test: NOT 'test'\n\n"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/reports/topItems?rsid=aliqua&dimension=aliqua&locale=en_US&dateRange=aliqua&search-clause=aliqua&startDate=aliqua&endDate=aliqua&searchAnd=aliqua&searchOr=aliqua&searchNot=aliqua&searchPhrase=aliqua&allowRemoteLoad=default&includeOberonXml=false&limit=10&page=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										"topItems"
									],
									"query": [
										{
											"key": "rsid",
											"value": "aliqua"
										},
										{
											"key": "dimension",
											"value": "aliqua"
										},
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "dateRange",
											"value": "aliqua"
										},
										{
											"key": "search-clause",
											"value": "aliqua"
										},
										{
											"key": "startDate",
											"value": "aliqua"
										},
										{
											"key": "endDate",
											"value": "aliqua"
										},
										{
											"key": "searchAnd",
											"value": "aliqua"
										},
										{
											"key": "searchOr",
											"value": "aliqua"
										},
										{
											"key": "searchNot",
											"value": "aliqua"
										},
										{
											"key": "searchPhrase",
											"value": "aliqua"
										},
										{
											"key": "allowRemoteLoad",
											"value": "default"
										},
										{
											"key": "includeOberonXml",
											"value": "false"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"Lorem_6\": {},\n  \"consectetur1b7\": {}\n}"
						},
						{
							"name": "User does not have access to run this report",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/reports/topItems?rsid=aliqua&dimension=aliqua&locale=en_US&dateRange=aliqua&search-clause=aliqua&startDate=aliqua&endDate=aliqua&searchAnd=aliqua&searchOr=aliqua&searchNot=aliqua&searchPhrase=aliqua&allowRemoteLoad=default&includeOberonXml=false&limit=10&page=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										"topItems"
									],
									"query": [
										{
											"key": "rsid",
											"value": "aliqua"
										},
										{
											"key": "dimension",
											"value": "aliqua"
										},
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "dateRange",
											"value": "aliqua"
										},
										{
											"key": "search-clause",
											"value": "aliqua"
										},
										{
											"key": "startDate",
											"value": "aliqua"
										},
										{
											"key": "endDate",
											"value": "aliqua"
										},
										{
											"key": "searchAnd",
											"value": "aliqua"
										},
										{
											"key": "searchOr",
											"value": "aliqua"
										},
										{
											"key": "searchNot",
											"value": "aliqua"
										},
										{
											"key": "searchPhrase",
											"value": "aliqua"
										},
										{
											"key": "allowRemoteLoad",
											"value": "default"
										},
										{
											"key": "includeOberonXml",
											"value": "false"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "0"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unexpected error; failed to run report",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/reports/topItems?rsid=aliqua&dimension=aliqua&locale=en_US&dateRange=aliqua&search-clause=aliqua&startDate=aliqua&endDate=aliqua&searchAnd=aliqua&searchOr=aliqua&searchNot=aliqua&searchPhrase=aliqua&allowRemoteLoad=default&includeOberonXml=false&limit=10&page=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										"topItems"
									],
									"query": [
										{
											"key": "rsid",
											"value": "aliqua"
										},
										{
											"key": "dimension",
											"value": "aliqua"
										},
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "dateRange",
											"value": "aliqua"
										},
										{
											"key": "search-clause",
											"value": "aliqua"
										},
										{
											"key": "startDate",
											"value": "aliqua"
										},
										{
											"key": "endDate",
											"value": "aliqua"
										},
										{
											"key": "searchAnd",
											"value": "aliqua"
										},
										{
											"key": "searchOr",
											"value": "aliqua"
										},
										{
											"key": "searchNot",
											"value": "aliqua"
										},
										{
											"key": "searchPhrase",
											"value": "aliqua"
										},
										{
											"key": "allowRemoteLoad",
											"value": "default"
										},
										{
											"key": "includeOberonXml",
											"value": "false"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "0"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Returns a segment summary report for the segment definition in the post body",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\"aliqua\"",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/reports/segmentSummary?rsid=aliqua&locale=en_US&dateRange=aliqua&startDate=aliqua&endDate=aliqua&allowRemoteLoad=default&includeOberonXml=false&includeVisitorsMcvisid=false&includePerformanceScore=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reports",
								"segmentSummary"
							],
							"query": [
								{
									"key": "rsid",
									"value": "aliqua",
									"description": "(Required) RSID to run the report against"
								},
								{
									"key": "locale",
									"value": "en_US",
									"description": "Locale"
								},
								{
									"key": "dateRange",
									"value": "aliqua",
									"description": "Format: YYYY-MM-DD/YYYY-MM-DD"
								},
								{
									"key": "startDate",
									"value": "aliqua",
									"description": "Format: YYYY-MM-DD"
								},
								{
									"key": "endDate",
									"value": "aliqua",
									"description": "Format: YYYY-MM-DD"
								},
								{
									"key": "allowRemoteLoad",
									"value": "default",
									"description": "Controls if Oberon should remote load data.  Default behavior is true with fallback to false if remote data does not exist"
								},
								{
									"key": "includeOberonXml",
									"value": "false",
									"description": "Controls if Oberon XML should be returned in the response - DEBUG ONLY"
								},
								{
									"key": "includeVisitorsMcvisid",
									"value": "false",
									"description": "Controls if Visitors with Experience Cloud ID should be returned in the response"
								},
								{
									"key": "includePerformanceScore",
									"value": "false",
									"description": "Controls if performance score should be returned in the response"
								}
							]
						},
						"description": "Requires rsid and definition. Used to validate a segment definition and return basic reporting metrics for that definition. \n\n\nThe response contains products that the definition is compatible with, as well as a series of totals that represent how many Page Views, Visits, and Visitors the segment includes.\n\nFormat for the order of Totals in response:\n\n\n1) Number of Page Views that the segment includes for the given time period\n\n2) Number of Visits that the segment includes for the given time period\n\n3) Number of Unique Visitors that the segment includes for the given time period\n\n4) Total number of Page Views for the time period (non-segmented)\n\n5) Total number of Visits for the time period (non-segmented)\n\n6) Total number of Unique Visitors for the time period (non-segmented)\n\n\nThe overall totals (3-6) can be used with the segment totals (1-3) to determine the percentage of the segment's audience for each metric.\n\nExample definition for use in testing API below (\"Page exists\"):\n\n\n```\n\n{\n\t\"func\": \"segment\",\n\t\"container\": {\n\t\t\"func\": \"container\",\n\t\t\"context\": \"hits\",\n\t\t\"pred\": {\n\t\t\t\"func\": \"exists\",\n\t\t\t\"description\": \"Page\",\n\t\t\t\"val\": {\n\t\t\t\t\"func\": \"attr\",\n\t\t\t\t\"name\": \"variables/page\"\n\t\t\t}\n\t\t}\n\t},\n\t\"version\": [1, 0, 0]\n}\n\n\n```"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/reports/segmentSummary?rsid=aliqua&locale=en_US&dateRange=aliqua&startDate=aliqua&endDate=aliqua&allowRemoteLoad=default&includeOberonXml=false&includeVisitorsMcvisid=false&includePerformanceScore=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										"segmentSummary"
									],
									"query": [
										{
											"key": "rsid",
											"value": "aliqua"
										},
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "dateRange",
											"value": "aliqua"
										},
										{
											"key": "startDate",
											"value": "aliqua"
										},
										{
											"key": "endDate",
											"value": "aliqua"
										},
										{
											"key": "allowRemoteLoad",
											"value": "default"
										},
										{
											"key": "includeOberonXml",
											"value": "false"
										},
										{
											"key": "includeVisitorsMcvisid",
											"value": "false"
										},
										{
											"key": "includePerformanceScore",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"Lorem_6\": {},\n  \"consectetur1b7\": {}\n}"
						},
						{
							"name": "Bad JSON input; request not formatted correctly",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/reports/segmentSummary?rsid=aliqua&locale=en_US&dateRange=aliqua&startDate=aliqua&endDate=aliqua&allowRemoteLoad=default&includeOberonXml=false&includeVisitorsMcvisid=false&includePerformanceScore=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										"segmentSummary"
									],
									"query": [
										{
											"key": "rsid",
											"value": "aliqua"
										},
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "dateRange",
											"value": "aliqua"
										},
										{
											"key": "startDate",
											"value": "aliqua"
										},
										{
											"key": "endDate",
											"value": "aliqua"
										},
										{
											"key": "allowRemoteLoad",
											"value": "default"
										},
										{
											"key": "includeOberonXml",
											"value": "false"
										},
										{
											"key": "includeVisitorsMcvisid",
											"value": "false"
										},
										{
											"key": "includePerformanceScore",
											"value": "false"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "User does not have access to run this report",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/reports/segmentSummary?rsid=aliqua&locale=en_US&dateRange=aliqua&startDate=aliqua&endDate=aliqua&allowRemoteLoad=default&includeOberonXml=false&includeVisitorsMcvisid=false&includePerformanceScore=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										"segmentSummary"
									],
									"query": [
										{
											"key": "rsid",
											"value": "aliqua"
										},
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "dateRange",
											"value": "aliqua"
										},
										{
											"key": "startDate",
											"value": "aliqua"
										},
										{
											"key": "endDate",
											"value": "aliqua"
										},
										{
											"key": "allowRemoteLoad",
											"value": "default"
										},
										{
											"key": "includeOberonXml",
											"value": "false"
										},
										{
											"key": "includeVisitorsMcvisid",
											"value": "false"
										},
										{
											"key": "includePerformanceScore",
											"value": "false"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unexpected error; failed to run report",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/reports/segmentSummary?rsid=aliqua&locale=en_US&dateRange=aliqua&startDate=aliqua&endDate=aliqua&allowRemoteLoad=default&includeOberonXml=false&includeVisitorsMcvisid=false&includePerformanceScore=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										"segmentSummary"
									],
									"query": [
										{
											"key": "rsid",
											"value": "aliqua"
										},
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "dateRange",
											"value": "aliqua"
										},
										{
											"key": "startDate",
											"value": "aliqua"
										},
										{
											"key": "endDate",
											"value": "aliqua"
										},
										{
											"key": "allowRemoteLoad",
											"value": "default"
										},
										{
											"key": "includeOberonXml",
											"value": "false"
										},
										{
											"key": "includeVisitorsMcvisid",
											"value": "false"
										},
										{
											"key": "includePerformanceScore",
											"value": "false"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "segmentanalysis",
			"item": [
				{
					"name": "configdata/{rsid}",
					"item": [
						{
							"name": "Retrieves the SA configuration for the given RSID, the config contains the metrics, dimensions and segments that have been blacklisted by the user and should not be included by the UI in segment analysis requests",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/segmentanalysis/configdata/:rsid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"segmentanalysis",
										"configdata",
										":rsid"
									],
									"variable": [
										{
											"key": "rsid",
											"value": "aliqua",
											"description": "(Required) RSID to retrieve SA configuration for"
										}
									]
								},
								"description": "If the suite has a custom configuration, that will be returned. <br><br>If there is no defined custom configuration then a default configuration will be returned."
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/segmentanalysis/configdata/:rsid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"segmentanalysis",
												"configdata",
												":rsid"
											],
											"variable": [
												{
													"key": "rsid",
													"value": "aliqua",
													"description": "(Required) RSID to retrieve SA configuration for"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"segments\": [\n    {\n      \"id\": \"anim aliquip in do\",\n      \"hidden\": true\n    },\n    {\n      \"id\": \"non Duis consequat cupidatat\",\n      \"hidden\": false\n    }\n  ],\n  \"dimensions\": [\n    {\n      \"id\": \"fugiat\",\n      \"hidden\": true\n    },\n    {\n      \"id\": \"id\",\n      \"hidden\": true\n    }\n  ],\n  \"metrics\": [\n    {\n      \"id\": \"in officia ipsum\",\n      \"hidden\": true\n    },\n    {\n      \"id\": \"culpa veniam sint quis\",\n      \"hidden\": false\n    }\n  ]\n}"
								},
								{
									"name": "Failed reading from database",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/segmentanalysis/configdata/:rsid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"segmentanalysis",
												"configdata",
												":rsid"
											],
											"variable": [
												{
													"key": "rsid",
													"value": "aliqua",
													"description": "(Required) RSID to retrieve SA configuration for"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Updates the SA configuration for the given RSID",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"segments\": [\n    {\n      \"id\": \"laborum velit sed dolore\",\n      \"hidden\": false\n    },\n    {\n      \"id\": \"ut u\",\n      \"hidden\": false\n    }\n  ],\n  \"dimensions\": [\n    {\n      \"id\": \"enim ad nulla\",\n      \"hidden\": false\n    },\n    {\n      \"id\": \"et adipisicing magna aute culpa\",\n      \"hidden\": false\n    }\n  ],\n  \"metrics\": [\n    {\n      \"id\": \"ut\",\n      \"hidden\": true\n    },\n    {\n      \"id\": \"Duis do occaecat\",\n      \"hidden\": false\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/segmentanalysis/configdata/:rsid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"segmentanalysis",
										"configdata",
										":rsid"
									],
									"variable": [
										{
											"key": "rsid",
											"value": "aliqua",
											"description": "(Required) RSID to update SA configuration for"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"segments\": [\n    {\n      \"id\": \"laborum velit sed dolore\",\n      \"hidden\": false\n    },\n    {\n      \"id\": \"ut u\",\n      \"hidden\": false\n    }\n  ],\n  \"dimensions\": [\n    {\n      \"id\": \"enim ad nulla\",\n      \"hidden\": false\n    },\n    {\n      \"id\": \"et adipisicing magna aute culpa\",\n      \"hidden\": false\n    }\n  ],\n  \"metrics\": [\n    {\n      \"id\": \"ut\",\n      \"hidden\": true\n    },\n    {\n      \"id\": \"Duis do occaecat\",\n      \"hidden\": false\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/segmentanalysis/configdata/:rsid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"segmentanalysis",
												"configdata",
												":rsid"
											],
											"variable": [
												{
													"key": "rsid",
													"value": "aliqua",
													"description": "(Required) RSID to update SA configuration for"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"segments\": [\n    {\n      \"id\": \"laborum velit sed dolore\",\n      \"hidden\": false\n    },\n    {\n      \"id\": \"ut u\",\n      \"hidden\": false\n    }\n  ],\n  \"dimensions\": [\n    {\n      \"id\": \"enim ad nulla\",\n      \"hidden\": false\n    },\n    {\n      \"id\": \"et adipisicing magna aute culpa\",\n      \"hidden\": false\n    }\n  ],\n  \"metrics\": [\n    {\n      \"id\": \"ut\",\n      \"hidden\": true\n    },\n    {\n      \"id\": \"Duis do occaecat\",\n      \"hidden\": false\n    }\n  ]\n}"
								},
								{
									"name": "Failed inserting into Database",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"segments\": [\n    {\n      \"id\": \"laborum velit sed dolore\",\n      \"hidden\": false\n    },\n    {\n      \"id\": \"ut u\",\n      \"hidden\": false\n    }\n  ],\n  \"dimensions\": [\n    {\n      \"id\": \"enim ad nulla\",\n      \"hidden\": false\n    },\n    {\n      \"id\": \"et adipisicing magna aute culpa\",\n      \"hidden\": false\n    }\n  ],\n  \"metrics\": [\n    {\n      \"id\": \"ut\",\n      \"hidden\": true\n    },\n    {\n      \"id\": \"Duis do occaecat\",\n      \"hidden\": false\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/segmentanalysis/configdata/:rsid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"segmentanalysis",
												"configdata",
												":rsid"
											],
											"variable": [
												{
													"key": "rsid",
													"value": "aliqua",
													"description": "(Required) RSID to update SA configuration for"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed reading from database",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"segments\": [\n    {\n      \"id\": \"laborum velit sed dolore\",\n      \"hidden\": false\n    },\n    {\n      \"id\": \"ut u\",\n      \"hidden\": false\n    }\n  ],\n  \"dimensions\": [\n    {\n      \"id\": \"enim ad nulla\",\n      \"hidden\": false\n    },\n    {\n      \"id\": \"et adipisicing magna aute culpa\",\n      \"hidden\": false\n    }\n  ],\n  \"metrics\": [\n    {\n      \"id\": \"ut\",\n      \"hidden\": true\n    },\n    {\n      \"id\": \"Duis do occaecat\",\n      \"hidden\": false\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/segmentanalysis/configdata/:rsid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"segmentanalysis",
												"configdata",
												":rsid"
											],
											"variable": [
												{
													"key": "rsid",
													"value": "aliqua",
													"description": "(Required) RSID to update SA configuration for"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete custom SA configuration for the given RSID (set back to default)",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/segmentanalysis/configdata/:rsid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"segmentanalysis",
										"configdata",
										":rsid"
									],
									"variable": [
										{
											"key": "rsid",
											"value": "aliqua",
											"description": "(Required) RSID to delete SA configuration for"
										}
									]
								},
								"description": "This endpoint always returns a Configuration object. If delete was successful, that should be the default Configuration."
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/segmentanalysis/configdata/:rsid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"segmentanalysis",
												"configdata",
												":rsid"
											],
											"variable": [
												{
													"key": "rsid",
													"value": "aliqua",
													"description": "(Required) RSID to delete SA configuration for"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"segments\": [\n    {\n      \"id\": \"laborum velit sed dolore\",\n      \"hidden\": false\n    },\n    {\n      \"id\": \"ut u\",\n      \"hidden\": false\n    }\n  ],\n  \"dimensions\": [\n    {\n      \"id\": \"enim ad nulla\",\n      \"hidden\": false\n    },\n    {\n      \"id\": \"et adipisicing magna aute culpa\",\n      \"hidden\": false\n    }\n  ],\n  \"metrics\": [\n    {\n      \"id\": \"ut\",\n      \"hidden\": true\n    },\n    {\n      \"id\": \"Duis do occaecat\",\n      \"hidden\": false\n    }\n  ]\n}"
								},
								{
									"name": "Failed deleting from Database",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/segmentanalysis/configdata/:rsid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"segmentanalysis",
												"configdata",
												":rsid"
											],
											"variable": [
												{
													"key": "rsid",
													"value": "aliqua",
													"description": "(Required) RSID to delete SA configuration for"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed reading from database",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/segmentanalysis/configdata/:rsid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"segmentanalysis",
												"configdata",
												":rsid"
											],
											"variable": [
												{
													"key": "rsid",
													"value": "aliqua",
													"description": "(Required) RSID to delete SA configuration for"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "reports",
					"item": [
						{
							"name": "metrics",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Retrieves a specific segment analysis metric report",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "<API Key>",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/segmentanalysis/reports/metrics/:id?locale=aliqua",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"segmentanalysis",
														"reports",
														"metrics",
														":id"
													],
													"query": [
														{
															"key": "locale",
															"value": "aliqua",
															"description": "Locale to use for variable and item names"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The report id for which to retrieve information"
														}
													]
												}
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/segmentanalysis/reports/metrics/:id?locale=aliqua",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"segmentanalysis",
																"reports",
																"metrics",
																":id"
															],
															"query": [
																{
																	"key": "locale",
																	"value": "aliqua"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The report id for which to retrieve information"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"reportDefinition\": {\n    \"rsid\": \"mollit consectetur eu adipisicing comm\",\n    \"dateRange\": \"anim dolore\",\n    \"globalSegments\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"segmentToCompare\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"segmentToCompareAgainst\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"allowRemoteLoad\": \"veniam elit\",\n    \"metrics\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"id\": \"ullamco laborum\",\n  \"status\": \"fugiat mollit nostrud nisi veniam\",\n  \"timeCreated\": \"1979-08-19T02:12:27.595Z\",\n  \"timeUpdated\": \"1951-07-22T14:42:16.042Z\",\n  \"timeCompleted\": \"1994-05-09T01:18:02.475Z\",\n  \"loginId\": -88852097,\n  \"companyId\": 7061662,\n  \"progressText\": {\n    \"in_bf\": {}\n  },\n  \"errorMessage\": \"exercitation pariatur\",\n  \"reportData\": [\n    {\n      \"metric\": \"Lorem proi\",\n      \"dimension\": \"pariatur exercitation\",\n      \"dimensionValue\": \"cupidatat\",\n      \"value\": \"consectetur esse nisi\",\n      \"segment\": \"magna\",\n      \"score\": 26881379.11632587,\n      \"dimension_item\": \"amet cillum\"\n    },\n    {\n      \"metric\": \"dolor ad\",\n      \"dimension\": \"velit\",\n      \"dimensionValue\": \"ex anim\",\n      \"value\": \"reprehenderit Ut ipsum\",\n      \"segment\": \"nulla qui Duis adipisicing\",\n      \"score\": -49286871.042990744,\n      \"dimension_item\": \"Excepteur nulla\"\n    }\n  ]\n}"
												},
												{
													"name": "Data not found; Involved segment in segment analysis returned no data",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/segmentanalysis/reports/metrics/:id?locale=aliqua",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"segmentanalysis",
																"reports",
																"metrics",
																":id"
															],
															"query": [
																{
																	"key": "locale",
																	"value": "aliqua"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The report id for which to retrieve information"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"io_error\",\n  \"errorDescription\": \"ut elit id dolore\",\n  \"errorId\": \"qui veniam eiusmod Excepteur\",\n  \"errorDetails\": {\n    \"est3cf\": {}\n  },\n  \"rootCauseService\": \"ut magna Excepteur nostrud\"\n}"
												}
											]
										},
										{
											"name": "Deletes a specific segment analysis metric report",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "<API Key>",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/segmentanalysis/reports/metrics/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"segmentanalysis",
														"reports",
														"metrics",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The report id to delete"
														}
													]
												}
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/segmentanalysis/reports/metrics/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"segmentanalysis",
																"reports",
																"metrics",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The report id to delete"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"result\": \"proident sit\",\n  \"message\": \"est tempor do sed et\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Request a segment analysis metric report",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"reportDefinition\": {\n    \"rsid\": \"sit eiusmod dolor fugiat qui\",\n    \"dateRange\": \"culpa tempor cupidatat veniam\",\n    \"globalSegments\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"segmentToCompare\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"segmentToCompareAgainst\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"allowRemoteLoad\": \"irure proident ea eiusmod\",\n    \"metrics\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"id\": \"quis\",\n  \"status\": \"eu in\",\n  \"timeCreated\": \"2001-12-24T15:42:07.160Z\",\n  \"timeUpdated\": \"1991-06-17T12:25:58.376Z\",\n  \"timeCompleted\": \"1951-11-10T20:00:07.841Z\",\n  \"loginId\": -83658781,\n  \"companyId\": -4208562,\n  \"progressText\": {\n    \"Excepteurfe9\": {},\n    \"dolore3\": {}\n  },\n  \"errorMessage\": \"tempor cillum\",\n  \"reportData\": [\n    {\n      \"metric\": \"esse in deserunt\",\n      \"dimension\": \"dolore ut\",\n      \"dimensionValue\": \"non sunt aliquip minim\",\n      \"value\": \"\",\n      \"segment\": \"nulla adipisicing\",\n      \"score\": 5404436.197770625,\n      \"dimension_item\": \"ex voluptate\"\n    },\n    {\n      \"metric\": \"dolo\",\n      \"dimension\": \"quis nulla nisi\",\n      \"dimensionValue\": \"eu magna ullamco\",\n      \"value\": \"non ex Excepteur amet\",\n      \"segment\": \"reprehenderit\",\n      \"score\": 60278655.704079,\n      \"dimension_item\": \"est in velit Duis\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/segmentanalysis/reports/metrics?locale=aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"segmentanalysis",
												"reports",
												"metrics"
											],
											"query": [
												{
													"key": "locale",
													"value": "aliqua",
													"description": "Locale to use for variable and item names"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"reportDefinition\": {\n    \"rsid\": \"mollit consectetur eu adipisicing comm\",\n    \"dateRange\": \"anim dolore\",\n    \"globalSegments\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"segmentToCompare\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"segmentToCompareAgainst\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"allowRemoteLoad\": \"veniam elit\",\n    \"metrics\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"id\": \"ullamco laborum\",\n  \"status\": \"fugiat mollit nostrud nisi veniam\",\n  \"timeCreated\": \"1979-08-19T02:12:27.595Z\",\n  \"timeUpdated\": \"1951-07-22T14:42:16.042Z\",\n  \"timeCompleted\": \"1994-05-09T01:18:02.475Z\",\n  \"loginId\": -88852097,\n  \"companyId\": 7061662,\n  \"progressText\": {\n    \"in_bf\": {}\n  },\n  \"errorMessage\": \"exercitation pariatur\",\n  \"reportData\": [\n    {\n      \"metric\": \"Lorem proi\",\n      \"dimension\": \"pariatur exercitation\",\n      \"dimensionValue\": \"cupidatat\",\n      \"value\": \"consectetur esse nisi\",\n      \"segment\": \"magna\",\n      \"score\": 26881379.11632587,\n      \"dimension_item\": \"amet cillum\"\n    },\n    {\n      \"metric\": \"dolor ad\",\n      \"dimension\": \"velit\",\n      \"dimensionValue\": \"ex anim\",\n      \"value\": \"reprehenderit Ut ipsum\",\n      \"segment\": \"nulla qui Duis adipisicing\",\n      \"score\": -49286871.042990744,\n      \"dimension_item\": \"Excepteur nulla\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/segmentanalysis/reports/metrics?locale=aliqua",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"segmentanalysis",
														"reports",
														"metrics"
													],
													"query": [
														{
															"key": "locale",
															"value": "aliqua"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"reportDefinition\": {\n    \"rsid\": \"mollit consectetur eu adipisicing comm\",\n    \"dateRange\": \"anim dolore\",\n    \"globalSegments\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"segmentToCompare\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"segmentToCompareAgainst\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"allowRemoteLoad\": \"veniam elit\",\n    \"metrics\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"id\": \"ullamco laborum\",\n  \"status\": \"fugiat mollit nostrud nisi veniam\",\n  \"timeCreated\": \"1979-08-19T02:12:27.595Z\",\n  \"timeUpdated\": \"1951-07-22T14:42:16.042Z\",\n  \"timeCompleted\": \"1994-05-09T01:18:02.475Z\",\n  \"loginId\": -88852097,\n  \"companyId\": 7061662,\n  \"progressText\": {\n    \"in_bf\": {}\n  },\n  \"errorMessage\": \"exercitation pariatur\",\n  \"reportData\": [\n    {\n      \"metric\": \"Lorem proi\",\n      \"dimension\": \"pariatur exercitation\",\n      \"dimensionValue\": \"cupidatat\",\n      \"value\": \"consectetur esse nisi\",\n      \"segment\": \"magna\",\n      \"score\": 26881379.11632587,\n      \"dimension_item\": \"amet cillum\"\n    },\n    {\n      \"metric\": \"dolor ad\",\n      \"dimension\": \"velit\",\n      \"dimensionValue\": \"ex anim\",\n      \"value\": \"reprehenderit Ut ipsum\",\n      \"segment\": \"nulla qui Duis adipisicing\",\n      \"score\": -49286871.042990744,\n      \"dimension_item\": \"Excepteur nulla\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "segments",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Retrieves a specific segment analysis segment report",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "<API Key>",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/segmentanalysis/reports/segments/:id?locale=aliqua",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"segmentanalysis",
														"reports",
														"segments",
														":id"
													],
													"query": [
														{
															"key": "locale",
															"value": "aliqua",
															"description": "Locale to use for variable and item names"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The report id for which to retrieve information"
														}
													]
												}
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/segmentanalysis/reports/segments/:id?locale=aliqua",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"segmentanalysis",
																"reports",
																"segments",
																":id"
															],
															"query": [
																{
																	"key": "locale",
																	"value": "aliqua"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The report id for which to retrieve information"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"reportDefinition\": {\n    \"rsid\": \"ut Excepteur tempor fugiat\",\n    \"dateRange\": \"commodo\",\n    \"globalSegments\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"segmentToCompare\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"segmentToCompareAgainst\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"allowRemoteLoad\": \"voluptate occaecat\",\n    \"metric\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"priority\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"segments\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"id\": \"aute co\",\n  \"status\": \"dolor irure cupidata\",\n  \"timeCreated\": \"1982-09-25T23:16:50.412Z\",\n  \"timeUpdated\": \"1948-08-05T19:58:10.234Z\",\n  \"timeCompleted\": \"1982-04-24T22:52:39.695Z\",\n  \"loginId\": -20818286,\n  \"companyId\": 26375517,\n  \"progressText\": {\n    \"aute9\": {},\n    \"deserunt_4\": {},\n    \"sedf\": {}\n  },\n  \"errorMessage\": \"et proident\",\n  \"reportData\": [\n    {\n      \"metric\": \"adipisicing sed ipsum sint\",\n      \"dimension\": \"pariatur ullamco\",\n      \"dimensionValue\": \"sint irure\",\n      \"value\": \"quis consequat Ut\",\n      \"segment\": \"Lorem dolor laborum proident quis\",\n      \"score\": -47166989.62874535,\n      \"dimension_item\": \"labore\"\n    },\n    {\n      \"metric\": \"dolor\",\n      \"dimension\": \"non sint\",\n      \"dimensionValue\": \"sed aliqua incididunt deserunt ad\",\n      \"value\": \"Duis non id officia elit\",\n      \"segment\": \"Ut anim dolore sit\",\n      \"score\": -14327841.706238821,\n      \"dimension_item\": \"ut incididunt irure occaecat\"\n    }\n  ]\n}"
												},
												{
													"name": "Data not found; Involved segment in segment analysis returned no data",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/segmentanalysis/reports/segments/:id?locale=aliqua",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"segmentanalysis",
																"reports",
																"segments",
																":id"
															],
															"query": [
																{
																	"key": "locale",
																	"value": "aliqua"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The report id for which to retrieve information"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"io_error\",\n  \"errorDescription\": \"ut elit id dolore\",\n  \"errorId\": \"qui veniam eiusmod Excepteur\",\n  \"errorDetails\": {\n    \"est3cf\": {}\n  },\n  \"rootCauseService\": \"ut magna Excepteur nostrud\"\n}"
												}
											]
										},
										{
											"name": "Deletes a specific segment analysis segment report",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "<API Key>",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/segmentanalysis/reports/segments/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"segmentanalysis",
														"reports",
														"segments",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The report id to delete"
														}
													]
												}
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/segmentanalysis/reports/segments/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"segmentanalysis",
																"reports",
																"segments",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The report id to delete"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"result\": \"proident sit\",\n  \"message\": \"est tempor do sed et\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Request a segment analysis segment report",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"reportDefinition\": {\n    \"rsid\": \"voluptate incididunt mollit deserunt irure\",\n    \"dateRange\": \"ut elit\",\n    \"globalSegments\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"segmentToCompare\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"segmentToCompareAgainst\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"allowRemoteLoad\": \"ipsum est consequat\",\n    \"metric\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"priority\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"segments\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"id\": \"id in esse dolor sunt\",\n  \"status\": \"in proident veniam culpa consequat\",\n  \"timeCreated\": \"1946-05-26T08:57:39.804Z\",\n  \"timeUpdated\": \"1965-08-04T02:41:41.336Z\",\n  \"timeCompleted\": \"1993-04-28T10:23:51.310Z\",\n  \"loginId\": 81067095,\n  \"companyId\": -19690349,\n  \"progressText\": {\n    \"ipsum_7\": {},\n    \"officia__\": {}\n  },\n  \"errorMessage\": \"cupidatat et\",\n  \"reportData\": [\n    {\n      \"metric\": \"consectetur\",\n      \"dimension\": \"consequat ad\",\n      \"dimensionValue\": \"exercitation enim\",\n      \"value\": \"ex\",\n      \"segment\": \"dolore enim magna\",\n      \"score\": -67362020.85324278,\n      \"dimension_item\": \"qui aliqua ullamco\"\n    },\n    {\n      \"metric\": \"ipsum non minim eiusmod ad\",\n      \"dimension\": \"minim adipisicing in ut\",\n      \"dimensionValue\": \"dolor esse qui\",\n      \"value\": \"mollit adipisicing exercitation\",\n      \"segment\": \"ipsum\",\n      \"score\": -69072660.8117263,\n      \"dimension_item\": \"reprehenderit\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/segmentanalysis/reports/segments?locale=aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"segmentanalysis",
												"reports",
												"segments"
											],
											"query": [
												{
													"key": "locale",
													"value": "aliqua",
													"description": "Locale to use for variable and item names"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"reportDefinition\": {\n    \"rsid\": \"ut Excepteur tempor fugiat\",\n    \"dateRange\": \"commodo\",\n    \"globalSegments\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"segmentToCompare\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"segmentToCompareAgainst\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"allowRemoteLoad\": \"voluptate occaecat\",\n    \"metric\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"priority\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"segments\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"id\": \"aute co\",\n  \"status\": \"dolor irure cupidata\",\n  \"timeCreated\": \"1982-09-25T23:16:50.412Z\",\n  \"timeUpdated\": \"1948-08-05T19:58:10.234Z\",\n  \"timeCompleted\": \"1982-04-24T22:52:39.695Z\",\n  \"loginId\": -20818286,\n  \"companyId\": 26375517,\n  \"progressText\": {\n    \"aute9\": {},\n    \"deserunt_4\": {},\n    \"sedf\": {}\n  },\n  \"errorMessage\": \"et proident\",\n  \"reportData\": [\n    {\n      \"metric\": \"adipisicing sed ipsum sint\",\n      \"dimension\": \"pariatur ullamco\",\n      \"dimensionValue\": \"sint irure\",\n      \"value\": \"quis consequat Ut\",\n      \"segment\": \"Lorem dolor laborum proident quis\",\n      \"score\": -47166989.62874535,\n      \"dimension_item\": \"labore\"\n    },\n    {\n      \"metric\": \"dolor\",\n      \"dimension\": \"non sint\",\n      \"dimensionValue\": \"sed aliqua incididunt deserunt ad\",\n      \"value\": \"Duis non id officia elit\",\n      \"segment\": \"Ut anim dolore sit\",\n      \"score\": -14327841.706238821,\n      \"dimension_item\": \"ut incididunt irure occaecat\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/segmentanalysis/reports/segments?locale=aliqua",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"segmentanalysis",
														"reports",
														"segments"
													],
													"query": [
														{
															"key": "locale",
															"value": "aliqua"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"reportDefinition\": {\n    \"rsid\": \"ut Excepteur tempor fugiat\",\n    \"dateRange\": \"commodo\",\n    \"globalSegments\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"segmentToCompare\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"segmentToCompareAgainst\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"allowRemoteLoad\": \"voluptate occaecat\",\n    \"metric\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"priority\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"segments\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"id\": \"aute co\",\n  \"status\": \"dolor irure cupidata\",\n  \"timeCreated\": \"1982-09-25T23:16:50.412Z\",\n  \"timeUpdated\": \"1948-08-05T19:58:10.234Z\",\n  \"timeCompleted\": \"1982-04-24T22:52:39.695Z\",\n  \"loginId\": -20818286,\n  \"companyId\": 26375517,\n  \"progressText\": {\n    \"aute9\": {},\n    \"deserunt_4\": {},\n    \"sedf\": {}\n  },\n  \"errorMessage\": \"et proident\",\n  \"reportData\": [\n    {\n      \"metric\": \"adipisicing sed ipsum sint\",\n      \"dimension\": \"pariatur ullamco\",\n      \"dimensionValue\": \"sint irure\",\n      \"value\": \"quis consequat Ut\",\n      \"segment\": \"Lorem dolor laborum proident quis\",\n      \"score\": -47166989.62874535,\n      \"dimension_item\": \"labore\"\n    },\n    {\n      \"metric\": \"dolor\",\n      \"dimension\": \"non sint\",\n      \"dimensionValue\": \"sed aliqua incididunt deserunt ad\",\n      \"value\": \"Duis non id officia elit\",\n      \"segment\": \"Ut anim dolore sit\",\n      \"score\": -14327841.706238821,\n      \"dimension_item\": \"ut incididunt irure occaecat\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "dimensions",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Retrieves a specific segment analysis dimension report",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "<API Key>",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/segmentanalysis/reports/dimensions/:id?expansion=textValues,textValues&locale=aliqua",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"segmentanalysis",
														"reports",
														"dimensions",
														":id"
													],
													"query": [
														{
															"key": "expansion",
															"value": "textValues,textValues",
															"description": "Comma-delimited list of additional metadata fields to include on response."
														},
														{
															"key": "locale",
															"value": "aliqua",
															"description": "Locale to use for variable and item names"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The report id for which to retrieve information"
														}
													]
												}
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/segmentanalysis/reports/dimensions/:id?expansion=textValues,textValues&locale=aliqua",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"segmentanalysis",
																"reports",
																"dimensions",
																":id"
															],
															"query": [
																{
																	"key": "expansion",
																	"value": "textValues,textValues"
																},
																{
																	"key": "locale",
																	"value": "aliqua"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The report id for which to retrieve information"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"reportDefinition\": {\n    \"rsid\": \"ullamco eu\",\n    \"dateRange\": \"ut a\",\n    \"globalSegments\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"segmentToCompare\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"segmentToCompareAgainst\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"allowRemoteLoad\": \"occaecat anim\",\n    \"metric\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"priority\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"dimensions\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"id\": \"culpa consectetur\",\n  \"status\": \"aliquip dolor esse\",\n  \"timeCreated\": \"1991-02-21T23:21:39.293Z\",\n  \"timeUpdated\": \"2020-05-02T04:35:03.970Z\",\n  \"timeCompleted\": \"1999-05-16T02:53:08.913Z\",\n  \"loginId\": -26067974,\n  \"companyId\": -59019387,\n  \"progressText\": {\n    \"laborumc\": {}\n  },\n  \"errorMessage\": \"laborum\",\n  \"reportData\": [\n    {\n      \"metric\": \"ea officia\",\n      \"dimension\": \"consequat minim\",\n      \"dimensionValue\": \"do sint sit adipisicing\",\n      \"value\": \"minim sit tempor magna officia\",\n      \"segment\": \"labore exercitation nostrud aute\",\n      \"score\": -32753144.965046003,\n      \"dimension_item\": \"est Ut incid\"\n    },\n    {\n      \"metric\": \"irure ut culpa ipsum\",\n      \"dimension\": \"dolor Excepteur cillum exercitation\",\n      \"dimensionValue\": \"pariatur ex aute\",\n      \"value\": \"reprehenderit ipsum est\",\n      \"segment\": \"Excepteur dolore in\",\n      \"score\": 17772537.523322195,\n      \"dimension_item\": \"voluptate magna adipisicing Excep\"\n    }\n  ]\n}"
												},
												{
													"name": "Data not found; Involved segment in segment analysis returned no data",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/segmentanalysis/reports/dimensions/:id?expansion=textValues,textValues&locale=aliqua",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"segmentanalysis",
																"reports",
																"dimensions",
																":id"
															],
															"query": [
																{
																	"key": "expansion",
																	"value": "textValues,textValues"
																},
																{
																	"key": "locale",
																	"value": "aliqua"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The report id for which to retrieve information"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"io_error\",\n  \"errorDescription\": \"ut elit id dolore\",\n  \"errorId\": \"qui veniam eiusmod Excepteur\",\n  \"errorDetails\": {\n    \"est3cf\": {}\n  },\n  \"rootCauseService\": \"ut magna Excepteur nostrud\"\n}"
												}
											]
										},
										{
											"name": "Deletes a specific segment analysis dimension report",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "<API Key>",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/segmentanalysis/reports/dimensions/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"segmentanalysis",
														"reports",
														"dimensions",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The report id to delete"
														}
													]
												}
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/segmentanalysis/reports/dimensions/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"segmentanalysis",
																"reports",
																"dimensions",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The report id to delete"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"result\": \"proident sit\",\n  \"message\": \"est tempor do sed et\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Request a segment analysis dimension report",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"reportDefinition\": {\n    \"rsid\": \"incididunt do aliquip\",\n    \"dateRange\": \"dolore elit labore aliquip\",\n    \"globalSegments\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"segmentToCompare\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"segmentToCompareAgainst\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"allowRemoteLoad\": \"adipisicing culpa est\",\n    \"metric\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"priority\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"dimensions\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"id\": \"tempor\",\n  \"status\": \"consequat deserunt\",\n  \"timeCreated\": \"1952-09-23T22:37:18.668Z\",\n  \"timeUpdated\": \"1978-12-06T14:19:51.747Z\",\n  \"timeCompleted\": \"1989-12-28T05:04:48.487Z\",\n  \"loginId\": 38974896,\n  \"companyId\": 17862199,\n  \"progressText\": {\n    \"aliquip64a\": {},\n    \"deserunt87a\": {},\n    \"eiusmod3\": {},\n    \"autec1\": {}\n  },\n  \"errorMessage\": \"deserunt in veniam\",\n  \"reportData\": [\n    {\n      \"metric\": \"nisi commodo aliqua\",\n      \"dimension\": \"et ipsum culpa\",\n      \"dimensionValue\": \"eiusmod quis\",\n      \"value\": \"qui ut consectetur\",\n      \"segment\": \"incididunt\",\n      \"score\": 57876866.82201731,\n      \"dimension_item\": \"magna qui\"\n    },\n    {\n      \"metric\": \"ea dolore\",\n      \"dimension\": \"reprehenderit enim irure\",\n      \"dimensionValue\": \"ad cupidatat sed dolor\",\n      \"value\": \"reprehenderit pariatur\",\n      \"segment\": \"voluptate exe\",\n      \"score\": -71364124.66498227,\n      \"dimension_item\": \"nisi velit\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/segmentanalysis/reports/dimensions?expansion=textValues,textValues&locale=aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"segmentanalysis",
												"reports",
												"dimensions"
											],
											"query": [
												{
													"key": "expansion",
													"value": "textValues,textValues",
													"description": "Comma-delimited list of additional metadata fields to include on response."
												},
												{
													"key": "locale",
													"value": "aliqua",
													"description": "Locale to use for variable and item names"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"reportDefinition\": {\n    \"rsid\": \"ullamco eu\",\n    \"dateRange\": \"ut a\",\n    \"globalSegments\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"segmentToCompare\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"segmentToCompareAgainst\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"allowRemoteLoad\": \"occaecat anim\",\n    \"metric\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"priority\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"dimensions\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"id\": \"culpa consectetur\",\n  \"status\": \"aliquip dolor esse\",\n  \"timeCreated\": \"1991-02-21T23:21:39.293Z\",\n  \"timeUpdated\": \"2020-05-02T04:35:03.970Z\",\n  \"timeCompleted\": \"1999-05-16T02:53:08.913Z\",\n  \"loginId\": -26067974,\n  \"companyId\": -59019387,\n  \"progressText\": {\n    \"laborumc\": {}\n  },\n  \"errorMessage\": \"laborum\",\n  \"reportData\": [\n    {\n      \"metric\": \"ea officia\",\n      \"dimension\": \"consequat minim\",\n      \"dimensionValue\": \"do sint sit adipisicing\",\n      \"value\": \"minim sit tempor magna officia\",\n      \"segment\": \"labore exercitation nostrud aute\",\n      \"score\": -32753144.965046003,\n      \"dimension_item\": \"est Ut incid\"\n    },\n    {\n      \"metric\": \"irure ut culpa ipsum\",\n      \"dimension\": \"dolor Excepteur cillum exercitation\",\n      \"dimensionValue\": \"pariatur ex aute\",\n      \"value\": \"reprehenderit ipsum est\",\n      \"segment\": \"Excepteur dolore in\",\n      \"score\": 17772537.523322195,\n      \"dimension_item\": \"voluptate magna adipisicing Excep\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/segmentanalysis/reports/dimensions?expansion=textValues,textValues&locale=aliqua",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"segmentanalysis",
														"reports",
														"dimensions"
													],
													"query": [
														{
															"key": "expansion",
															"value": "textValues,textValues"
														},
														{
															"key": "locale",
															"value": "aliqua"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"reportDefinition\": {\n    \"rsid\": \"ullamco eu\",\n    \"dateRange\": \"ut a\",\n    \"globalSegments\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"segmentToCompare\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"segmentToCompareAgainst\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"definition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"allowRemoteLoad\": \"occaecat anim\",\n    \"metric\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"priority\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"dimensions\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"id\": \"culpa consectetur\",\n  \"status\": \"aliquip dolor esse\",\n  \"timeCreated\": \"1991-02-21T23:21:39.293Z\",\n  \"timeUpdated\": \"2020-05-02T04:35:03.970Z\",\n  \"timeCompleted\": \"1999-05-16T02:53:08.913Z\",\n  \"loginId\": -26067974,\n  \"companyId\": -59019387,\n  \"progressText\": {\n    \"laborumc\": {}\n  },\n  \"errorMessage\": \"laborum\",\n  \"reportData\": [\n    {\n      \"metric\": \"ea officia\",\n      \"dimension\": \"consequat minim\",\n      \"dimensionValue\": \"do sint sit adipisicing\",\n      \"value\": \"minim sit tempor magna officia\",\n      \"segment\": \"labore exercitation nostrud aute\",\n      \"score\": -32753144.965046003,\n      \"dimension_item\": \"est Ut incid\"\n    },\n    {\n      \"metric\": \"irure ut culpa ipsum\",\n      \"dimension\": \"dolor Excepteur cillum exercitation\",\n      \"dimensionValue\": \"pariatur ex aute\",\n      \"value\": \"reprehenderit ipsum est\",\n      \"segment\": \"Excepteur dolore in\",\n      \"score\": 17772537.523322195,\n      \"dimension_item\": \"voluptate magna adipisicing Excep\"\n    }\n  ]\n}"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "segments",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Get a Single Segment",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/segments/:id?expansion=customerJourney,virtualReportSuites&toBeUsedInRsid=aliqua&locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"segments",
										":id"
									],
									"query": [
										{
											"key": "expansion",
											"value": "customerJourney,virtualReportSuites",
											"description": "Comma-delimited list of additional segment metadata fields to include on response."
										},
										{
											"key": "toBeUsedInRsid",
											"value": "aliqua",
											"description": "Evaluate the reportTimeAttribution/customerJourney compatibility for the provided report suite ID"
										},
										{
											"key": "locale",
											"value": "en_US",
											"description": "Locale"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The segment ID to retrieve"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/segments/:id?expansion=categories,aamStatus&toBeUsedInRsid=aliqua&locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"segments",
												":id"
											],
											"query": [
												{
													"key": "expansion",
													"value": "categories,aamStatus"
												},
												{
													"key": "toBeUsedInRsid",
													"value": "aliqua"
												},
												{
													"key": "locale",
													"value": "en_US"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The segment ID to retrieve"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"aute irure\",\n  \"modified\": \"aute non voluptate id ea\",\n  \"name\": \"aliqua Lore\",\n  \"description\": \"sit ad anim aliqua\",\n  \"revision\": -86254484,\n  \"created_by\": \"occaecat voluptate nostrud\",\n  \"create_date\": \"i\",\n  \"usage\": {\n    \"velit_d40\": {},\n    \"cupidatat_b\": {}\n  },\n  \"compatibility\": {\n    \"adipisicing_1bd\": {},\n    \"aliqua_5aa\": {},\n    \"irure7d8\": {},\n    \"irure_602\": {}\n  },\n  \"disabled\": false,\n  \"migratedIds\": [\n    \"pariatur\",\n    \"ullamco Duis proident in\"\n  ],\n  \"template\": true,\n  \"dataGroup\": \"velit fugiat incididunt qui amet\",\n  \"dwInUse\": false,\n  \"asiInUse\": true,\n  \"aamStatus\": {\n    \"fugiat_847\": {},\n    \"ea_318\": {},\n    \"eaf0\": {}\n  },\n  \"customerJourney\": true,\n  \"reportTimeAttribution\": true,\n  \"publishingStatus\": {\n    \"published\": true,\n    \"publishedDate\": \"1986-06-19T09:49:10.753Z\",\n    \"lookbackPeriod\": 61021640,\n    \"lookbackGranularity\": \"dolore in elit\"\n  },\n  \"definitionLastModified\": \"2002-07-07T06:40:17.173Z\",\n  \"categories\": [\n    \"voluptate nisi veniam incididunt\",\n    \"ex officia pariatur est\"\n  ],\n  \"recentRecordedAccess\": \"1953-01-30T09:29:54.472Z\",\n  \"owner\": \"ea tempor consequat\",\n  \"definition\": {\n    \"enim2_0\": {}\n  },\n  \"status\": \"do\",\n  \"report_suite\": \"do Duis\",\n  \"legacy_id\": \"aute ad eiusmod dolore adipisicing\",\n  \"internal\": false,\n  \"organization\": \"qui\",\n  \"user\": \"nostrud sed ad in\",\n  \"_id\": \"magna\",\n  \"legacyId\": \"ut culpa fugiat dolor\"\n}"
								},
								{
									"name": "Requesting non-shared segments for other users is restricted to admin users",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/segments/:id?expansion=categories,aamStatus&toBeUsedInRsid=aliqua&locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"segments",
												":id"
											],
											"query": [
												{
													"key": "expansion",
													"value": "categories,aamStatus"
												},
												{
													"key": "toBeUsedInRsid",
													"value": "aliqua"
												},
												{
													"key": "locale",
													"value": "en_US"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The segment ID to retrieve"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "External API error; segment retrieval failed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/segments/:id?expansion=categories,aamStatus&toBeUsedInRsid=aliqua&locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"segments",
												":id"
											],
											"query": [
												{
													"key": "expansion",
													"value": "categories,aamStatus"
												},
												{
													"key": "toBeUsedInRsid",
													"value": "aliqua"
												},
												{
													"key": "locale",
													"value": "en_US"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The segment ID to retrieve"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update a Segment",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"Lorem_6\": {},\n  \"consectetur1b7\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/segments/:id?expansion=customerJourney,virtualReportSuites&locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"segments",
										":id"
									],
									"query": [
										{
											"key": "expansion",
											"value": "customerJourney,virtualReportSuites",
											"description": "Comma-delimited list of additional segment metadata fields to include on response."
										},
										{
											"key": "locale",
											"value": "en_US",
											"description": "Locale"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) Segment ID to be updated"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/segments/:id?expansion=categories,aamStatus&locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"segments",
												":id"
											],
											"query": [
												{
													"key": "expansion",
													"value": "categories,aamStatus"
												},
												{
													"key": "locale",
													"value": "en_US"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) Segment ID to be updated"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"aute irure\",\n  \"modified\": \"aute non voluptate id ea\",\n  \"name\": \"aliqua Lore\",\n  \"description\": \"sit ad anim aliqua\",\n  \"revision\": -86254484,\n  \"created_by\": \"occaecat voluptate nostrud\",\n  \"create_date\": \"i\",\n  \"usage\": {\n    \"velit_d40\": {},\n    \"cupidatat_b\": {}\n  },\n  \"compatibility\": {\n    \"adipisicing_1bd\": {},\n    \"aliqua_5aa\": {},\n    \"irure7d8\": {},\n    \"irure_602\": {}\n  },\n  \"disabled\": false,\n  \"migratedIds\": [\n    \"pariatur\",\n    \"ullamco Duis proident in\"\n  ],\n  \"template\": true,\n  \"dataGroup\": \"velit fugiat incididunt qui amet\",\n  \"dwInUse\": false,\n  \"asiInUse\": true,\n  \"aamStatus\": {\n    \"fugiat_847\": {},\n    \"ea_318\": {},\n    \"eaf0\": {}\n  },\n  \"customerJourney\": true,\n  \"reportTimeAttribution\": true,\n  \"publishingStatus\": {\n    \"published\": true,\n    \"publishedDate\": \"1986-06-19T09:49:10.753Z\",\n    \"lookbackPeriod\": 61021640,\n    \"lookbackGranularity\": \"dolore in elit\"\n  },\n  \"definitionLastModified\": \"2002-07-07T06:40:17.173Z\",\n  \"categories\": [\n    \"voluptate nisi veniam incididunt\",\n    \"ex officia pariatur est\"\n  ],\n  \"recentRecordedAccess\": \"1953-01-30T09:29:54.472Z\",\n  \"owner\": \"ea tempor consequat\",\n  \"definition\": {\n    \"enim2_0\": {}\n  },\n  \"status\": \"do\",\n  \"report_suite\": \"do Duis\",\n  \"legacy_id\": \"aute ad eiusmod dolore adipisicing\",\n  \"internal\": false,\n  \"organization\": \"qui\",\n  \"user\": \"nostrud sed ad in\",\n  \"_id\": \"magna\",\n  \"legacyId\": \"ut culpa fugiat dolor\"\n}"
								},
								{
									"name": "Definition must be formatted as a JSON Object",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/segments/:id?expansion=categories,aamStatus&locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"segments",
												":id"
											],
											"query": [
												{
													"key": "expansion",
													"value": "categories,aamStatus"
												},
												{
													"key": "locale",
													"value": "en_US"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) Segment ID to be updated"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Company mismatch; segment ownership can only be transferred within the same organization",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/segments/:id?expansion=categories,aamStatus&locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"segments",
												":id"
											],
											"query": [
												{
													"key": "expansion",
													"value": "categories,aamStatus"
												},
												{
													"key": "locale",
													"value": "en_US"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) Segment ID to be updated"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User does not have permission to update this segment",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/segments/:id?expansion=categories,aamStatus&locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"segments",
												":id"
											],
											"query": [
												{
													"key": "expansion",
													"value": "categories,aamStatus"
												},
												{
													"key": "locale",
													"value": "en_US"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) Segment ID to be updated"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "External API error; Segment update or retrieval failed",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/segments/:id?expansion=categories,aamStatus&locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"segments",
												":id"
											],
											"query": [
												{
													"key": "expansion",
													"value": "categories,aamStatus"
												},
												{
													"key": "locale",
													"value": "en_US"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) Segment ID to be updated"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete Segment",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/segments/:id?locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"segments",
										":id"
									],
									"query": [
										{
											"key": "locale",
											"value": "en_US",
											"description": "Locale"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The segment ID to be deleted"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/segments/:id?locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"segments",
												":id"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The segment ID to be deleted"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"aliqua\""
								},
								{
									"name": "External API error; Segment delete failed",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/segments/:id?locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"segments",
												":id"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The segment ID to be deleted"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Retrieve All Segments",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/segments?expansion=modified,customerJourney&includeType=curatedItem,templates&rsids=aliqua&dataType=dw&ownerId=43407647&segmentFilter=aliqua&filterByIds=aliqua&toBeUsedInRsid=aliqua&includeDeleted=false&reportTimeAttribution=true&locale=en_US&name=aliqua&tagNames=aliqua&filterByModifiedAfter=aliqua&pagination=true&dataGroup=aliqua&curatedRsid=aliqua&filterByPublishedSegments=all&cached=true&limit=10&page=0&sortDirection=ASC&sortProperty=id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"segments"
							],
							"query": [
								{
									"key": "expansion",
									"value": "modified,customerJourney",
									"description": "Comma-delimited list of additional segment metadata fields to include on response."
								},
								{
									"key": "includeType",
									"value": "curatedItem,templates",
									"description": "Include additional segments not owned by user. The \"all\" option takes precedence over \"shared\""
								},
								{
									"key": "rsids",
									"value": "aliqua",
									"description": "Filter list to only include segments tied to specified RSID list (comma-delimited)"
								},
								{
									"key": "dataType",
									"value": "dw",
									"description": "Filter list to only include segments compatible with the specified product"
								},
								{
									"key": "ownerId",
									"value": "43407647",
									"description": "Filter list to only include segments owned by the specified loginId"
								},
								{
									"key": "segmentFilter",
									"value": "aliqua",
									"description": "Filter list to only include segments in the specified list (comma-delimited list of IDs)"
								},
								{
									"key": "filterByIds",
									"value": "aliqua",
									"description": "Filter list to only include segments in the specified list (comma-delimited list of IDs) (this is the same as segmentFilter, and is overwritten by segmentFilter"
								},
								{
									"key": "toBeUsedInRsid",
									"value": "aliqua",
									"description": "Required when reportTimeAttribution != null or expansion=reportTimeAttribution"
								},
								{
									"key": "includeDeleted",
									"value": "false",
									"description": "DEPRECATED use deleted includeType - Include disabled/deleted segments in the response. Note: also forces the 'isDeleted' expansion"
								},
								{
									"key": "reportTimeAttribution",
									"value": "true",
									"description": "Filter list to only include segments by reportTimeAttribution"
								},
								{
									"key": "locale",
									"value": "en_US",
									"description": "Locale"
								},
								{
									"key": "name",
									"value": "aliqua",
									"description": "Filter list to only include segments that contains the Name"
								},
								{
									"key": "tagNames",
									"value": "aliqua",
									"description": "Filter list to only include segments that contains one of the tags"
								},
								{
									"key": "filterByModifiedAfter",
									"value": "aliqua",
									"description": "Filter list to only include segments modified since this date (ISO8601 format)"
								},
								{
									"key": "pagination",
									"value": "true",
									"description": "Return paginated results"
								},
								{
									"key": "dataGroup",
									"value": "aliqua",
									"description": "Filter list to only include segments with the given data group"
								},
								{
									"key": "curatedRsid",
									"value": "aliqua",
									"description": "Include the curatedItem status for given report suite ID"
								},
								{
									"key": "filterByPublishedSegments",
									"value": "all",
									"description": "Filter list to only include segments where the published field is set to one of the allowable values (all, true, false)."
								},
								{
									"key": "cached",
									"value": "true",
									"description": "return cached results"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Number of results per page"
								},
								{
									"key": "page",
									"value": "0",
									"description": "Page number (base 0 - first page is \"0\")"
								},
								{
									"key": "sortDirection",
									"value": "ASC",
									"description": "Sort direction (ASC or DESC"
								},
								{
									"key": "sortProperty",
									"value": "id",
									"description": "Property to sort by (name, modified_date, performanceScore, id is currently allowed)"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/segments?expansion=customerJourney,internal&includeType=templates,templates&rsids=aliqua&dataType=dw&ownerId=43407647&segmentFilter=aliqua&filterByIds=aliqua&toBeUsedInRsid=aliqua&includeDeleted=false&reportTimeAttribution=true&locale=en_US&name=aliqua&tagNames=aliqua&filterByModifiedAfter=aliqua&pagination=true&dataGroup=aliqua&curatedRsid=aliqua&filterByPublishedSegments=all&cached=true&limit=10&page=0&sortDirection=ASC&sortProperty=id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"segments"
									],
									"query": [
										{
											"key": "expansion",
											"value": "customerJourney,internal"
										},
										{
											"key": "includeType",
											"value": "templates,templates"
										},
										{
											"key": "rsids",
											"value": "aliqua"
										},
										{
											"key": "dataType",
											"value": "dw"
										},
										{
											"key": "ownerId",
											"value": "43407647"
										},
										{
											"key": "segmentFilter",
											"value": "aliqua"
										},
										{
											"key": "filterByIds",
											"value": "aliqua"
										},
										{
											"key": "toBeUsedInRsid",
											"value": "aliqua"
										},
										{
											"key": "includeDeleted",
											"value": "false"
										},
										{
											"key": "reportTimeAttribution",
											"value": "true"
										},
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "name",
											"value": "aliqua"
										},
										{
											"key": "tagNames",
											"value": "aliqua"
										},
										{
											"key": "filterByModifiedAfter",
											"value": "aliqua"
										},
										{
											"key": "pagination",
											"value": "true"
										},
										{
											"key": "dataGroup",
											"value": "aliqua"
										},
										{
											"key": "curatedRsid",
											"value": "aliqua"
										},
										{
											"key": "filterByPublishedSegments",
											"value": "all"
										},
										{
											"key": "cached",
											"value": "true"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "sortDirection",
											"value": "ASC"
										},
										{
											"key": "sortProperty",
											"value": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"sed elit ut dolor\",\n  \"modified\": \"dolor sint i\",\n  \"name\": \"dolore dolor\",\n  \"description\": \"aute\",\n  \"revision\": 83247261,\n  \"created_by\": \"aliquip ut\",\n  \"create_date\": \"Duis\",\n  \"usage\": {\n    \"sunt883\": {},\n    \"magna2\": {}\n  },\n  \"compatibility\": {\n    \"occaecat_169\": {}\n  },\n  \"disabled\": false,\n  \"migratedIds\": [\n    \"consectetur est\",\n    \"sit\"\n  ],\n  \"template\": false,\n  \"dataGroup\": \"occaecat ipsum ut\",\n  \"dwInUse\": false,\n  \"asiInUse\": true,\n  \"aamStatus\": {\n    \"commodo_4\": {}\n  },\n  \"customerJourney\": false,\n  \"reportTimeAttribution\": false,\n  \"publishingStatus\": {\n    \"published\": true,\n    \"publishedDate\": \"1976-11-11T07:48:55.247Z\",\n    \"lookbackPeriod\": 87775671,\n    \"lookbackGranularity\": \"in veniam tempor commodo\"\n  },\n  \"definitionLastModified\": \"2016-10-08T14:14:13.721Z\",\n  \"categories\": [\n    \"reprehender\",\n    \"officia exercitation qui\"\n  ],\n  \"recentRecordedAccess\": \"1974-01-22T00:29:55.900Z\",\n  \"owner\": \"mollit dolore sit\",\n  \"definition\": {\n    \"laborumd1\": {}\n  },\n  \"status\": \"culpa esse mollit Lorem in\",\n  \"report_suite\": \"ullamco et sint ea el\",\n  \"legacy_id\": \"sunt Lorem\",\n  \"internal\": true,\n  \"organization\": \"eiusmod eu\",\n  \"user\": \"tempor velit culpa\",\n  \"_id\": \"et id aute consequat\",\n  \"legacyId\": \"mollit ad ut nisi \"\n}"
						},
						{
							"name": "Unable to retrieve list of segments shared with user",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/segments?expansion=customerJourney,internal&includeType=templates,templates&rsids=aliqua&dataType=dw&ownerId=43407647&segmentFilter=aliqua&filterByIds=aliqua&toBeUsedInRsid=aliqua&includeDeleted=false&reportTimeAttribution=true&locale=en_US&name=aliqua&tagNames=aliqua&filterByModifiedAfter=aliqua&pagination=true&dataGroup=aliqua&curatedRsid=aliqua&filterByPublishedSegments=all&cached=true&limit=10&page=0&sortDirection=ASC&sortProperty=id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"segments"
									],
									"query": [
										{
											"key": "expansion",
											"value": "customerJourney,internal"
										},
										{
											"key": "includeType",
											"value": "templates,templates"
										},
										{
											"key": "rsids",
											"value": "aliqua"
										},
										{
											"key": "dataType",
											"value": "dw"
										},
										{
											"key": "ownerId",
											"value": "43407647"
										},
										{
											"key": "segmentFilter",
											"value": "aliqua"
										},
										{
											"key": "filterByIds",
											"value": "aliqua"
										},
										{
											"key": "toBeUsedInRsid",
											"value": "aliqua"
										},
										{
											"key": "includeDeleted",
											"value": "false"
										},
										{
											"key": "reportTimeAttribution",
											"value": "true"
										},
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "name",
											"value": "aliqua"
										},
										{
											"key": "tagNames",
											"value": "aliqua"
										},
										{
											"key": "filterByModifiedAfter",
											"value": "aliqua"
										},
										{
											"key": "pagination",
											"value": "true"
										},
										{
											"key": "dataGroup",
											"value": "aliqua"
										},
										{
											"key": "curatedRsid",
											"value": "aliqua"
										},
										{
											"key": "filterByPublishedSegments",
											"value": "all"
										},
										{
											"key": "cached",
											"value": "true"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "sortDirection",
											"value": "ASC"
										},
										{
											"key": "sortProperty",
											"value": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Owner filter error; user specified is not in the same company as the requesting user",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/segments?expansion=customerJourney,internal&includeType=templates,templates&rsids=aliqua&dataType=dw&ownerId=43407647&segmentFilter=aliqua&filterByIds=aliqua&toBeUsedInRsid=aliqua&includeDeleted=false&reportTimeAttribution=true&locale=en_US&name=aliqua&tagNames=aliqua&filterByModifiedAfter=aliqua&pagination=true&dataGroup=aliqua&curatedRsid=aliqua&filterByPublishedSegments=all&cached=true&limit=10&page=0&sortDirection=ASC&sortProperty=id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"segments"
									],
									"query": [
										{
											"key": "expansion",
											"value": "customerJourney,internal"
										},
										{
											"key": "includeType",
											"value": "templates,templates"
										},
										{
											"key": "rsids",
											"value": "aliqua"
										},
										{
											"key": "dataType",
											"value": "dw"
										},
										{
											"key": "ownerId",
											"value": "43407647"
										},
										{
											"key": "segmentFilter",
											"value": "aliqua"
										},
										{
											"key": "filterByIds",
											"value": "aliqua"
										},
										{
											"key": "toBeUsedInRsid",
											"value": "aliqua"
										},
										{
											"key": "includeDeleted",
											"value": "false"
										},
										{
											"key": "reportTimeAttribution",
											"value": "true"
										},
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "name",
											"value": "aliqua"
										},
										{
											"key": "tagNames",
											"value": "aliqua"
										},
										{
											"key": "filterByModifiedAfter",
											"value": "aliqua"
										},
										{
											"key": "pagination",
											"value": "true"
										},
										{
											"key": "dataGroup",
											"value": "aliqua"
										},
										{
											"key": "curatedRsid",
											"value": "aliqua"
										},
										{
											"key": "filterByPublishedSegments",
											"value": "all"
										},
										{
											"key": "cached",
											"value": "true"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "sortDirection",
											"value": "ASC"
										},
										{
											"key": "sortProperty",
											"value": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Requesting non-shared segments for other users is restricted to admin users",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/segments?expansion=customerJourney,internal&includeType=templates,templates&rsids=aliqua&dataType=dw&ownerId=43407647&segmentFilter=aliqua&filterByIds=aliqua&toBeUsedInRsid=aliqua&includeDeleted=false&reportTimeAttribution=true&locale=en_US&name=aliqua&tagNames=aliqua&filterByModifiedAfter=aliqua&pagination=true&dataGroup=aliqua&curatedRsid=aliqua&filterByPublishedSegments=all&cached=true&limit=10&page=0&sortDirection=ASC&sortProperty=id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"segments"
									],
									"query": [
										{
											"key": "expansion",
											"value": "customerJourney,internal"
										},
										{
											"key": "includeType",
											"value": "templates,templates"
										},
										{
											"key": "rsids",
											"value": "aliqua"
										},
										{
											"key": "dataType",
											"value": "dw"
										},
										{
											"key": "ownerId",
											"value": "43407647"
										},
										{
											"key": "segmentFilter",
											"value": "aliqua"
										},
										{
											"key": "filterByIds",
											"value": "aliqua"
										},
										{
											"key": "toBeUsedInRsid",
											"value": "aliqua"
										},
										{
											"key": "includeDeleted",
											"value": "false"
										},
										{
											"key": "reportTimeAttribution",
											"value": "true"
										},
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "name",
											"value": "aliqua"
										},
										{
											"key": "tagNames",
											"value": "aliqua"
										},
										{
											"key": "filterByModifiedAfter",
											"value": "aliqua"
										},
										{
											"key": "pagination",
											"value": "true"
										},
										{
											"key": "dataGroup",
											"value": "aliqua"
										},
										{
											"key": "curatedRsid",
											"value": "aliqua"
										},
										{
											"key": "filterByPublishedSegments",
											"value": "all"
										},
										{
											"key": "cached",
											"value": "true"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "sortDirection",
											"value": "ASC"
										},
										{
											"key": "sortProperty",
											"value": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "External API error; Segment retrieval failed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/segments?expansion=customerJourney,internal&includeType=templates,templates&rsids=aliqua&dataType=dw&ownerId=43407647&segmentFilter=aliqua&filterByIds=aliqua&toBeUsedInRsid=aliqua&includeDeleted=false&reportTimeAttribution=true&locale=en_US&name=aliqua&tagNames=aliqua&filterByModifiedAfter=aliqua&pagination=true&dataGroup=aliqua&curatedRsid=aliqua&filterByPublishedSegments=all&cached=true&limit=10&page=0&sortDirection=ASC&sortProperty=id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"segments"
									],
									"query": [
										{
											"key": "expansion",
											"value": "customerJourney,internal"
										},
										{
											"key": "includeType",
											"value": "templates,templates"
										},
										{
											"key": "rsids",
											"value": "aliqua"
										},
										{
											"key": "dataType",
											"value": "dw"
										},
										{
											"key": "ownerId",
											"value": "43407647"
										},
										{
											"key": "segmentFilter",
											"value": "aliqua"
										},
										{
											"key": "filterByIds",
											"value": "aliqua"
										},
										{
											"key": "toBeUsedInRsid",
											"value": "aliqua"
										},
										{
											"key": "includeDeleted",
											"value": "false"
										},
										{
											"key": "reportTimeAttribution",
											"value": "true"
										},
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "name",
											"value": "aliqua"
										},
										{
											"key": "tagNames",
											"value": "aliqua"
										},
										{
											"key": "filterByModifiedAfter",
											"value": "aliqua"
										},
										{
											"key": "pagination",
											"value": "true"
										},
										{
											"key": "dataGroup",
											"value": "aliqua"
										},
										{
											"key": "curatedRsid",
											"value": "aliqua"
										},
										{
											"key": "filterByPublishedSegments",
											"value": "all"
										},
										{
											"key": "cached",
											"value": "true"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "sortDirection",
											"value": "ASC"
										},
										{
											"key": "sortProperty",
											"value": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Creates Segment",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"Lorem_6\": {},\n  \"consectetur1b7\": {}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/segments?expansion=customerJourney,virtualReportSuites&locale=en_US",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"segments"
							],
							"query": [
								{
									"key": "expansion",
									"value": "customerJourney,virtualReportSuites",
									"description": "Comma-delimited list of additional segment metadata fields to include on response."
								},
								{
									"key": "locale",
									"value": "en_US",
									"description": "Locale"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"Lorem_6\": {},\n  \"consectetur1b7\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/segments?expansion=categories,aamStatus&locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"segments"
									],
									"query": [
										{
											"key": "expansion",
											"value": "categories,aamStatus"
										},
										{
											"key": "locale",
											"value": "en_US"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"aute irure\",\n  \"modified\": \"aute non voluptate id ea\",\n  \"name\": \"aliqua Lore\",\n  \"description\": \"sit ad anim aliqua\",\n  \"revision\": -86254484,\n  \"created_by\": \"occaecat voluptate nostrud\",\n  \"create_date\": \"i\",\n  \"usage\": {\n    \"velit_d40\": {},\n    \"cupidatat_b\": {}\n  },\n  \"compatibility\": {\n    \"adipisicing_1bd\": {},\n    \"aliqua_5aa\": {},\n    \"irure7d8\": {},\n    \"irure_602\": {}\n  },\n  \"disabled\": false,\n  \"migratedIds\": [\n    \"pariatur\",\n    \"ullamco Duis proident in\"\n  ],\n  \"template\": true,\n  \"dataGroup\": \"velit fugiat incididunt qui amet\",\n  \"dwInUse\": false,\n  \"asiInUse\": true,\n  \"aamStatus\": {\n    \"fugiat_847\": {},\n    \"ea_318\": {},\n    \"eaf0\": {}\n  },\n  \"customerJourney\": true,\n  \"reportTimeAttribution\": true,\n  \"publishingStatus\": {\n    \"published\": true,\n    \"publishedDate\": \"1986-06-19T09:49:10.753Z\",\n    \"lookbackPeriod\": 61021640,\n    \"lookbackGranularity\": \"dolore in elit\"\n  },\n  \"definitionLastModified\": \"2002-07-07T06:40:17.173Z\",\n  \"categories\": [\n    \"voluptate nisi veniam incididunt\",\n    \"ex officia pariatur est\"\n  ],\n  \"recentRecordedAccess\": \"1953-01-30T09:29:54.472Z\",\n  \"owner\": \"ea tempor consequat\",\n  \"definition\": {\n    \"enim2_0\": {}\n  },\n  \"status\": \"do\",\n  \"report_suite\": \"do Duis\",\n  \"legacy_id\": \"aute ad eiusmod dolore adipisicing\",\n  \"internal\": false,\n  \"organization\": \"qui\",\n  \"user\": \"nostrud sed ad in\",\n  \"_id\": \"magna\",\n  \"legacyId\": \"ut culpa fugiat dolor\"\n}"
						},
						{
							"name": "Invalid input; name, rsid, and definition are all required. Definition must be formatted as a JSON Object.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"Lorem_6\": {},\n  \"consectetur1b7\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/segments?expansion=categories,aamStatus&locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"segments"
									],
									"query": [
										{
											"key": "expansion",
											"value": "categories,aamStatus"
										},
										{
											"key": "locale",
											"value": "en_US"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "External API error; Segment create or retrieval failed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"Lorem_6\": {},\n  \"consectetur1b7\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/segments?expansion=categories,aamStatus&locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"segments"
									],
									"query": [
										{
											"key": "expansion",
											"value": "categories,aamStatus"
										},
										{
											"key": "locale",
											"value": "en_US"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Migrates a segment from account_segment to the new segment service",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"Lorem_6\": {},\n  \"consectetur1b7\": {}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/segments/migrate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"segments",
								"migrate"
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/segments/migrate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"segments",
										"migrate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"empty\": false\n}"
						}
					]
				},
				{
					"name": "AAM Status",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/segments/aamstatus?rsid=aliqua",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"segments",
								"aamstatus"
							],
							"query": [
								{
									"key": "rsid",
									"value": "aliqua",
									"description": "(Required) Report suite ID to check status for"
								}
							]
						},
						"description": "Checks the provided report suite to see if it is configured to allow segment sharing with Adobe Audience Manager."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/segments/aamstatus?rsid=aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"segments",
										"aamstatus"
									],
									"query": [
										{
											"key": "rsid",
											"value": "aliqua"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "External API error; failed to check status for given RSID",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/segments/aamstatus?rsid=aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"segments",
										"aamstatus"
									],
									"query": [
										{
											"key": "rsid",
											"value": "aliqua"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Validate a Segment",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\"aliqua\"",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/segments/validate?rsid=aliqua",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"segments",
								"validate"
							],
							"query": [
								{
									"key": "rsid",
									"value": "aliqua",
									"description": "(Required) RSID to run the report against"
								}
							]
						},
						"description": "Returns a segment validation for the segment contained in the post body of the report."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/segments/validate?rsid=aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"segments",
										"validate"
									],
									"query": [
										{
											"key": "rsid",
											"value": "aliqua"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"Lorem_6\": {},\n  \"consectetur1b7\": {}\n}"
						},
						{
							"name": "Bad JSON input; request not formatted correctly",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/segments/validate?rsid=aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"segments",
										"validate"
									],
									"query": [
										{
											"key": "rsid",
											"value": "aliqua"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unexpected error;",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/segments/validate?rsid=aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"segments",
										"validate"
									],
									"query": [
										{
											"key": "rsid",
											"value": "aliqua"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "servercallusage",
			"item": [
				{
					"name": "servercalls",
					"item": [
						{
							"name": "reportsuites",
							"item": [
								{
									"name": "Retrieve report suites",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/servercallusage/servercalls/reportsuites?startDate=aliqua&endDate=aliqua&expansion=reportSuiteName,reportSuiteName&locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"servercallusage",
												"servercalls",
												"reportsuites"
											],
											"query": [
												{
													"key": "startDate",
													"value": "aliqua",
													"description": "Filter list to only include suites associated to the company with this start date"
												},
												{
													"key": "endDate",
													"value": "aliqua",
													"description": "Filter list to only include suites associated to the company with this end date"
												},
												{
													"key": "expansion",
													"value": "reportSuiteName,reportSuiteName",
													"description": "Comma-delimited list of additional project metadata fields to include on response."
												},
												{
													"key": "locale",
													"value": "en_US",
													"description": "Locale"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/servercallusage/servercalls/reportsuites?startDate=aliqua&endDate=aliqua&expansion=reportSuiteName,reportSuiteName&locale=en_US",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"servercallusage",
														"servercalls",
														"reportsuites"
													],
													"query": [
														{
															"key": "startDate",
															"value": "aliqua"
														},
														{
															"key": "endDate",
															"value": "aliqua"
														},
														{
															"key": "expansion",
															"value": "reportSuiteName,reportSuiteName"
														},
														{
															"key": "locale",
															"value": "en_US"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"eccid\": \"reprehenderit elit qui\",\n  \"date\": \"proident\",\n  \"startDate\": \"voluptate ei\",\n  \"endDate\": \"dolore Duis ul\",\n  \"totals\": [\n    -78057138,\n    -58743771\n  ],\n  \"columns\": [\n    {\n      \"metricId\": \"consequat Duis veniam\",\n      \"name\": \"minim eiusmod\"\n    },\n    {\n      \"metricId\": \"sit non quis nisi dolore\",\n      \"name\": \"culpa officia amet\"\n    }\n  ],\n  \"rows\": [\n    {\n      \"rsid\": \"nisi\",\n      \"reportSuiteName\": \"non adipis\",\n      \"usages\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"rsid\": \"eiusmod mollit\",\n      \"reportSuiteName\": \"magna cillum do ut\",\n      \"usages\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/servercallusage/servercalls/reportsuites?startDate=aliqua&endDate=aliqua&expansion=reportSuiteName,reportSuiteName&locale=en_US",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"servercallusage",
														"servercalls",
														"reportsuites"
													],
													"query": [
														{
															"key": "startDate",
															"value": "aliqua"
														},
														{
															"key": "endDate",
															"value": "aliqua"
														},
														{
															"key": "expansion",
															"value": "reportSuiteName,reportSuiteName"
														},
														{
															"key": "locale",
															"value": "en_US"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieve report suites monthly breakdown",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/servercallusage/servercalls/reportsuites/monthly?startDate=aliqua&endDate=aliqua&expansion=reportSuiteName,reportSuiteName&locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"servercallusage",
												"servercalls",
												"reportsuites",
												"monthly"
											],
											"query": [
												{
													"key": "startDate",
													"value": "aliqua",
													"description": "Filter list to only include suites associated to the company with this start date"
												},
												{
													"key": "endDate",
													"value": "aliqua",
													"description": "Filter list to only include suites associated to the company with this end date"
												},
												{
													"key": "expansion",
													"value": "reportSuiteName,reportSuiteName",
													"description": "Comma-delimited list of additional project metadata fields to include on response."
												},
												{
													"key": "locale",
													"value": "en_US",
													"description": "Locale"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/servercallusage/servercalls/reportsuites/monthly?startDate=aliqua&endDate=aliqua&expansion=reportSuiteName,reportSuiteName&locale=en_US",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"servercallusage",
														"servercalls",
														"reportsuites",
														"monthly"
													],
													"query": [
														{
															"key": "startDate",
															"value": "aliqua"
														},
														{
															"key": "endDate",
															"value": "aliqua"
														},
														{
															"key": "expansion",
															"value": "reportSuiteName,reportSuiteName"
														},
														{
															"key": "locale",
															"value": "en_US"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"eccid\": \"et Duis\",\n  \"date\": \"Duis Ut\",\n  \"startDate\": \"pariatur dolore dolor magna\",\n  \"endDate\": \"tempor adipisi\",\n  \"totals\": [\n    -9511617,\n    92143776\n  ],\n  \"columns\": [\n    {\n      \"metricId\": \"ut ullamco\",\n      \"name\": \"Ut proident id\"\n    },\n    {\n      \"metricId\": \"Duis veniam sed elit sunt\",\n      \"name\": \"qui \"\n    }\n  ],\n  \"monthlyBreakdown\": [\n    {\n      \"month\": \"Lorem et nostrud sint\",\n      \"rows\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"monthlyTotal\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"month\": \"irure elit\",\n      \"rows\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"monthlyTotal\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/servercallusage/servercalls/reportsuites/monthly?startDate=aliqua&endDate=aliqua&expansion=reportSuiteName,reportSuiteName&locale=en_US",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"servercallusage",
														"servercalls",
														"reportsuites",
														"monthly"
													],
													"query": [
														{
															"key": "startDate",
															"value": "aliqua"
														},
														{
															"key": "endDate",
															"value": "aliqua"
														},
														{
															"key": "expansion",
															"value": "reportSuiteName,reportSuiteName"
														},
														{
															"key": "locale",
															"value": "en_US"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Retrieves Server Call Information",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/servercallusage/servercalls?locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"servercallusage",
										"servercalls"
									],
									"query": [
										{
											"key": "locale",
											"value": "en_US",
											"description": "Locale"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/servercallusage/servercalls?locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"servercallusage",
												"servercalls"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"eccid\": \"non velit\",\n  \"date\": \"mollit ex sunt\",\n  \"usagePeriodStartDate\": \"Duis laborum ullamco\",\n  \"usagePeriodEndDate\": \"labore sit et quis\",\n  \"metrics\": [\n    {\n      \"metricId\": \"aliquip dolor sunt deserunt\",\n      \"metricName\": \"do\",\n      \"commitment\": -74390742,\n      \"usage\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"metricId\": \"elit labore quis ad mollit\",\n      \"metricName\": \"proident irure amet elit\",\n      \"commitment\": 55190703,\n      \"usage\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/servercallusage/servercalls?locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"servercallusage",
												"servercalls"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Retrieves Alert Attributes",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/servercallusage/alerts/attributes?locale=en_US",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"servercallusage",
								"alerts",
								"attributes"
							],
							"query": [
								{
									"key": "locale",
									"value": "en_US",
									"description": "Locale"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/servercallusage/alerts/attributes?locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"servercallusage",
										"alerts",
										"attributes"
									],
									"query": [
										{
											"key": "locale",
											"value": "en_US"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"eccid\": \"deserunt reprehenderit\",\n  \"date\": \"nulla et\",\n  \"metrics\": [\n    {\n      \"id\": \"cillum\",\n      \"name\": \"aliqua elit ipsu\"\n    },\n    {\n      \"id\": \"consequat mollit\",\n      \"name\": \"amet tempor in\"\n    }\n  ],\n  \"dimensions\": [\n    {\n      \"id\": \"ut sed non culpa\",\n      \"name\": \"labore est pariatur sunt\"\n    },\n    {\n      \"id\": \"qui Lorem\",\n      \"name\": \"exercitation ullamco laborum sunt\"\n    }\n  ]\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/servercallusage/alerts/attributes?locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"servercallusage",
										"alerts",
										"attributes"
									],
									"query": [
										{
											"key": "locale",
											"value": "en_US"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "shares",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Returns details about a specific share",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/shares/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"shares",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The share ID to return details for"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/shares/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"shares",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The share ID to return details for"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"componentId\": \"fugia\",\n  \"shareToId\": -54607773,\n  \"shareToType\": \"sed deserunt\",\n  \"shareId\": 18921760,\n  \"componentType\": \"amet nulla aliqua tempor\",\n  \"shareToDisplayName\": \"deserunt mollit eu\",\n  \"shareToLogin\": \"mollit\",\n  \"shareToImsUserId\": \"ut officia incididunt Ut in\",\n  \"accessLevel\": \"do sed amet aute\"\n}"
								},
								{
									"name": "Invalid component type",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/shares/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"shares",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The share ID to return details for"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Permission error; user does not have access to the share",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/shares/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"shares",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The share ID to return details for"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unable to retrieve share",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/shares/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"shares",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The share ID to return details for"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Deletes the share with the given id",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/shares/:id?locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"shares",
										":id"
									],
									"query": [
										{
											"key": "locale",
											"value": "en_US",
											"description": "Locale"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The shareId to be deleted"
										}
									]
								},
								"description": "Delete by shareId and remove that share from all associated components."
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/shares/:id?locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"shares",
												":id"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The shareId to be deleted"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"Lorem_6\": {},\n  \"consectetur1b7\": {}\n}"
								},
								{
									"name": "Permission error; user does not have access to delete the component",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/shares/:id?locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"shares",
												":id"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The shareId to be deleted"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unable to delete share",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/shares/:id?locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"shares",
												":id"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The shareId to be deleted"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Returns all components that have been shared by the current user (meeting the paging restriction)",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/shares?includeType=sharedTo,sharedTo&userid=43407647&limit=10&page=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"shares"
							],
							"query": [
								{
									"key": "includeType",
									"value": "sharedTo,sharedTo",
									"description": "Include additional shares not owned by the user"
								},
								{
									"key": "userid",
									"value": "43407647",
									"description": "The user ID to return details for. Only admins may user this option."
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Number of results per page"
								},
								{
									"key": "page",
									"value": "0",
									"description": "Page number (base 0 - first page is \"0\")"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/shares?includeType=sharedTo,sharedTo&userid=43407647&limit=10&page=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"shares"
									],
									"query": [
										{
											"key": "includeType",
											"value": "sharedTo,sharedTo"
										},
										{
											"key": "userid",
											"value": "43407647"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"componentId\": \"pariatur quis\",\n    \"shareToId\": 28880039,\n    \"shareToType\": \"cillum sunt enim pariatur\",\n    \"shareId\": 68730765,\n    \"componentType\": \"ad nos\",\n    \"shareToDisplayName\": \"dolor sunt est irure\",\n    \"shareToLogin\": \"id labore\",\n    \"shareToImsUserId\": \"sunt officia\",\n    \"accessLevel\": \"ut sint Lorem occaecat dolor\"\n  },\n  {\n    \"componentId\": \"ad nostrud in\",\n    \"shareToId\": 37499815,\n    \"shareToType\": \"in nost\",\n    \"shareId\": -19917718,\n    \"componentType\": \"enim ut\",\n    \"shareToDisplayName\": \"laboris est fugiat\",\n    \"shareToLogin\": \"non eu et\",\n    \"shareToImsUserId\": \"aliqua\",\n    \"accessLevel\": \"mollit dolor pariatur culpa\"\n  }\n]"
						},
						{
							"name": "Unable to retrieve list of components.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/shares?includeType=sharedTo,sharedTo&userid=43407647&limit=10&page=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"shares"
									],
									"query": [
										{
											"key": "includeType",
											"value": "sharedTo,sharedTo"
										},
										{
											"key": "userid",
											"value": "43407647"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "0"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Share 1 component with 1 user",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"Lorem_6\": {},\n  \"consectetur1b7\": {}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/shares?locale=en_US",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"shares"
							],
							"query": [
								{
									"key": "locale",
									"value": "en_US",
									"description": "Locale"
								}
							]
						},
						"description": "Note that only the following component types are currently supported: \"segment\", \"project\"<br>There are three valid values for \"shareToType\":<br><b>\"all\"</b>: Shares the component to all users in the organization. For this operation, \"shareToId\" is not required (ignored if sent)<br><b>\"user\"</b>: Shares the component with a specific user. For this operation, \"shareToId\" (the loginId of the user to share to) is required.<br><b>\"group\"</b>: Shares the component with an entire custom user group as defined in the Admin Console. For this operation, \"shareToId\" (the groupId of the group to share to) is required. "
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"Lorem_6\": {},\n  \"consectetur1b7\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/shares?locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"shares"
									],
									"query": [
										{
											"key": "locale",
											"value": "en_US"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"componentId\": \"fugia\",\n  \"shareToId\": -54607773,\n  \"shareToType\": \"sed deserunt\",\n  \"shareId\": 18921760,\n  \"componentType\": \"amet nulla aliqua tempor\",\n  \"shareToDisplayName\": \"deserunt mollit eu\",\n  \"shareToLogin\": \"mollit\",\n  \"shareToImsUserId\": \"ut officia incididunt Ut in\",\n  \"accessLevel\": \"do sed amet aute\"\n}"
						},
						{
							"name": "Invalid component type",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"Lorem_6\": {},\n  \"consectetur1b7\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/shares?locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"shares"
									],
									"query": [
										{
											"key": "locale",
											"value": "en_US"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Permission error; user does not have access share the component",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"Lorem_6\": {},\n  \"consectetur1b7\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/shares?locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"shares"
									],
									"query": [
										{
											"key": "locale",
											"value": "en_US"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unable to share component",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"Lorem_6\": {},\n  \"consectetur1b7\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/shares?locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"shares"
									],
									"query": [
										{
											"key": "locale",
											"value": "en_US"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Share components with users. WARNING: Authoritative; deletes/overwrites all pre-existing shares for the given components",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"ametf6\": {}\n  },\n  {\n    \"Ut0b6\": {},\n    \"enim_524\": {}\n  }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/shares?locale=en_US&useCache=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"shares"
							],
							"query": [
								{
									"key": "locale",
									"value": "en_US",
									"description": "Locale"
								},
								{
									"key": "useCache",
									"value": "true",
									"description": "Use caching for faster requests"
								}
							]
						},
						"description": "Create one/many shares for one/many components at once. For each component object in the passed list, the given shares will replace the current set of shares for each component. For example, if one of the components was previously shared with additional users, and that share is not passed in here, it will no longer be shared with them.<br>"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"ad_0\": {},\n    \"ullamco00\": {},\n    \"uteb\": {}\n  },\n  {\n    \"est_d08\": {}\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/shares?locale=en_US&useCache=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"shares"
									],
									"query": [
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "useCache",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"componentType\": \"eu\",\n  \"componentId\": \"deserunt irure non eiusmod\",\n  \"shares\": [\n    {\n      \"shareToId\": 2055060,\n      \"shareToType\": \"cupid\",\n      \"accessLevel\": \"voluptate do pariatur\"\n    },\n    {\n      \"shareToId\": 6606793,\n      \"shareToType\": \"id dolor cupidatat sunt\",\n      \"accessLevel\": \"occaecat Lorem ut dolor\"\n    }\n  ]\n}"
						},
						{
							"name": "Invalid component type, or mixed component types on request (only one type per request)",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"ad_0\": {},\n    \"ullamco00\": {},\n    \"uteb\": {}\n  },\n  {\n    \"est_d08\": {}\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/shares?locale=en_US&useCache=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"shares"
									],
									"query": [
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "useCache",
											"value": "true"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Permission error; user does not have access for the requested operation",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"ad_0\": {},\n    \"ullamco00\": {},\n    \"uteb\": {}\n  },\n  {\n    \"est_d08\": {}\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/shares?locale=en_US&useCache=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"shares"
									],
									"query": [
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "useCache",
											"value": "true"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unable to save list of component shares",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"ad_0\": {},\n    \"ullamco00\": {},\n    \"uteb\": {}\n  },\n  {\n    \"est_d08\": {}\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/shares?locale=en_US&useCache=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"shares"
									],
									"query": [
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "useCache",
											"value": "true"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "search for shares for several components at once",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"componentType\": \"do Duis nostrud id Excepteur\",\n  \"componentIds\": [\n    \"labor\",\n    \"esse ut Duis ex\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/shares/component/search?locale=en_US&expansion=sharesFullName,sharesFullName&limit=10&page=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"shares",
								"component",
								"search"
							],
							"query": [
								{
									"key": "locale",
									"value": "en_US",
									"description": "Locale"
								},
								{
									"key": "expansion",
									"value": "sharesFullName,sharesFullName",
									"description": "Comma-delimited list of additional project metadata fields to include on response."
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Number of results per page"
								},
								{
									"key": "page",
									"value": "0",
									"description": "Page number (base 0 - first page is \"0\")"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/shares/component/search?locale=en_US&expansion=sharesFullName,sharesFullName&limit=10&page=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"shares",
										"component",
										"search"
									],
									"query": [
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "expansion",
											"value": "sharesFullName,sharesFullName"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"componentType\": \"dolor minim\",\n  \"componentId\": \"et eu\",\n  \"shares\": [\n    {\n      \"componentId\": \"elit adipisicing\",\n      \"shareToId\": -85845475,\n      \"shareToType\": \"do esse minim\",\n      \"shareId\": -51301344,\n      \"componentType\": \"ipsum officia Ut fugiat in\",\n      \"shareToDisplayName\": \"dolor amet\",\n      \"shareToLogin\": \"dolore in aliquip\",\n      \"shareToImsUserId\": \"adipisicing qui tempor\",\n      \"accessLevel\": \"ut officia magna\"\n    },\n    {\n      \"componentId\": \"in do\",\n      \"shareToId\": 66373061,\n      \"shareToType\": \"consequat in sunt\",\n      \"shareId\": 99524572,\n      \"componentType\": \"sint Ex\",\n      \"shareToDisplayName\": \"laborum id non aliquip\",\n      \"shareToLogin\": \"adipisicing et\",\n      \"shareToImsUserId\": \"in\",\n      \"accessLevel\": \"sunt i\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Returns all component ids that have shared to the current user",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/shares/sharedto/me?componentType=aliqua",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"shares",
								"sharedto",
								"me"
							],
							"query": [
								{
									"key": "componentType",
									"value": "aliqua",
									"description": "(Required) ComponentType to return"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/shares/sharedto/me?componentType=aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"shares",
										"sharedto",
										"me"
									],
									"query": [
										{
											"key": "componentType",
											"value": "aliqua"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  \"esse dolore anim veniam qui\",\n  \"mollit Lorem id\"\n]"
						}
					]
				}
			]
		},
		{
			"name": "shellnotifications",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Retrieve a shell notification by id",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/shellnotifications/:id?locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"shellnotifications",
										":id"
									],
									"query": [
										{
											"key": "locale",
											"value": "en_US",
											"description": "Locale"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/shellnotifications/:id?locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"shellnotifications",
												":id"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"notificationId\": \"Excepteur aliquip minim exercitation\",\n  \"companyId\": -37124838,\n  \"toId\": -56993247,\n  \"fromId\": 73152453,\n  \"createdTime\": \"2006-01-17T03:41:12.251Z\",\n  \"startTime\": \"1970-08-27T21:07:13.647Z\",\n  \"endTime\": \"1986-02-22T14:16:23.899Z\",\n  \"text\": \"adipisicing sit pariatur\",\n  \"url\": \"sed non ut labore\",\n  \"appendSession\": true,\n  \"rsid\": \"pariatur\",\n  \"templateId\": \"aute consectetur\",\n  \"templateValues\": [\n    \"esse ex\",\n    \"non nisi\"\n  ],\n  \"notificationStatus\": \"UNREAD\",\n  \"notificationType\": \"USER_SPECIFIC_MESSAGE\",\n  \"recipients\": {\n    \"userIds\": [\n      -48766575,\n      95874749\n    ],\n    \"groupIds\": [\n      76524649,\n      -54017461\n    ],\n    \"all\": true\n  },\n  \"locale\": {\n    \"script\": \"ut\",\n    \"country\": \"in mollit laborum ea\",\n    \"variant\": \"Lorem tempor\",\n    \"extensionKeys\": [\n      \"in elit nostrud consequat id\",\n      \"deserunt laborum\"\n    ],\n    \"unicodeLocaleAttributes\": [\n      \"aute aliquip quis consectetur\",\n      \"aliqua elit Lorem\"\n    ],\n    \"unicodeLocaleKeys\": [\n      \"veniam dolor dolore\",\n      \"ni\"\n    ],\n    \"iso3Language\": \"ea irure aute tempor qui\",\n    \"iso3Country\": \"commodo nulla n\",\n    \"displayLanguage\": \"ut ad Duis aliqua commodo\",\n    \"displayScript\": \"in et Ut\",\n    \"displayCountry\": \"culpa ullamco officia\",\n    \"displayVariant\": \"culpa voluptate minim dolore sint\",\n    \"displayName\": \"Lorem magna do\",\n    \"language\": \"laboris Excepteur sit eu enim\"\n  }\n}"
								}
							]
						},
						{
							"name": "Deletes a specific shell notification by id",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/shellnotifications/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"shellnotifications",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/shellnotifications/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"shellnotifications",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "true"
								}
							]
						}
					]
				},
				{
					"name": "Retrieves the shell notifications for the current user",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/shellnotifications?locale=en_US",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"shellnotifications"
							],
							"query": [
								{
									"key": "locale",
									"value": "en_US",
									"description": "Locale"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/shellnotifications?locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"shellnotifications"
									],
									"query": [
										{
											"key": "locale",
											"value": "en_US"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"notificationId\": \"Excepteur aliquip minim exercitation\",\n  \"companyId\": -37124838,\n  \"toId\": -56993247,\n  \"fromId\": 73152453,\n  \"createdTime\": \"2006-01-17T03:41:12.251Z\",\n  \"startTime\": \"1970-08-27T21:07:13.647Z\",\n  \"endTime\": \"1986-02-22T14:16:23.899Z\",\n  \"text\": \"adipisicing sit pariatur\",\n  \"url\": \"sed non ut labore\",\n  \"appendSession\": true,\n  \"rsid\": \"pariatur\",\n  \"templateId\": \"aute consectetur\",\n  \"templateValues\": [\n    \"esse ex\",\n    \"non nisi\"\n  ],\n  \"notificationStatus\": \"UNREAD\",\n  \"notificationType\": \"USER_SPECIFIC_MESSAGE\",\n  \"recipients\": {\n    \"userIds\": [\n      -48766575,\n      95874749\n    ],\n    \"groupIds\": [\n      76524649,\n      -54017461\n    ],\n    \"all\": true\n  },\n  \"locale\": {\n    \"script\": \"ut\",\n    \"country\": \"in mollit laborum ea\",\n    \"variant\": \"Lorem tempor\",\n    \"extensionKeys\": [\n      \"in elit nostrud consequat id\",\n      \"deserunt laborum\"\n    ],\n    \"unicodeLocaleAttributes\": [\n      \"aute aliquip quis consectetur\",\n      \"aliqua elit Lorem\"\n    ],\n    \"unicodeLocaleKeys\": [\n      \"veniam dolor dolore\",\n      \"ni\"\n    ],\n    \"iso3Language\": \"ea irure aute tempor qui\",\n    \"iso3Country\": \"commodo nulla n\",\n    \"displayLanguage\": \"ut ad Duis aliqua commodo\",\n    \"displayScript\": \"in et Ut\",\n    \"displayCountry\": \"culpa ullamco officia\",\n    \"displayVariant\": \"culpa voluptate minim dolore sint\",\n    \"displayName\": \"Lorem magna do\",\n    \"language\": \"laboris Excepteur sit eu enim\"\n  }\n}"
						}
					]
				},
				{
					"name": "Creates Analytics-specific shell notifications",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"notificationId\": \"dolor ut in\",\n    \"companyId\": 32645152,\n    \"toId\": 6762939,\n    \"fromId\": -42896730,\n    \"createdTime\": \"1947-07-12T07:04:14.767Z\",\n    \"startTime\": \"1970-08-05T05:13:24.357Z\",\n    \"endTime\": \"2015-03-21T23:33:57.014Z\",\n    \"text\": \"quis do deserunt\",\n    \"url\": \"sed officia nostrud\",\n    \"appendSession\": true,\n    \"rsid\": \"in anim cillum est laborum\",\n    \"templateId\": \"qui exercit\",\n    \"templateValues\": [\n      \"consectetur exercitation cupidatat dolore ullamco\",\n      \"amet commodo\"\n    ],\n    \"notificationStatus\": \"UNREAD\",\n    \"notificationType\": \"USER_SPECIFIC_MESSAGE\",\n    \"recipients\": {\n      \"userIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"groupIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"all\": false\n    },\n    \"locale\": {\n      \"script\": \"aute Duis sunt\",\n      \"country\": \"Duis Lorem in sunt minim\",\n      \"variant\": \"consectetur deserunt irure\",\n      \"extensionKeys\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"unicodeLocaleAttributes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"unicodeLocaleKeys\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"iso3Language\": \"ad enim\",\n      \"iso3Country\": \"anim\",\n      \"displayLanguage\": \"id\",\n      \"displayScript\": \"sint dolor\",\n      \"displayCountry\": \"laboris ut adipisicing reprehenderit\",\n      \"displayVariant\": \"ullamco eu\",\n      \"displayName\": \"et pariatur\",\n      \"language\": \"laborum anim\"\n    }\n  },\n  {\n    \"notificationId\": \"consectetur ad\",\n    \"companyId\": 61605746,\n    \"toId\": -46686162,\n    \"fromId\": 99443720,\n    \"createdTime\": \"2017-08-13T21:21:40.868Z\",\n    \"startTime\": \"2013-04-20T17:37:37.833Z\",\n    \"endTime\": \"1962-08-14T05:24:34.094Z\",\n    \"text\": \"officia in reprehenderit velit\",\n    \"url\": \"fugiat\",\n    \"appendSession\": true,\n    \"rsid\": \"laboris\",\n    \"templateId\": \"in laborum reprehenderit ex consectetur\",\n    \"templateValues\": [\n      \"Duis quis volup\",\n      \"officia adipisicing irure mollit\"\n    ],\n    \"notificationStatus\": \"UNREAD\",\n    \"notificationType\": \"USER_SPECIFIC_MESSAGE\",\n    \"recipients\": {\n      \"userIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"groupIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"all\": true\n    },\n    \"locale\": {\n      \"script\": \"nisi proident\",\n      \"country\": \"in eiusmod magna\",\n      \"variant\": \"sed qui exercitation nulla\",\n      \"extensionKeys\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"unicodeLocaleAttributes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"unicodeLocaleKeys\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"iso3Language\": \"ea elit\",\n      \"iso3Country\": \"ut mollit eiusmod\",\n      \"displayLanguage\": \"voluptate cill\",\n      \"displayScript\": \"magna sed cupidatat\",\n      \"displayCountry\": \"laboris officia ea eu\",\n      \"displayVariant\": \"mollit laboris sint do\",\n      \"displayName\": \"pariatur esse mollit ullamco\",\n      \"language\": \"sed dolore est do\"\n    }\n  }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/shellnotifications",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"shellnotifications"
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/shellnotifications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"shellnotifications"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"notificationId\": \"Ut et\",\n  \"companyId\": -19509737,\n  \"toId\": 89065595,\n  \"fromId\": 83957136,\n  \"createdTime\": \"2004-11-28T22:16:58.824Z\",\n  \"startTime\": \"1965-03-05T13:40:53.809Z\",\n  \"endTime\": \"1964-06-21T05:33:21.323Z\",\n  \"text\": \"magna commodo elit ullamco incididunt\",\n  \"url\": \"dolore velit elit\",\n  \"appendSession\": true,\n  \"rsid\": \"velit occaecat ullamco\",\n  \"templateId\": \"eiusmod aliqua sint officia\",\n  \"templateValues\": [\n    \"molli\",\n    \"Excepteur ullam\"\n  ],\n  \"notificationStatus\": \"UNREAD\",\n  \"notificationType\": \"USER_SPECIFIC_MESSAGE\",\n  \"recipients\": {\n    \"userIds\": [\n      -70392469,\n      -3605229\n    ],\n    \"groupIds\": [\n      49753554,\n      -10560333\n    ],\n    \"all\": false\n  },\n  \"locale\": {\n    \"script\": \"Excepteur incididunt\",\n    \"country\": \"non pariatur sit\",\n    \"variant\": \"elit tempor est cillum\",\n    \"extensionKeys\": [\n      \"esse reprehenderit\",\n      \"esse irure enim nulla \"\n    ],\n    \"unicodeLocaleAttributes\": [\n      \"ullamco velit\",\n      \"aliqua in ad\"\n    ],\n    \"unicodeLocaleKeys\": [\n      \"non pariatur\",\n      \"dolor exercitation\"\n    ],\n    \"iso3Language\": \"ex nulla est aliqu\",\n    \"iso3Country\": \"ex laboris reprehenderit velit\",\n    \"displayLanguage\": \"consequat\",\n    \"displayScript\": \"id consectetur quis dolor enim\",\n    \"displayCountry\": \"eu nisi anim\",\n    \"displayVariant\": \"in incididunt aute\",\n    \"displayName\": \"id fugiat culpa exercitation\",\n    \"language\": \"officia cupidatat ad ea elit\"\n  },\n  \"status\": {\n    \"success\": true,\n    \"error\": {\n      \"errorCode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"errorDescription\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"errorId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"errorDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"rootCauseService\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Updates Analytics-specific shell notifications",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"notificationId\": \"\",\n    \"companyId\": 79972140,\n    \"toId\": 84688797,\n    \"fromId\": 47560208,\n    \"createdTime\": \"2015-09-30T17:47:12.790Z\",\n    \"startTime\": \"2014-08-31T21:04:00.063Z\",\n    \"endTime\": \"1969-08-18T18:40:29.261Z\",\n    \"text\": \"esse \",\n    \"url\": \"nulla non id ad\",\n    \"appendSession\": true,\n    \"rsid\": \"amet cupidatat\",\n    \"templateId\": \"sit est esse\",\n    \"templateValues\": [\n      \"exercitation\",\n      \"anim in Ut pariatur\"\n    ],\n    \"notificationStatus\": \"UNREAD\",\n    \"notificationType\": \"USER_SPECIFIC_MESSAGE\",\n    \"recipients\": {\n      \"userIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"groupIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"all\": true\n    },\n    \"locale\": {\n      \"script\": \"nulla id enim\",\n      \"country\": \"anim deserunt\",\n      \"variant\": \"cillum in est pariatur\",\n      \"extensionKeys\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"unicodeLocaleAttributes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"unicodeLocaleKeys\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"iso3Language\": \"ipsum anim non\",\n      \"iso3Country\": \"consequat voluptate\",\n      \"displayLanguage\": \"veniam\",\n      \"displayScript\": \"et qui pro\",\n      \"displayCountry\": \"exercitation sit fugiat ea\",\n      \"displayVariant\": \"repreh\",\n      \"displayName\": \"mollit Ut deserunt\",\n      \"language\": \"dolor in in\"\n    }\n  },\n  {\n    \"notificationId\": \"sed enim\",\n    \"companyId\": -919032,\n    \"toId\": 3747469,\n    \"fromId\": -19358200,\n    \"createdTime\": \"2012-08-30T20:46:23.680Z\",\n    \"startTime\": \"2002-03-17T05:17:20.032Z\",\n    \"endTime\": \"1942-07-25T22:57:25.542Z\",\n    \"text\": \"par\",\n    \"url\": \"enim\",\n    \"appendSession\": true,\n    \"rsid\": \"occaecat sint ad dolore\",\n    \"templateId\": \"amet tempor occaecat cupidatat\",\n    \"templateValues\": [\n      \"esse veniam ea in\",\n      \"occaecat do dolore eu\"\n    ],\n    \"notificationStatus\": \"UNREAD\",\n    \"notificationType\": \"USER_SPECIFIC_MESSAGE\",\n    \"recipients\": {\n      \"userIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"groupIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"all\": false\n    },\n    \"locale\": {\n      \"script\": \"nisi laborum\",\n      \"country\": \"cupidatat dolore quis\",\n      \"variant\": \"nostrud occaecat voluptate\",\n      \"extensionKeys\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"unicodeLocaleAttributes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"unicodeLocaleKeys\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"iso3Language\": \"officia consectetur \",\n      \"iso3Country\": \"non Lorem n\",\n      \"displayLanguage\": \"esse aliquip in dolor\",\n      \"displayScript\": \"laboris aliquip\",\n      \"displayCountry\": \"dolore labore esse non sunt\",\n      \"displayVariant\": \"dolore\",\n      \"displayName\": \"ullamco labore\",\n      \"language\": \"tempor incididunt reprehenderit\"\n    }\n  }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/shellnotifications",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"shellnotifications"
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/shellnotifications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"shellnotifications"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"notificationId\": \"tempor Ut deserunt\",\n    \"companyId\": -3258993,\n    \"toId\": 43077732,\n    \"fromId\": -61689424,\n    \"createdTime\": \"1983-07-17T03:13:43.474Z\",\n    \"startTime\": \"1990-08-14T17:28:14.668Z\",\n    \"endTime\": \"1961-09-08T16:05:37.613Z\",\n    \"text\": \"Excepteur culpa in ipsum ea\",\n    \"url\": \"labore culpa reprehenderit fugiat Lorem\",\n    \"appendSession\": false,\n    \"rsid\": \"reprehenderit nostr\",\n    \"templateId\": \"enim\",\n    \"templateValues\": [\n      \"deserunt dolor quis\",\n      \"mollit Excepteur\"\n    ],\n    \"notificationStatus\": \"UNREAD\",\n    \"notificationType\": \"USER_SPECIFIC_MESSAGE\",\n    \"recipients\": {\n      \"userIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"groupIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"all\": true\n    },\n    \"locale\": {\n      \"script\": \"voluptate sint culpa ex\",\n      \"country\": \"anim\",\n      \"variant\": \"exercitation non\",\n      \"extensionKeys\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"unicodeLocaleAttributes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"unicodeLocaleKeys\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"iso3Language\": \"cillum amet ut\",\n      \"iso3Country\": \"commodo fugiat irure\",\n      \"displayLanguage\": \"proident laboris Ut Lorem\",\n      \"displayScript\": \"consequat occaecat exercitation\",\n      \"displayCountry\": \"tempor laboris\",\n      \"displayVariant\": \"Ut cillum sint nisi\",\n      \"displayName\": \"qui\",\n      \"language\": \"proident irure\"\n    },\n    \"status\": {\n      \"success\": true,\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  {\n    \"notificationId\": \"mollit magna id\",\n    \"companyId\": -20377695,\n    \"toId\": 54703631,\n    \"fromId\": -33105428,\n    \"createdTime\": \"2010-03-04T09:02:23.338Z\",\n    \"startTime\": \"1967-08-08T14:22:48.087Z\",\n    \"endTime\": \"2016-05-15T00:12:18.528Z\",\n    \"text\": \"qui aute\",\n    \"url\": \"culpa et\",\n    \"appendSession\": true,\n    \"rsid\": \"consequat est\",\n    \"templateId\": \"mollit quis esse consequat Duis\",\n    \"templateValues\": [\n      \"aliquip sunt\",\n      \"Lorem sunt\"\n    ],\n    \"notificationStatus\": \"UNREAD\",\n    \"notificationType\": \"USER_SPECIFIC_MESSAGE\",\n    \"recipients\": {\n      \"userIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"groupIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"all\": false\n    },\n    \"locale\": {\n      \"script\": \"cillum occaecat dolor deserunt\",\n      \"country\": \"Duis est\",\n      \"variant\": \"sunt sed quis velit\",\n      \"extensionKeys\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"unicodeLocaleAttributes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"unicodeLocaleKeys\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"iso3Language\": \"velit irure\",\n      \"iso3Country\": \"ut cillum incididunt\",\n      \"displayLanguage\": \"quis amet\",\n      \"displayScript\": \"proident Duis\",\n      \"displayCountry\": \"non sed magna ea\",\n      \"displayVariant\": \"amet qui proident\",\n      \"displayName\": \"\",\n      \"language\": \"laboris\"\n    },\n    \"status\": {\n      \"success\": false,\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n]"
						}
					]
				},
				{
					"name": "Retrieve all possible notification templates",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/shellnotifications/templates?locale=en_US",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"shellnotifications",
								"templates"
							],
							"query": [
								{
									"key": "locale",
									"value": "en_US",
									"description": "Locale"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/shellnotifications/templates?locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"shellnotifications",
										"templates"
									],
									"query": [
										{
											"key": "locale",
											"value": "en_US"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  \"CONTRIBUTION_ANALYSIS\",\n  \"CONTRIBUTION_ANALYSIS\"\n]"
						}
					]
				}
			]
		},
		{
			"name": "tags",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Retrieves an tag by its id",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tags/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) Tag ID to be retrieved"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tags/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) Tag ID to be retrieved"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": -43452211,\n  \"name\": \"aute\",\n  \"description\": \"aliqua ut culpa\",\n  \"components\": [\n    {\n      \"componentType\": \"eiusmod\",\n      \"componentId\": \"v\",\n      \"tags\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"componentType\": \"laborum minim\",\n      \"componentId\": \"cillum ut consequat\",\n      \"tags\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"name": "Unable to find a tag with the given ID",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tags/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) Tag ID to be retrieved"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unexpected server error while trying to retrieve tag",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tags/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) Tag ID to be retrieved"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Removes the tagId and all associations from that tag to any components",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tags/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The tagId to be deleted"
										}
									]
								},
								"description": "Delete by tagId. Will un-tag any/all components that were associated with the passed tagId."
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tags/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The tagId to be deleted"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"ametf6\": {}\n  },\n  {\n    \"Ut0b6\": {},\n    \"enim_524\": {}\n  }\n]"
								},
								{
									"name": "The given tagId does not exist",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tags/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The tagId to be deleted"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unable to delete the given tagId.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tags/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The tagId to be deleted"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Returns a list of tags for the current user's company",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tags?limit=10&page=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tags"
							],
							"query": [
								{
									"key": "limit",
									"value": "10",
									"description": "Number of results per page"
								},
								{
									"key": "page",
									"value": "0",
									"description": "Page number (base 0 - first page is \"0\")"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tags?limit=10&page=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags"
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": 16122629,\n    \"name\": \"est ipsum\",\n    \"description\": \"do id cupidatat incididunt\",\n    \"components\": [\n      {\n        \"componentType\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"componentId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"tags\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ]\n  },\n  {\n    \"id\": -4474807,\n    \"name\": \"sed mollit com\",\n    \"description\": \"elit reprehenderit ex\",\n    \"components\": [\n      {\n        \"componentType\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"componentId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"tags\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ]\n  }\n]"
						},
						{
							"name": "Unable to retrieve list of tags for user.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tags?limit=10&page=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags"
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "0"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Saves the given tag(s) for the current user's company",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"ametf6\": {}\n  },\n  {\n    \"Ut0b6\": {},\n    \"enim_524\": {}\n  }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/tags",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tags"
							]
						},
						"description": "Allows creation of a new tag and applies that new tag to the passed component"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"ad_0\": {},\n    \"ullamco00\": {},\n    \"uteb\": {}\n  },\n  {\n    \"est_d08\": {}\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": 16122629,\n    \"name\": \"est ipsum\",\n    \"description\": \"do id cupidatat incididunt\",\n    \"components\": [\n      {\n        \"componentType\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"componentId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"tags\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ]\n  },\n  {\n    \"id\": -4474807,\n    \"name\": \"sed mollit com\",\n    \"description\": \"elit reprehenderit ex\",\n    \"components\": [\n      {\n        \"componentType\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"componentId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"tags\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ]\n  }\n]"
						},
						{
							"name": "Unable to save list of tags.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"ad_0\": {},\n    \"ullamco00\": {},\n    \"uteb\": {}\n  },\n  {\n    \"est_d08\": {}\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Disassociates all tags from the given components",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tags?componentIds=aliqua&componentType=project",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tags"
							],
							"query": [
								{
									"key": "componentIds",
									"value": "aliqua",
									"description": "(Required) Comma-separated list of componentIds to operate on."
								},
								{
									"key": "componentType",
									"value": "project",
									"description": "(Required) The component type to operate on."
								}
							]
						},
						"description": "Removes all tags from the passed componentIds. Note that currently this is done in a single DB query, so there is a single combined response for the entire operation."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tags?componentIds=aliqua&componentType=project",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags"
									],
									"query": [
										{
											"key": "componentIds",
											"value": "aliqua"
										},
										{
											"key": "componentType",
											"value": "project"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"ametf6\": {}\n  },\n  {\n    \"Ut0b6\": {},\n    \"enim_524\": {}\n  }\n]"
						},
						{
							"name": "Invalid component type.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tags?componentIds=aliqua&componentType=project",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags"
									],
									"query": [
										{
											"key": "componentIds",
											"value": "aliqua"
										},
										{
											"key": "componentType",
											"value": "project"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unable to remove tags for given components.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tags?componentIds=aliqua&componentType=project",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags"
									],
									"query": [
										{
											"key": "componentIds",
											"value": "aliqua"
										},
										{
											"key": "componentType",
											"value": "project"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "search for tags for several components at once",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"componentType\": \"do Duis nostrud id Excepteur\",\n  \"componentIds\": [\n    \"labor\",\n    \"esse ut Duis ex\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/tags/component/search?limit=10&page=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tags",
								"component",
								"search"
							],
							"query": [
								{
									"key": "limit",
									"value": "10",
									"description": "Number of results per page"
								},
								{
									"key": "page",
									"value": "0",
									"description": "Page number (base 0 - first page is \"0\")"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tags/component/search?limit=10&page=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags",
										"component",
										"search"
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"componentType\": \"culpa est sed\",\n  \"componentId\": \"anim commodo\",\n  \"tags\": [\n    {\n      \"id\": 20965943,\n      \"name\": \"est ex laborum incididunt cillum\",\n      \"description\": \"enim pariatur voluptate non\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": -92554020,\n      \"name\": \"sed eiusmod consectetur magna sunt\",\n      \"description\": \"eiusmod\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Retrieves a tags for a given component by componentId and componentType",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tags/search?componentId=aliqua&componentType=project",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tags",
								"search"
							],
							"query": [
								{
									"key": "componentId",
									"value": "aliqua",
									"description": "(Required) The componentId to operate on. Currently this is just the segmentId."
								},
								{
									"key": "componentType",
									"value": "project",
									"description": "(Required) The component type to operate on."
								}
							]
						},
						"description": "Given a componentId, return all tags associated with that component"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tags/search?componentId=aliqua&componentType=project",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags",
										"search"
									],
									"query": [
										{
											"key": "componentId",
											"value": "aliqua"
										},
										{
											"key": "componentType",
											"value": "project"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": 16122629,\n    \"name\": \"est ipsum\",\n    \"description\": \"do id cupidatat incididunt\",\n    \"components\": [\n      {\n        \"componentType\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"componentId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"tags\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ]\n  },\n  {\n    \"id\": -4474807,\n    \"name\": \"sed mollit com\",\n    \"description\": \"elit reprehenderit ex\",\n    \"components\": [\n      {\n        \"componentType\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"componentId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"tags\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ]\n  }\n]"
						},
						{
							"name": "Invalid component type.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tags/search?componentId=aliqua&componentType=project",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags",
										"search"
									],
									"query": [
										{
											"key": "componentId",
											"value": "aliqua"
										},
										{
											"key": "componentType",
											"value": "project"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unable to retrieve tags for given component.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tags/search?componentId=aliqua&componentType=project",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags",
										"search"
									],
									"query": [
										{
											"key": "componentId",
											"value": "aliqua"
										},
										{
											"key": "componentType",
											"value": "project"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Retrieves component ids associated with the given tag names",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tags/tagnames?tagNames=aliqua&componentType=project",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tags",
								"tagnames"
							],
							"query": [
								{
									"key": "tagNames",
									"value": "aliqua",
									"description": "(Required) Comma separated list of tag names."
								},
								{
									"key": "componentType",
									"value": "project",
									"description": "(Required) The component type to operate on."
								}
							]
						},
						"description": "Given a comma separated list of tag names, return component ids associated with them."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tags/tagnames?tagNames=aliqua&componentType=project",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags",
										"tagnames"
									],
									"query": [
										{
											"key": "tagNames",
											"value": "aliqua"
										},
										{
											"key": "componentType",
											"value": "project"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  \"cillum minim dolore\",\n  \"ullamco a\"\n]"
						},
						{
							"name": "Invalid component type.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tags/tagnames?tagNames=aliqua&componentType=project",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags",
										"tagnames"
									],
									"query": [
										{
											"key": "tagNames",
											"value": "aliqua"
										},
										{
											"key": "componentType",
											"value": "project"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unable to retrieve tags for given component.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tags/tagnames?tagNames=aliqua&componentType=project",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags",
										"tagnames"
									],
									"query": [
										{
											"key": "tagNames",
											"value": "aliqua"
										},
										{
											"key": "componentType",
											"value": "project"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Tag a component with one or many tags at once. WARNING: Authoritative; deletes/overwrites all pre-existing associations",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"componentType\": \"dolor sit enim nisi\",\n    \"componentId\": \"in ea sed\",\n    \"tags\": [\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"components\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"components\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ]\n  },\n  {\n    \"componentType\": \"aute ips\",\n    \"componentId\": \"pariatur tempor magna in\",\n    \"tags\": [\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"components\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"components\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ]\n  }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/tags/tagitems",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tags",
								"tagitems"
							]
						},
						"description": "This endpoint allows many tags at once to be created/deleted. Any tags passed to this endpoint will become the *only* tags for that componentId (all other tags will be removed)."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"componentType\": \"do ex\",\n    \"componentId\": \"cillum consequat amet\",\n    \"tags\": [\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"components\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"components\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ]\n  },\n  {\n    \"componentType\": \"laboris dolor dolor\",\n    \"componentId\": \"irure id dolore\",\n    \"tags\": [\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"components\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"components\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ]\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/tags/tagitems",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags",
										"tagitems"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"componentType\": \"dolor sit enim nisi\",\n    \"componentId\": \"in ea sed\",\n    \"tags\": [\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"components\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"components\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ]\n  },\n  {\n    \"componentType\": \"aute ips\",\n    \"componentId\": \"pariatur tempor magna in\",\n    \"tags\": [\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"components\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"components\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ]\n  }\n]"
						},
						{
							"name": "Unable to save tag list.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"componentType\": \"do ex\",\n    \"componentId\": \"cillum consequat amet\",\n    \"tags\": [\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"components\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"components\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ]\n  },\n  {\n    \"componentType\": \"laboris dolor dolor\",\n    \"componentId\": \"irure id dolore\",\n    \"tags\": [\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"components\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"components\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ]\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/tags/tagitems",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags",
										"tagitems"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "usage",
			"item": [
				{
					"name": "{usage Type}",
					"item": [
						{
							"name": "Retrieves each occurrence of usage data for items of the specified type",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/usage/:usageType?rsid=aliqua&startTime=aliqua&endTime=aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usage",
										":usageType"
									],
									"query": [
										{
											"key": "rsid",
											"value": "aliqua",
											"description": "Filter to only include results for the passed report suite ID"
										},
										{
											"key": "startTime",
											"value": "aliqua",
											"description": "Filter to only include results from after the start time (ISO8601 format)"
										},
										{
											"key": "endTime",
											"value": "aliqua",
											"description": "Filter to only include results from before the end time (ISO8601 format)"
										}
									],
									"variable": [
										{
											"key": "usageType",
											"value": "metrics",
											"description": "(Required) The item type to retrieve usage data for"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/usage/:usageType?rsid=aliqua&startTime=aliqua&endTime=aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usage",
												":usageType"
											],
											"query": [
												{
													"key": "rsid",
													"value": "aliqua"
												},
												{
													"key": "startTime",
													"value": "aliqua"
												},
												{
													"key": "endTime",
													"value": "aliqua"
												}
											],
											"variable": [
												{
													"key": "usageType",
													"value": "metrics",
													"description": "(Required) The item type to retrieve usage data for"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"rsid\": \"in dolor\",\n  \"dataId\": \"esse\",\n  \"usageId\": \"ex est minim Ut ut\",\n  \"itemId\": \"eu incididunt\",\n  \"loginId\": -82941283,\n  \"imsUserId\": \"sit cupidatat consequat laborum commodo\",\n  \"companyId\": -58570350,\n  \"imsOrgId\": \"lab\",\n  \"timestamp\": \"1961-08-12T12:44:55.624Z\",\n  \"itemDetails\": {\n    \"Excepteurcbb\": \"nostrud minim consectetur non\"\n  }\n}"
								}
							]
						},
						{
							"name": "Track usage for the item",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"ametf6\": {}\n  },\n  {\n    \"Ut0b6\": {},\n    \"enim_524\": {}\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/usage/:usageType",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usage",
										":usageType"
									],
									"variable": [
										{
											"key": "usageType",
											"value": "metrics",
											"description": "(Required) The item type to post usage data for"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"ad_0\": {},\n    \"ullamco00\": {},\n    \"uteb\": {}\n  },\n  {\n    \"est_d08\": {}\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usage/:usageType",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usage",
												":usageType"
											],
											"variable": [
												{
													"key": "usageType",
													"value": "metrics",
													"description": "(Required) The item type to post usage data for"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"rsid\": \"in dolor\",\n  \"dataId\": \"esse\",\n  \"usageId\": \"ex est minim Ut ut\",\n  \"itemId\": \"eu incididunt\",\n  \"loginId\": -82941283,\n  \"imsUserId\": \"sit cupidatat consequat laborum commodo\",\n  \"companyId\": -58570350,\n  \"imsOrgId\": \"lab\",\n  \"timestamp\": \"1961-08-12T12:44:55.624Z\",\n  \"itemDetails\": {\n    \"Excepteurcbb\": \"nostrud minim consectetur non\"\n  }\n}"
								}
							]
						},
						{
							"name": "Retrieves summary usage data for each item of the specified type",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/usage/:usageType/summary?rsid=aliqua&startTime=aliqua&endTime=aliqua&expansion=relevancyScore,relevancyScore&cached=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usage",
										":usageType",
										"summary"
									],
									"query": [
										{
											"key": "rsid",
											"value": "aliqua",
											"description": "Filter to only include results for the passed report suite ID"
										},
										{
											"key": "startTime",
											"value": "aliqua",
											"description": "Filter to only include results from after the start time (ISO8601 format)"
										},
										{
											"key": "endTime",
											"value": "aliqua",
											"description": "Filter to only include results from before the end time (ISO8601 format)"
										},
										{
											"key": "expansion",
											"value": "relevancyScore,relevancyScore",
											"description": "Comma-delimited list of additional fields to include on response."
										},
										{
											"key": "cached",
											"value": "true",
											"description": "return cached results"
										}
									],
									"variable": [
										{
											"key": "usageType",
											"value": "metrics",
											"description": "(Required) The item type to retrieve usage data for"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/usage/:usageType/summary?rsid=aliqua&startTime=aliqua&endTime=aliqua&expansion=relevancyScore,relevancyScore&cached=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usage",
												":usageType",
												"summary"
											],
											"query": [
												{
													"key": "rsid",
													"value": "aliqua"
												},
												{
													"key": "startTime",
													"value": "aliqua"
												},
												{
													"key": "endTime",
													"value": "aliqua"
												},
												{
													"key": "expansion",
													"value": "relevancyScore,relevancyScore"
												},
												{
													"key": "cached",
													"value": "true"
												}
											],
											"variable": [
												{
													"key": "usageType",
													"value": "metrics",
													"description": "(Required) The item type to retrieve usage data for"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": 61572297,\n  \"mostRecentTimestamp\": \"2011-08-10T16:14:24.812Z\",\n  \"itemId\": \"nulla sed\",\n  \"relevancyScore\": 27274478.371774524,\n  \"companyCount\": -84624911\n}"
								}
							]
						},
						{
							"name": "Deletes a specific usage row from the DB",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/usage/:usageType/:usageId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usage",
										":usageType",
										":usageId"
									],
									"variable": [
										{
											"key": "usageType",
											"value": "metrics",
											"description": "(Required) The item type of the item to be deleted"
										},
										{
											"key": "usageId",
											"value": "aliqua",
											"description": "(Required) The ID of the usage row to be deleted"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/usage/:usageType/:usageId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usage",
												":usageType",
												":usageId"
											],
											"variable": [
												{
													"key": "usageType",
													"value": "metrics",
													"description": "(Required) The item type of the item to be deleted"
												},
												{
													"key": "usageId",
													"value": "aliqua",
													"description": "(Required) The ID of the usage row to be deleted"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"Lorem_6\": {},\n  \"consectetur1b7\": {}\n}"
								}
							]
						},
						{
							"name": "Deletes a specific all usage information for an item",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/usage/:usageType/itemId/:itemId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usage",
										":usageType",
										"itemId",
										":itemId"
									],
									"variable": [
										{
											"key": "usageType",
											"value": "metrics",
											"description": "(Required) The item type of the item to be deleted"
										},
										{
											"key": "itemId",
											"value": "aliqua",
											"description": "(Required) The ID of the usage item to be deleted"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/usage/:usageType/itemId/:itemId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usage",
												":usageType",
												"itemId",
												":itemId"
											],
											"variable": [
												{
													"key": "usageType",
													"value": "metrics",
													"description": "(Required) The item type of the item to be deleted"
												},
												{
													"key": "itemId",
													"value": "aliqua",
													"description": "(Required) The ID of the usage item to be deleted"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"Lorem_6\": {},\n  \"consectetur1b7\": {}\n}"
								}
							]
						}
					]
				},
				{
					"name": "search for favorite status for several components at once, by the current user",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"componentType\": \"do Duis nostrud id Excepteur\",\n  \"componentIds\": [\n    \"labor\",\n    \"esse ut Duis ex\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/usage/summary/search?expansion=relevancyScore,relevancyScore&cached=true&limit=10&page=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usage",
								"summary",
								"search"
							],
							"query": [
								{
									"key": "expansion",
									"value": "relevancyScore,relevancyScore",
									"description": "Comma-delimited list of additional fields to include on response."
								},
								{
									"key": "cached",
									"value": "true",
									"description": "return cached results"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Number of results per page"
								},
								{
									"key": "page",
									"value": "0",
									"description": "Page number (base 0 - first page is \"0\")"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/usage/summary/search?expansion=relevancyScore,relevancyScore&cached=true&limit=10&page=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usage",
										"summary",
										"search"
									],
									"query": [
										{
											"key": "expansion",
											"value": "relevancyScore,relevancyScore"
										},
										{
											"key": "cached",
											"value": "true"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"count\": 61572297,\n  \"mostRecentTimestamp\": \"2011-08-10T16:14:24.812Z\",\n  \"itemId\": \"nulla sed\",\n  \"relevancyScore\": 27274478.371774524,\n  \"companyCount\": -84624911\n}"
						}
					]
				}
			]
		},
		{
			"name": "users",
			"item": [
				{
					"name": "userpreferences",
					"item": [
						{
							"name": "Returns the user preferences",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/userpreferences?expansion=landingPageFullUrl,companyPreferences",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"userpreferences"
									],
									"query": [
										{
											"key": "expansion",
											"value": "landingPageFullUrl,companyPreferences",
											"description": "Comma-delimited list of additional metadata fields to include on response."
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/userpreferences?expansion=separators,landingPageFullUrl",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"userpreferences"
											],
											"query": [
												{
													"key": "expansion",
													"value": "separators,landingPageFullUrl"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"numberFormat\": \"amet ad\",\n  \"csvDelimiter\": \"tempor ullamco\",\n  \"landingPage\": \"dolore pariatur\",\n  \"landingPageFullUrl\": \"cupidatat elit\",\n  \"defaultReportSuite\": \"esse ipsum eu ea\",\n  \"useMostRecentReportSuite\": true,\n  \"companyPreferences\": {\n    \"hideReportsPanel\": false,\n    \"authenticateWithAdobeForNoLoginLinks\": true,\n    \"passwordRequiredForNoLoginLinks\": false\n  },\n  \"decimalSeparator\": \"dolore\",\n  \"thousandsSeparator\": \"enim aliquip\"\n}"
								}
							]
						},
						{
							"name": "Updates the user preferences; supports partial updates",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"numberFormat\": \"amet ad\",\n  \"csvDelimiter\": \"tempor ullamco\",\n  \"landingPage\": \"dolore pariatur\",\n  \"landingPageFullUrl\": \"cupidatat elit\",\n  \"defaultReportSuite\": \"esse ipsum eu ea\",\n  \"useMostRecentReportSuite\": true,\n  \"companyPreferences\": {\n    \"hideReportsPanel\": false,\n    \"authenticateWithAdobeForNoLoginLinks\": true,\n    \"passwordRequiredForNoLoginLinks\": false\n  },\n  \"decimalSeparator\": \"dolore\",\n  \"thousandsSeparator\": \"enim aliquip\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/userpreferences?expansion=landingPageFullUrl,companyPreferences",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"userpreferences"
									],
									"query": [
										{
											"key": "expansion",
											"value": "landingPageFullUrl,companyPreferences",
											"description": "Comma-delimited list of additional metadata fields to include on response."
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"numberFormat\": \"amet ad\",\n  \"csvDelimiter\": \"tempor ullamco\",\n  \"landingPage\": \"dolore pariatur\",\n  \"landingPageFullUrl\": \"cupidatat elit\",\n  \"defaultReportSuite\": \"esse ipsum eu ea\",\n  \"useMostRecentReportSuite\": true,\n  \"companyPreferences\": {\n    \"hideReportsPanel\": false,\n    \"authenticateWithAdobeForNoLoginLinks\": true,\n    \"passwordRequiredForNoLoginLinks\": false\n  },\n  \"decimalSeparator\": \"dolore\",\n  \"thousandsSeparator\": \"enim aliquip\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/userpreferences?expansion=separators,landingPageFullUrl",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"userpreferences"
											],
											"query": [
												{
													"key": "expansion",
													"value": "separators,landingPageFullUrl"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"numberFormat\": \"amet ad\",\n  \"csvDelimiter\": \"tempor ullamco\",\n  \"landingPage\": \"dolore pariatur\",\n  \"landingPageFullUrl\": \"cupidatat elit\",\n  \"defaultReportSuite\": \"esse ipsum eu ea\",\n  \"useMostRecentReportSuite\": true,\n  \"companyPreferences\": {\n    \"hideReportsPanel\": false,\n    \"authenticateWithAdobeForNoLoginLinks\": true,\n    \"passwordRequiredForNoLoginLinks\": false\n  },\n  \"decimalSeparator\": \"dolore\",\n  \"thousandsSeparator\": \"enim aliquip\"\n}"
								}
							]
						},
						{
							"name": "Deletes the user's preferences",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/userpreferences",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"userpreferences"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/userpreferences",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"userpreferences"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Updates the user preferences for a list of users; the caller must be an admin; supports partial updates",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"numberFormat\": \"et quis ut tempor laboris\",\n  \"csvDelimiter\": \"sit\",\n  \"landingPage\": \"do exercitation qui ut\",\n  \"landingPageFullUrl\": \"sunt aliqua dolore\",\n  \"defaultReportSuite\": \"sed commodo\",\n  \"useMostRecentReportSuite\": false,\n  \"companyPreferences\": {\n    \"hideReportsPanel\": false,\n    \"authenticateWithAdobeForNoLoginLinks\": false,\n    \"passwordRequiredForNoLoginLinks\": false\n  },\n  \"userIds\": [\n    \"fugiat dolore\",\n    \"aute irure\"\n  ],\n  \"decimalSeparator\": \"deserunt velit\",\n  \"thousandsSeparator\": \"nisi ipsum cillum sed\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/userpreferences/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"userpreferences",
										"bulk"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"numberFormat\": \"adipisicing qui consequat dolor\",\n  \"csvDelimiter\": \"ut esse\",\n  \"landingPage\": \"amet qui nostrud occaecat\",\n  \"landingPageFullUrl\": \"i\",\n  \"defaultReportSuite\": \"ut dolor adipisicing Duis\",\n  \"useMostRecentReportSuite\": false,\n  \"companyPreferences\": {\n    \"hideReportsPanel\": false,\n    \"authenticateWithAdobeForNoLoginLinks\": true,\n    \"passwordRequiredForNoLoginLinks\": true\n  },\n  \"userIds\": [\n    \"fugiat ut nostrud amet\",\n    \"sed anim dolor culpa adipisicing\"\n  ],\n  \"decimalSeparator\": \"officia in in\",\n  \"thousandsSeparator\": \"id ipsum\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/userpreferences/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"userpreferences",
												"bulk"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"numberFormat\": \"adipisicing qui consequat dolor\",\n  \"csvDelimiter\": \"ut esse\",\n  \"landingPage\": \"amet qui nostrud occaecat\",\n  \"landingPageFullUrl\": \"i\",\n  \"defaultReportSuite\": \"ut dolor adipisicing Duis\",\n  \"useMostRecentReportSuite\": false,\n  \"companyPreferences\": {\n    \"hideReportsPanel\": false,\n    \"authenticateWithAdobeForNoLoginLinks\": true,\n    \"passwordRequiredForNoLoginLinks\": true\n  },\n  \"userIds\": [\n    \"fugiat ut nostrud amet\",\n    \"sed anim dolor culpa adipisicing\"\n  ],\n  \"decimalSeparator\": \"officia in in\",\n  \"thousandsSeparator\": \"id ipsum\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "persistentattributes",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Returns a persistent attribute",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/persistentattributes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"persistentattributes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) Persistent attribute id"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/persistentattributes/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														"persistentattributes",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) Persistent attribute id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"fugiat dolore pariatur\",\n  \"value\": {\n    \"adipisicing2d\": {},\n    \"aliquip_5\": {}\n  }\n}"
										}
									]
								},
								{
									"name": "Updates a persistent attribute",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"fugiat dolore pariatur\",\n  \"value\": {\n    \"adipisicing2d\": {},\n    \"aliquip_5\": {}\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/persistentattributes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"persistentattributes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) Persistent attribute id"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"fugiat dolore pariatur\",\n  \"value\": {\n    \"adipisicing2d\": {},\n    \"aliquip_5\": {}\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/persistentattributes/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														"persistentattributes",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) Persistent attribute id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"fugiat dolore pariatur\",\n  \"value\": {\n    \"adipisicing2d\": {},\n    \"aliquip_5\": {}\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Returns all persistent attribute ids",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/persistentattributes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"persistentattributes"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/persistentattributes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"persistentattributes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  [],\n  []\n]"
								}
							]
						}
					]
				},
				{
					"name": "{login Id}",
					"item": [
						{
							"name": "Update a user from the current user's login company",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"companyid\": 69776389,\n  \"loginId\": -64958385,\n  \"login\": \"aute\",\n  \"admin\": false,\n  \"marketingCloudOnly\": true,\n  \"apiKey\": \"elit sint esse\",\n  \"changePassword\": false,\n  \"createDate\": \"1955-11-13T23:09:19.500Z\",\n  \"disabled\": true,\n  \"adobeStatus\": \"adobeActive\",\n  \"email\": \"incididunt aliquip dolore\",\n  \"firstName\": \"sed proident qui dolor occaecat\",\n  \"fullName\": \"nostrud magna commodo deserunt\",\n  \"imsUserId\": \"tempor mollit in reprehenderit ea\",\n  \"lastName\": \"do fugiat dolore ipsum\",\n  \"lastAccess\": \"1980-07-29T11:00:11.315Z\",\n  \"legacyApiKey\": \"in in Excepteur\",\n  \"needsToAcceptEula\": false,\n  \"needsToAcceptBetaEula\": true,\n  \"password\": \"eiusmod labore\",\n  \"passwordHash\": \"veniam et labore\",\n  \"phoneNumber\": \"mollit pariatur nostrud\",\n  \"tempLoginEnd\": \"1978-06-10T17:59:11.608Z\",\n  \"title\": \"qui in commodo\",\n  \"numberLocalization\": {\n    \"thousandsSeparator\": \"Duis consequat ea nisi\",\n    \"decimalSeparator\": \"esse\"\n  },\n  \"preferredNumberLocale\": \"dolore sunt\",\n  \"imsOrgId\": \"in fugiat aliquip\",\n  \"migrationStatus\": \"in pariatur\",\n  \"migrationReason\": \"Ut do aute enim\",\n  \"tenantId\": \"veniam quis\",\n  \"csvDelimiter\": \"eu dolore dolore\",\n  \"imsProductAdmin\": false,\n  \"imsOrgAdmin\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/:loginId?expansion=needsToAcceptEula,needsToAcceptBetaEula&locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":loginId"
									],
									"query": [
										{
											"key": "expansion",
											"value": "needsToAcceptEula,needsToAcceptBetaEula",
											"description": "Comma-delimited list of additional analytics user metadata fields to include on response."
										},
										{
											"key": "locale",
											"value": "en_US",
											"description": "Locale, used for determining number locale"
										}
									],
									"variable": [
										{
											"key": "loginId",
											"value": "43407647",
											"description": "(Required) The logindId for the user to delete"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"companyid\": 69776389,\n  \"loginId\": -64958385,\n  \"login\": \"aute\",\n  \"admin\": false,\n  \"marketingCloudOnly\": true,\n  \"apiKey\": \"elit sint esse\",\n  \"changePassword\": false,\n  \"createDate\": \"1955-11-13T23:09:19.500Z\",\n  \"disabled\": true,\n  \"adobeStatus\": \"adobeActive\",\n  \"email\": \"incididunt aliquip dolore\",\n  \"firstName\": \"sed proident qui dolor occaecat\",\n  \"fullName\": \"nostrud magna commodo deserunt\",\n  \"imsUserId\": \"tempor mollit in reprehenderit ea\",\n  \"lastName\": \"do fugiat dolore ipsum\",\n  \"lastAccess\": \"1980-07-29T11:00:11.315Z\",\n  \"legacyApiKey\": \"in in Excepteur\",\n  \"needsToAcceptEula\": false,\n  \"needsToAcceptBetaEula\": true,\n  \"password\": \"eiusmod labore\",\n  \"passwordHash\": \"veniam et labore\",\n  \"phoneNumber\": \"mollit pariatur nostrud\",\n  \"tempLoginEnd\": \"1978-06-10T17:59:11.608Z\",\n  \"title\": \"qui in commodo\",\n  \"numberLocalization\": {\n    \"thousandsSeparator\": \"Duis consequat ea nisi\",\n    \"decimalSeparator\": \"esse\"\n  },\n  \"preferredNumberLocale\": \"dolore sunt\",\n  \"imsOrgId\": \"in fugiat aliquip\",\n  \"migrationStatus\": \"in pariatur\",\n  \"migrationReason\": \"Ut do aute enim\",\n  \"tenantId\": \"veniam quis\",\n  \"csvDelimiter\": \"eu dolore dolore\",\n  \"imsProductAdmin\": false,\n  \"imsOrgAdmin\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:loginId?expansion=imsUserMigration,needsToAcceptEula&locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":loginId"
											],
											"query": [
												{
													"key": "expansion",
													"value": "imsUserMigration,needsToAcceptEula"
												},
												{
													"key": "locale",
													"value": "en_US"
												}
											],
											"variable": [
												{
													"key": "loginId",
													"value": "43407647",
													"description": "(Required) The logindId for the user to delete"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"companyid\": 69776389,\n  \"loginId\": -64958385,\n  \"login\": \"aute\",\n  \"admin\": false,\n  \"marketingCloudOnly\": true,\n  \"apiKey\": \"elit sint esse\",\n  \"changePassword\": false,\n  \"createDate\": \"1955-11-13T23:09:19.500Z\",\n  \"disabled\": true,\n  \"adobeStatus\": \"adobeActive\",\n  \"email\": \"incididunt aliquip dolore\",\n  \"firstName\": \"sed proident qui dolor occaecat\",\n  \"fullName\": \"nostrud magna commodo deserunt\",\n  \"imsUserId\": \"tempor mollit in reprehenderit ea\",\n  \"lastName\": \"do fugiat dolore ipsum\",\n  \"lastAccess\": \"1980-07-29T11:00:11.315Z\",\n  \"legacyApiKey\": \"in in Excepteur\",\n  \"needsToAcceptEula\": false,\n  \"needsToAcceptBetaEula\": true,\n  \"password\": \"eiusmod labore\",\n  \"passwordHash\": \"veniam et labore\",\n  \"phoneNumber\": \"mollit pariatur nostrud\",\n  \"tempLoginEnd\": \"1978-06-10T17:59:11.608Z\",\n  \"title\": \"qui in commodo\",\n  \"numberLocalization\": {\n    \"thousandsSeparator\": \"Duis consequat ea nisi\",\n    \"decimalSeparator\": \"esse\"\n  },\n  \"preferredNumberLocale\": \"dolore sunt\",\n  \"imsOrgId\": \"in fugiat aliquip\",\n  \"migrationStatus\": \"in pariatur\",\n  \"migrationReason\": \"Ut do aute enim\",\n  \"tenantId\": \"veniam quis\",\n  \"csvDelimiter\": \"eu dolore dolore\",\n  \"imsProductAdmin\": false,\n  \"imsOrgAdmin\": true\n}"
								},
								{
									"name": "Unexpected error occurred while updating user",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"companyid\": 69776389,\n  \"loginId\": -64958385,\n  \"login\": \"aute\",\n  \"admin\": false,\n  \"marketingCloudOnly\": true,\n  \"apiKey\": \"elit sint esse\",\n  \"changePassword\": false,\n  \"createDate\": \"1955-11-13T23:09:19.500Z\",\n  \"disabled\": true,\n  \"adobeStatus\": \"adobeActive\",\n  \"email\": \"incididunt aliquip dolore\",\n  \"firstName\": \"sed proident qui dolor occaecat\",\n  \"fullName\": \"nostrud magna commodo deserunt\",\n  \"imsUserId\": \"tempor mollit in reprehenderit ea\",\n  \"lastName\": \"do fugiat dolore ipsum\",\n  \"lastAccess\": \"1980-07-29T11:00:11.315Z\",\n  \"legacyApiKey\": \"in in Excepteur\",\n  \"needsToAcceptEula\": false,\n  \"needsToAcceptBetaEula\": true,\n  \"password\": \"eiusmod labore\",\n  \"passwordHash\": \"veniam et labore\",\n  \"phoneNumber\": \"mollit pariatur nostrud\",\n  \"tempLoginEnd\": \"1978-06-10T17:59:11.608Z\",\n  \"title\": \"qui in commodo\",\n  \"numberLocalization\": {\n    \"thousandsSeparator\": \"Duis consequat ea nisi\",\n    \"decimalSeparator\": \"esse\"\n  },\n  \"preferredNumberLocale\": \"dolore sunt\",\n  \"imsOrgId\": \"in fugiat aliquip\",\n  \"migrationStatus\": \"in pariatur\",\n  \"migrationReason\": \"Ut do aute enim\",\n  \"tenantId\": \"veniam quis\",\n  \"csvDelimiter\": \"eu dolore dolore\",\n  \"imsProductAdmin\": false,\n  \"imsOrgAdmin\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:loginId?expansion=imsUserMigration,needsToAcceptEula&locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":loginId"
											],
											"query": [
												{
													"key": "expansion",
													"value": "imsUserMigration,needsToAcceptEula"
												},
												{
													"key": "locale",
													"value": "en_US"
												}
											],
											"variable": [
												{
													"key": "loginId",
													"value": "43407647",
													"description": "(Required) The logindId for the user to delete"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete a user **WARNING:** and its associated entities (projects, scheduled projects, calculated metrics, alerts, and segments) from the current user's login company",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:loginId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":loginId"
									],
									"variable": [
										{
											"key": "loginId",
											"value": "43407647",
											"description": "(Required) The logindId for the user to delete"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:loginId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":loginId"
											],
											"variable": [
												{
													"key": "loginId",
													"value": "43407647",
													"description": "(Required) The logindId for the user to delete"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"result\": \"proident sit\",\n  \"message\": \"est tempor do sed et\"\n}"
								},
								{
									"name": "Published segments found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:loginId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":loginId"
											],
											"variable": [
												{
													"key": "loginId",
													"value": "43407647",
													"description": "(Required) The logindId for the user to delete"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"unauthorized\",\n  \"errorDescription\": \"commodo cillum fugiat\",\n  \"errorId\": \"elit\",\n  \"errorDetails\": {\n    \"mollit8a\": {}\n  },\n  \"rootCauseService\": \"mollit elit sed\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "me",
					"item": [
						{
							"name": "Get the current user",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/me?expansion=admin,numberLocalization",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"me"
									],
									"query": [
										{
											"key": "expansion",
											"value": "admin,numberLocalization",
											"description": "Comma-delimited list of additional analytics user metadata fields to include on response."
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/me?expansion=admin,admin",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"me"
											],
											"query": [
												{
													"key": "expansion",
													"value": "admin,admin"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"companyid\": 69776389,\n  \"loginId\": -64958385,\n  \"login\": \"aute\",\n  \"admin\": false,\n  \"marketingCloudOnly\": true,\n  \"apiKey\": \"elit sint esse\",\n  \"changePassword\": false,\n  \"createDate\": \"1955-11-13T23:09:19.500Z\",\n  \"disabled\": true,\n  \"adobeStatus\": \"adobeActive\",\n  \"email\": \"incididunt aliquip dolore\",\n  \"firstName\": \"sed proident qui dolor occaecat\",\n  \"fullName\": \"nostrud magna commodo deserunt\",\n  \"imsUserId\": \"tempor mollit in reprehenderit ea\",\n  \"lastName\": \"do fugiat dolore ipsum\",\n  \"lastAccess\": \"1980-07-29T11:00:11.315Z\",\n  \"legacyApiKey\": \"in in Excepteur\",\n  \"needsToAcceptEula\": false,\n  \"needsToAcceptBetaEula\": true,\n  \"password\": \"eiusmod labore\",\n  \"passwordHash\": \"veniam et labore\",\n  \"phoneNumber\": \"mollit pariatur nostrud\",\n  \"tempLoginEnd\": \"1978-06-10T17:59:11.608Z\",\n  \"title\": \"qui in commodo\",\n  \"numberLocalization\": {\n    \"thousandsSeparator\": \"Duis consequat ea nisi\",\n    \"decimalSeparator\": \"esse\"\n  },\n  \"preferredNumberLocale\": \"dolore sunt\",\n  \"imsOrgId\": \"in fugiat aliquip\",\n  \"migrationStatus\": \"in pariatur\",\n  \"migrationReason\": \"Ut do aute enim\",\n  \"tenantId\": \"veniam quis\",\n  \"csvDelimiter\": \"eu dolore dolore\",\n  \"imsProductAdmin\": false,\n  \"imsOrgAdmin\": true\n}"
								}
							]
						},
						{
							"name": "Get customer support permissions for current user",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/me/supportedusercontactid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"me",
										"supportedusercontactid"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/me/supportedusercontactid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"me",
												"supportedusercontactid"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"supportedUserContactId\": \"nostrud fugiat occaecat adipisicing\",\n  \"supportedUserLoginId\": \"ullamco anim voluptate pariatur\"\n}"
								}
							]
						},
						{
							"name": "Resets any auth caches that exist for the provided authentication method",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/me/auth/cacheReset",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"me",
										"auth",
										"cacheReset"
									]
								}
							},
							"response": [
								{
									"name": "Internal error resetting auth",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/me/auth/cacheReset",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"me",
												"auth",
												"cacheReset"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Returns a list of users for the current user's login company",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users?imsUserIds=aliqua&expansion=needsToAcceptEula,needsToAcceptBetaEula&addAdminExpansion=true&useCache=true&limit=10&page=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "imsUserIds",
									"value": "aliqua",
									"description": "Comma-delimited list of IMS User IDs to filter by"
								},
								{
									"key": "expansion",
									"value": "needsToAcceptEula,needsToAcceptBetaEula",
									"description": "Comma-delimited list of additional analytics user metadata fields to include on response."
								},
								{
									"key": "addAdminExpansion",
									"value": "true",
									"description": "Right now we default to including the admin expansion. Set this flag to false to not include the admin expansion by default."
								},
								{
									"key": "useCache",
									"value": "true",
									"description": "Use cache"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Number of results per page"
								},
								{
									"key": "page",
									"value": "0",
									"description": "Page number (base 0 - first page is \"0\")"
								}
							]
						},
						"description": "Retrieves a list of all users for the company designated by the auth token."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users?imsUserIds=aliqua&expansion=imsUserMigration,needsToAcceptEula&addAdminExpansion=true&useCache=true&limit=10&page=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "imsUserIds",
											"value": "aliqua"
										},
										{
											"key": "expansion",
											"value": "imsUserMigration,needsToAcceptEula"
										},
										{
											"key": "addAdminExpansion",
											"value": "true"
										},
										{
											"key": "useCache",
											"value": "true"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"companyid\": -84921588,\n    \"loginId\": 45312556,\n    \"login\": \"quis sunt e\",\n    \"admin\": true,\n    \"marketingCloudOnly\": true,\n    \"apiKey\": \"occaecat nostrud aliquip\",\n    \"changePassword\": false,\n    \"createDate\": \"1968-12-02T19:50:23.298Z\",\n    \"disabled\": false,\n    \"adobeStatus\": \"adobeInactive\",\n    \"email\": \"nulla occaecat\",\n    \"firstName\": \"sed dolore id\",\n    \"fullName\": \"consectetur amet\",\n    \"imsUserId\": \"Ut et tempor\",\n    \"lastName\": \"ea eu sit\",\n    \"lastAccess\": \"2007-07-17T20:09:27.022Z\",\n    \"legacyApiKey\": \"aliq\",\n    \"needsToAcceptEula\": false,\n    \"needsToAcceptBetaEula\": false,\n    \"password\": \"elit velit eiusmod\",\n    \"passwordHash\": \"culpa ut occaecat\",\n    \"phoneNumber\": \"officia anim ad\",\n    \"tempLoginEnd\": \"2020-06-02T09:41:15.468Z\",\n    \"title\": \"nisi ea\",\n    \"numberLocalization\": {\n      \"thousandsSeparator\": \"enim ullamco\",\n      \"decimalSeparator\": \"irure nostrud incidi\"\n    },\n    \"preferredNumberLocale\": \"ipsum occaecat\",\n    \"imsOrgId\": \"Excepteur cupidatat minim laboris\",\n    \"migrationStatus\": \"ut eiusmod ea cillum\",\n    \"migrationReason\": \"cupidatat\",\n    \"tenantId\": \"nostrud aute\",\n    \"csvDelimiter\": \"esse\",\n    \"imsProductAdmin\": false,\n    \"imsOrgAdmin\": true\n  },\n  {\n    \"companyid\": 54376931,\n    \"loginId\": -11797418,\n    \"login\": \"sed irure\",\n    \"admin\": false,\n    \"marketingCloudOnly\": true,\n    \"apiKey\": \"incididunt dolor pariatur\",\n    \"changePassword\": false,\n    \"createDate\": \"2016-08-16T06:32:23.527Z\",\n    \"disabled\": true,\n    \"adobeStatus\": \"adobeInactive\",\n    \"email\": \"enim\",\n    \"firstName\": \"ut tempor\",\n    \"fullName\": \"sit\",\n    \"imsUserId\": \"Ut in\",\n    \"lastName\": \"aliqua fugiat ad\",\n    \"lastAccess\": \"1958-03-13T22:52:21.447Z\",\n    \"legacyApiKey\": \"non sunt nisi\",\n    \"needsToAcceptEula\": true,\n    \"needsToAcceptBetaEula\": true,\n    \"password\": \"veniam sint dolore\",\n    \"passwordHash\": \"exercitation dolor\",\n    \"phoneNumber\": \"consectetur adipisicing ad\",\n    \"tempLoginEnd\": \"1987-08-11T04:26:26.497Z\",\n    \"title\": \"in mollit ad incididunt est\",\n    \"numberLocalization\": {\n      \"thousandsSeparator\": \"ipsum labore\",\n      \"decimalSeparator\": \"et magna Excepteur quis\"\n    },\n    \"preferredNumberLocale\": \"mollit adipisicing\",\n    \"imsOrgId\": \"Excepteur non nulla amet velit\",\n    \"migrationStatus\": \"nulla esse\",\n    \"migrationReason\": \"veniam pariatur\",\n    \"tenantId\": \"amet consequat minim\",\n    \"csvDelimiter\": \"pariatur dolore\",\n    \"imsProductAdmin\": true,\n    \"imsOrgAdmin\": true\n  }\n]"
						},
						{
							"name": "Database error or other unexpected error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users?imsUserIds=aliqua&expansion=imsUserMigration,needsToAcceptEula&addAdminExpansion=true&useCache=true&limit=10&page=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "imsUserIds",
											"value": "aliqua"
										},
										{
											"key": "expansion",
											"value": "imsUserMigration,needsToAcceptEula"
										},
										{
											"key": "addAdminExpansion",
											"value": "true"
										},
										{
											"key": "useCache",
											"value": "true"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "0"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Updates a list of users for a company.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"companyid\": -84921588,\n    \"loginId\": 45312556,\n    \"login\": \"quis sunt e\",\n    \"admin\": true,\n    \"marketingCloudOnly\": true,\n    \"apiKey\": \"occaecat nostrud aliquip\",\n    \"changePassword\": false,\n    \"createDate\": \"1968-12-02T19:50:23.298Z\",\n    \"disabled\": false,\n    \"adobeStatus\": \"adobeInactive\",\n    \"email\": \"nulla occaecat\",\n    \"firstName\": \"sed dolore id\",\n    \"fullName\": \"consectetur amet\",\n    \"imsUserId\": \"Ut et tempor\",\n    \"lastName\": \"ea eu sit\",\n    \"lastAccess\": \"2007-07-17T20:09:27.022Z\",\n    \"legacyApiKey\": \"aliq\",\n    \"needsToAcceptEula\": false,\n    \"needsToAcceptBetaEula\": false,\n    \"password\": \"elit velit eiusmod\",\n    \"passwordHash\": \"culpa ut occaecat\",\n    \"phoneNumber\": \"officia anim ad\",\n    \"tempLoginEnd\": \"2020-06-02T09:41:15.468Z\",\n    \"title\": \"nisi ea\",\n    \"numberLocalization\": {\n      \"thousandsSeparator\": \"enim ullamco\",\n      \"decimalSeparator\": \"irure nostrud incidi\"\n    },\n    \"preferredNumberLocale\": \"ipsum occaecat\",\n    \"imsOrgId\": \"Excepteur cupidatat minim laboris\",\n    \"migrationStatus\": \"ut eiusmod ea cillum\",\n    \"migrationReason\": \"cupidatat\",\n    \"tenantId\": \"nostrud aute\",\n    \"csvDelimiter\": \"esse\",\n    \"imsProductAdmin\": false,\n    \"imsOrgAdmin\": true\n  },\n  {\n    \"companyid\": 54376931,\n    \"loginId\": -11797418,\n    \"login\": \"sed irure\",\n    \"admin\": false,\n    \"marketingCloudOnly\": true,\n    \"apiKey\": \"incididunt dolor pariatur\",\n    \"changePassword\": false,\n    \"createDate\": \"2016-08-16T06:32:23.527Z\",\n    \"disabled\": true,\n    \"adobeStatus\": \"adobeInactive\",\n    \"email\": \"enim\",\n    \"firstName\": \"ut tempor\",\n    \"fullName\": \"sit\",\n    \"imsUserId\": \"Ut in\",\n    \"lastName\": \"aliqua fugiat ad\",\n    \"lastAccess\": \"1958-03-13T22:52:21.447Z\",\n    \"legacyApiKey\": \"non sunt nisi\",\n    \"needsToAcceptEula\": true,\n    \"needsToAcceptBetaEula\": true,\n    \"password\": \"veniam sint dolore\",\n    \"passwordHash\": \"exercitation dolor\",\n    \"phoneNumber\": \"consectetur adipisicing ad\",\n    \"tempLoginEnd\": \"1987-08-11T04:26:26.497Z\",\n    \"title\": \"in mollit ad incididunt est\",\n    \"numberLocalization\": {\n      \"thousandsSeparator\": \"ipsum labore\",\n      \"decimalSeparator\": \"et magna Excepteur quis\"\n    },\n    \"preferredNumberLocale\": \"mollit adipisicing\",\n    \"imsOrgId\": \"Excepteur non nulla amet velit\",\n    \"migrationStatus\": \"nulla esse\",\n    \"migrationReason\": \"veniam pariatur\",\n    \"tenantId\": \"amet consequat minim\",\n    \"csvDelimiter\": \"pariatur dolore\",\n    \"imsProductAdmin\": true,\n    \"imsOrgAdmin\": true\n  }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users?expansion=needsToAcceptEula,needsToAcceptBetaEula&locale=en_US",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "expansion",
									"value": "needsToAcceptEula,needsToAcceptBetaEula",
									"description": "Comma-delimited list of additional analytics user metadata fields to include on response."
								},
								{
									"key": "locale",
									"value": "en_US",
									"description": "Locale, used for determining number locale"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"companyid\": 65131748,\n    \"loginId\": 11359556,\n    \"login\": \"nostrud\",\n    \"admin\": true,\n    \"marketingCloudOnly\": true,\n    \"apiKey\": \"veniam ad cupidatat\",\n    \"changePassword\": false,\n    \"createDate\": \"1963-02-04T11:40:16.863Z\",\n    \"disabled\": false,\n    \"adobeStatus\": \"adobeActive\",\n    \"email\": \"e\",\n    \"firstName\": \"consequat anim est magna\",\n    \"fullName\": \"et minim veniam dolor\",\n    \"imsUserId\": \"tempor et magna\",\n    \"lastName\": \"sed eu\",\n    \"lastAccess\": \"1992-05-21T15:55:15.590Z\",\n    \"legacyApiKey\": \"deserunt Duis dolore eu\",\n    \"needsToAcceptEula\": true,\n    \"needsToAcceptBetaEula\": true,\n    \"password\": \"fugiat\",\n    \"passwordHash\": \"ut veniam deserunt eu\",\n    \"phoneNumber\": \"sed aute sint\",\n    \"tempLoginEnd\": \"1958-04-14T10:50:21.999Z\",\n    \"title\": \"eu deserunt in\",\n    \"numberLocalization\": {\n      \"thousandsSeparator\": \"minim pariatur dolor laborum\",\n      \"decimalSeparator\": \"dolor sit ut aute\"\n    },\n    \"preferredNumberLocale\": \"occaecat non nisi amet est\",\n    \"imsOrgId\": \"et incididunt\",\n    \"migrationStatus\": \"irure deserunt Duis mollit Lorem\",\n    \"migrationReason\": \"dolore ullamco\",\n    \"tenantId\": \"laboris sed tempor aliqua\",\n    \"csvDelimiter\": \"aliqua et incididunt\",\n    \"imsProductAdmin\": true,\n    \"imsOrgAdmin\": true\n  },\n  {\n    \"companyid\": 73694362,\n    \"loginId\": 98232031,\n    \"login\": \"et nostrud\",\n    \"admin\": true,\n    \"marketingCloudOnly\": false,\n    \"apiKey\": \"consectetur\",\n    \"changePassword\": true,\n    \"createDate\": \"1979-02-06T00:00:43.573Z\",\n    \"disabled\": true,\n    \"adobeStatus\": \"adobeActive\",\n    \"email\": \"dolor commodo\",\n    \"firstName\": \"dolore tempor\",\n    \"fullName\": \"sed eu irure\",\n    \"imsUserId\": \"est ex et\",\n    \"lastName\": \"ad la\",\n    \"lastAccess\": \"2013-11-07T08:10:59.178Z\",\n    \"legacyApiKey\": \"officia fugiat anim Ut\",\n    \"needsToAcceptEula\": false,\n    \"needsToAcceptBetaEula\": true,\n    \"password\": \"in sit irure Duis\",\n    \"passwordHash\": \"Duis\",\n    \"phoneNumber\": \"ad Lorem\",\n    \"tempLoginEnd\": \"1971-04-27T02:52:52.011Z\",\n    \"title\": \"tempor n\",\n    \"numberLocalization\": {\n      \"thousandsSeparator\": \"dolor dolor\",\n      \"decimalSeparator\": \"sit sed\"\n    },\n    \"preferredNumberLocale\": \"dolor nulla velit\",\n    \"imsOrgId\": \"amet\",\n    \"migrationStatus\": \"eu consequat veniam minim\",\n    \"migrationReason\": \"labore sed esse pariatur\",\n    \"tenantId\": \"ad ut ullamco labore pariatur\",\n    \"csvDelimiter\": \"amet proident ut\",\n    \"imsProductAdmin\": true,\n    \"imsOrgAdmin\": true\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users?expansion=imsUserMigration,needsToAcceptEula&locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "expansion",
											"value": "imsUserMigration,needsToAcceptEula"
										},
										{
											"key": "locale",
											"value": "en_US"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"companyid\": 77729879,\n  \"loginId\": -74272617,\n  \"login\": \"ea Excepteur enim ipsum\",\n  \"admin\": true,\n  \"marketingCloudOnly\": true,\n  \"apiKey\": \"ut deserunt veniam anim\",\n  \"changePassword\": true,\n  \"createDate\": \"1973-03-09T19:18:40.336Z\",\n  \"disabled\": false,\n  \"adobeStatus\": \"adobeInactive\",\n  \"email\": \"deserunt labore\",\n  \"firstName\": \"ut eu Duis occaecat sint\",\n  \"fullName\": \"Duis\",\n  \"imsUserId\": \"magna quis sed est adipisicing\",\n  \"lastName\": \"magna commodo voluptate esse\",\n  \"lastAccess\": \"1986-01-23T15:50:20.548Z\",\n  \"legacyApiKey\": \"veniam incididunt do nulla\",\n  \"needsToAcceptEula\": true,\n  \"needsToAcceptBetaEula\": false,\n  \"password\": \"laborum magna\",\n  \"passwordHash\": \"nostrud velit Duis reprehenderit\",\n  \"phoneNumber\": \"velit proident qui\",\n  \"tempLoginEnd\": \"2001-01-20T20:02:06.059Z\",\n  \"title\": \"minim\",\n  \"numberLocalization\": {\n    \"thousandsSeparator\": \"Lorem cillum \",\n    \"decimalSeparator\": \"lab\"\n  },\n  \"preferredNumberLocale\": \"ut voluptate eiusmod nostrud ipsum\",\n  \"imsOrgId\": \"aliquip aute veniam Lorem\",\n  \"migrationStatus\": \"qui in laborum minim\",\n  \"migrationReason\": \"in ut nostrud esse\",\n  \"tenantId\": \"esse elit commodo amet\",\n  \"csvDelimiter\": \"laboris et tempor labore\",\n  \"imsProductAdmin\": false,\n  \"imsOrgAdmin\": false,\n  \"status\": {\n    \"success\": false,\n    \"error\": {\n      \"errorCode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"errorDescription\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"errorId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"errorDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"rootCauseService\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}"
						},
						{
							"name": "Unexpected error; Update of users",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"companyid\": 65131748,\n    \"loginId\": 11359556,\n    \"login\": \"nostrud\",\n    \"admin\": true,\n    \"marketingCloudOnly\": true,\n    \"apiKey\": \"veniam ad cupidatat\",\n    \"changePassword\": false,\n    \"createDate\": \"1963-02-04T11:40:16.863Z\",\n    \"disabled\": false,\n    \"adobeStatus\": \"adobeActive\",\n    \"email\": \"e\",\n    \"firstName\": \"consequat anim est magna\",\n    \"fullName\": \"et minim veniam dolor\",\n    \"imsUserId\": \"tempor et magna\",\n    \"lastName\": \"sed eu\",\n    \"lastAccess\": \"1992-05-21T15:55:15.590Z\",\n    \"legacyApiKey\": \"deserunt Duis dolore eu\",\n    \"needsToAcceptEula\": true,\n    \"needsToAcceptBetaEula\": true,\n    \"password\": \"fugiat\",\n    \"passwordHash\": \"ut veniam deserunt eu\",\n    \"phoneNumber\": \"sed aute sint\",\n    \"tempLoginEnd\": \"1958-04-14T10:50:21.999Z\",\n    \"title\": \"eu deserunt in\",\n    \"numberLocalization\": {\n      \"thousandsSeparator\": \"minim pariatur dolor laborum\",\n      \"decimalSeparator\": \"dolor sit ut aute\"\n    },\n    \"preferredNumberLocale\": \"occaecat non nisi amet est\",\n    \"imsOrgId\": \"et incididunt\",\n    \"migrationStatus\": \"irure deserunt Duis mollit Lorem\",\n    \"migrationReason\": \"dolore ullamco\",\n    \"tenantId\": \"laboris sed tempor aliqua\",\n    \"csvDelimiter\": \"aliqua et incididunt\",\n    \"imsProductAdmin\": true,\n    \"imsOrgAdmin\": true\n  },\n  {\n    \"companyid\": 73694362,\n    \"loginId\": 98232031,\n    \"login\": \"et nostrud\",\n    \"admin\": true,\n    \"marketingCloudOnly\": false,\n    \"apiKey\": \"consectetur\",\n    \"changePassword\": true,\n    \"createDate\": \"1979-02-06T00:00:43.573Z\",\n    \"disabled\": true,\n    \"adobeStatus\": \"adobeActive\",\n    \"email\": \"dolor commodo\",\n    \"firstName\": \"dolore tempor\",\n    \"fullName\": \"sed eu irure\",\n    \"imsUserId\": \"est ex et\",\n    \"lastName\": \"ad la\",\n    \"lastAccess\": \"2013-11-07T08:10:59.178Z\",\n    \"legacyApiKey\": \"officia fugiat anim Ut\",\n    \"needsToAcceptEula\": false,\n    \"needsToAcceptBetaEula\": true,\n    \"password\": \"in sit irure Duis\",\n    \"passwordHash\": \"Duis\",\n    \"phoneNumber\": \"ad Lorem\",\n    \"tempLoginEnd\": \"1971-04-27T02:52:52.011Z\",\n    \"title\": \"tempor n\",\n    \"numberLocalization\": {\n      \"thousandsSeparator\": \"dolor dolor\",\n      \"decimalSeparator\": \"sit sed\"\n    },\n    \"preferredNumberLocale\": \"dolor nulla velit\",\n    \"imsOrgId\": \"amet\",\n    \"migrationStatus\": \"eu consequat veniam minim\",\n    \"migrationReason\": \"labore sed esse pariatur\",\n    \"tenantId\": \"ad ut ullamco labore pariatur\",\n    \"csvDelimiter\": \"amet proident ut\",\n    \"imsProductAdmin\": true,\n    \"imsOrgAdmin\": true\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users?expansion=imsUserMigration,needsToAcceptEula&locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "expansion",
											"value": "imsUserMigration,needsToAcceptEula"
										},
										{
											"key": "locale",
											"value": "en_US"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create customer support ticket for current user",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"subject\": \"minim fugiat\",\n  \"rsid\": \"in et\",\n  \"description\": \"aliquip fugiat amet eu\",\n  \"duplication\": \"voluptate\",\n  \"pageUrl\": \"irure commodo eu enim\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/:supportedUserContactId/crmticket",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":supportedUserContactId",
								"crmticket"
							],
							"variable": [
								{
									"key": "supportedUserContactId",
									"value": "43407647",
									"description": "(Required) The supported user contact id for the user"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"subject\": \"minim fugiat\",\n  \"rsid\": \"in et\",\n  \"description\": \"aliquip fugiat amet eu\",\n  \"duplication\": \"voluptate\",\n  \"pageUrl\": \"irure commodo eu enim\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/:supportedUserContactId/crmticket",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":supportedUserContactId",
										"crmticket"
									],
									"variable": [
										{
											"key": "supportedUserContactId",
											"value": "43407647",
											"description": "(Required) The supported user contact id for the user"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"crmTicketNumber\": \"proident\"\n}"
						},
						{
							"name": "Invalid contactId",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"subject\": \"minim fugiat\",\n  \"rsid\": \"in et\",\n  \"description\": \"aliquip fugiat amet eu\",\n  \"duplication\": \"voluptate\",\n  \"pageUrl\": \"irure commodo eu enim\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/:supportedUserContactId/crmticket",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":supportedUserContactId",
										"crmticket"
									],
									"variable": [
										{
											"key": "supportedUserContactId",
											"value": "43407647",
											"description": "(Required) The supported user contact id for the user"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "RightNow Service Unavailable",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"subject\": \"minim fugiat\",\n  \"rsid\": \"in et\",\n  \"description\": \"aliquip fugiat amet eu\",\n  \"duplication\": \"voluptate\",\n  \"pageUrl\": \"irure commodo eu enim\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/:supportedUserContactId/crmticket",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":supportedUserContactId",
										"crmticket"
									],
									"variable": [
										{
											"key": "supportedUserContactId",
											"value": "43407647",
											"description": "(Required) The supported user contact id for the user"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unexpected error occurred while creating CRM Ticket",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"subject\": \"minim fugiat\",\n  \"rsid\": \"in et\",\n  \"description\": \"aliquip fugiat amet eu\",\n  \"duplication\": \"voluptate\",\n  \"pageUrl\": \"irure commodo eu enim\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/:supportedUserContactId/crmticket",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":supportedUserContactId",
										"crmticket"
									],
									"variable": [
										{
											"key": "supportedUserContactId",
											"value": "43407647",
											"description": "(Required) The supported user contact id for the user"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get the current user",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/cja/me?expansion=admin,numberLocalization&useCache=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"cja",
								"me"
							],
							"query": [
								{
									"key": "expansion",
									"value": "admin,numberLocalization",
									"description": "Comma-delimited list of additional analytics user metadata fields to include on response."
								},
								{
									"key": "useCache",
									"value": "true",
									"description": "Use cache"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/cja/me?expansion=admin,admin&useCache=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"cja",
										"me"
									],
									"query": [
										{
											"key": "expansion",
											"value": "admin,admin"
										},
										{
											"key": "useCache",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"companyid\": 69776389,\n  \"loginId\": -64958385,\n  \"login\": \"aute\",\n  \"admin\": false,\n  \"marketingCloudOnly\": true,\n  \"apiKey\": \"elit sint esse\",\n  \"changePassword\": false,\n  \"createDate\": \"1955-11-13T23:09:19.500Z\",\n  \"disabled\": true,\n  \"adobeStatus\": \"adobeActive\",\n  \"email\": \"incididunt aliquip dolore\",\n  \"firstName\": \"sed proident qui dolor occaecat\",\n  \"fullName\": \"nostrud magna commodo deserunt\",\n  \"imsUserId\": \"tempor mollit in reprehenderit ea\",\n  \"lastName\": \"do fugiat dolore ipsum\",\n  \"lastAccess\": \"1980-07-29T11:00:11.315Z\",\n  \"legacyApiKey\": \"in in Excepteur\",\n  \"needsToAcceptEula\": false,\n  \"needsToAcceptBetaEula\": true,\n  \"password\": \"eiusmod labore\",\n  \"passwordHash\": \"veniam et labore\",\n  \"phoneNumber\": \"mollit pariatur nostrud\",\n  \"tempLoginEnd\": \"1978-06-10T17:59:11.608Z\",\n  \"title\": \"qui in commodo\",\n  \"numberLocalization\": {\n    \"thousandsSeparator\": \"Duis consequat ea nisi\",\n    \"decimalSeparator\": \"esse\"\n  },\n  \"preferredNumberLocale\": \"dolore sunt\",\n  \"imsOrgId\": \"in fugiat aliquip\",\n  \"migrationStatus\": \"in pariatur\",\n  \"migrationReason\": \"Ut do aute enim\",\n  \"tenantId\": \"veniam quis\",\n  \"csvDelimiter\": \"eu dolore dolore\",\n  \"imsProductAdmin\": false,\n  \"imsOrgAdmin\": true\n}"
						}
					]
				}
			]
		},
		{
			"name": "usergroups",
			"item": [
				{
					"name": "custom",
					"item": [
						{
							"name": "Returns a list of custom permission groups for the current user's login company (meeting the paging restriction)",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/usergroups/custom?expansion=imsUserMigrationMigrated,oids&loginId=43407647&rsid=aliqua&includeBlockedReportSuites=false&groupIds=aliqua&locale=en_US&cached=true&limit=10&page=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usergroups",
										"custom"
									],
									"query": [
										{
											"key": "expansion",
											"value": "imsUserMigrationMigrated,oids",
											"description": "Comma-delimited list of additional fields to include on response."
										},
										{
											"key": "loginId",
											"value": "43407647",
											"description": "Filter list to only return groups for the specified loginId"
										},
										{
											"key": "rsid",
											"value": "aliqua",
											"description": "Filter list by suite"
										},
										{
											"key": "includeBlockedReportSuites",
											"value": "false",
											"description": "Include blocked report suites (adds rsids expansion if not present)"
										},
										{
											"key": "groupIds",
											"value": "aliqua",
											"description": "Filter list by groupId"
										},
										{
											"key": "locale",
											"value": "en_US",
											"description": "Locale"
										},
										{
											"key": "cached",
											"value": "true",
											"description": "return cached results"
										},
										{
											"key": "limit",
											"value": "10",
											"description": "Number of results per page"
										},
										{
											"key": "page",
											"value": "0",
											"description": "Page number (base 0 - first page is \"0\")"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/usergroups/custom?expansion=imsPlcIdOrphaned,oids&loginId=43407647&rsid=aliqua&includeBlockedReportSuites=false&groupIds=aliqua&locale=en_US&cached=true&limit=10&page=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usergroups",
												"custom"
											],
											"query": [
												{
													"key": "expansion",
													"value": "imsPlcIdOrphaned,oids"
												},
												{
													"key": "loginId",
													"value": "43407647"
												},
												{
													"key": "rsid",
													"value": "aliqua"
												},
												{
													"key": "includeBlockedReportSuites",
													"value": "false"
												},
												{
													"key": "groupIds",
													"value": "aliqua"
												},
												{
													"key": "locale",
													"value": "en_US"
												},
												{
													"key": "cached",
													"value": "true"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "0"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"companyId\": -27351770,\n    \"groupId\": -7871650,\n    \"description\": \"ipsum\",\n    \"name\": \"in ea veniam ad nulla\",\n    \"rsids\": [\n      \"dolore incididunt officia occaecat labore\",\n      \"adipisicing proident in tempor\"\n    ],\n    \"tokens\": [\n      \"deserunt proident velit\",\n      \"in a\"\n    ],\n    \"loginIds\": [\n      1125903,\n      -81927049\n    ],\n    \"imsPlcId\": \"tempor dolore\",\n    \"created\": \"1991-09-28T07:20:01.773Z\",\n    \"modified\": \"2002-07-05T18:59:25.220Z\",\n    \"oids\": [\n      56527162,\n      -37723585\n    ],\n    \"allRsids\": true,\n    \"imsPlcIdOrphaned\": false,\n    \"imsUserMigrationMigrated\": true\n  },\n  {\n    \"companyId\": 82875817,\n    \"groupId\": 37757248,\n    \"description\": \"et id quis\",\n    \"name\": \"aliquip occaecat\",\n    \"rsids\": [\n      \"irure tempor\",\n      \"labore culpa exercitation dolore Lorem\"\n    ],\n    \"tokens\": [\n      \"Ut sed Duis in sit\",\n      \"ea sunt ut\"\n    ],\n    \"loginIds\": [\n      -75065887,\n      -51644915\n    ],\n    \"imsPlcId\": \"ut officia id tempor incididunt\",\n    \"created\": \"1971-07-13T13:58:20.286Z\",\n    \"modified\": \"2010-01-23T17:20:12.745Z\",\n    \"oids\": [\n      -31121054,\n      83584900\n    ],\n    \"allRsids\": true,\n    \"imsPlcIdOrphaned\": false,\n    \"imsUserMigrationMigrated\": true\n  }\n]"
								},
								{
									"name": "Error while retrieving user group list",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/usergroups/custom?expansion=imsPlcIdOrphaned,oids&loginId=43407647&rsid=aliqua&includeBlockedReportSuites=false&groupIds=aliqua&locale=en_US&cached=true&limit=10&page=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usergroups",
												"custom"
											],
											"query": [
												{
													"key": "expansion",
													"value": "imsPlcIdOrphaned,oids"
												},
												{
													"key": "loginId",
													"value": "43407647"
												},
												{
													"key": "rsid",
													"value": "aliqua"
												},
												{
													"key": "includeBlockedReportSuites",
													"value": "false"
												},
												{
													"key": "groupIds",
													"value": "aliqua"
												},
												{
													"key": "locale",
													"value": "en_US"
												},
												{
													"key": "cached",
													"value": "true"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "0"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "create Group",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"companyId\": 41287606,\n  \"groupId\": -45005648,\n  \"description\": \"ut et fugiat voluptate\",\n  \"name\": \"do\",\n  \"rsids\": [\n    \"aliquip occaecat fugiat commodo\",\n    \"in in anim nostrud sunt\"\n  ],\n  \"tokens\": [\n    \"eiusmod eu ut\",\n    \"eiusmod ea fugiat laborum dolor\"\n  ],\n  \"loginIds\": [\n    82592117,\n    4807468\n  ],\n  \"imsPlcId\": \"commodo in nulla enim \",\n  \"created\": \"1969-06-28T11:21:31.251Z\",\n  \"modified\": \"1971-12-26T05:12:29.071Z\",\n  \"oids\": [\n    53405204,\n    97838751\n  ],\n  \"allRsids\": false,\n  \"imsPlcIdOrphaned\": false,\n  \"imsUserMigrationMigrated\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/usergroups/custom?expansion=imsUserMigrationMigrated,oids&includeBlockedReportSuites=false&locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usergroups",
										"custom"
									],
									"query": [
										{
											"key": "expansion",
											"value": "imsUserMigrationMigrated,oids",
											"description": "Comma-delimited list of additional fields to include on response."
										},
										{
											"key": "includeBlockedReportSuites",
											"value": "false",
											"description": "Include blocked report suites (adds rsids expansion if not present)"
										},
										{
											"key": "locale",
											"value": "en_US",
											"description": "Locale"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"companyId\": 41287606,\n  \"groupId\": -45005648,\n  \"description\": \"ut et fugiat voluptate\",\n  \"name\": \"do\",\n  \"rsids\": [\n    \"aliquip occaecat fugiat commodo\",\n    \"in in anim nostrud sunt\"\n  ],\n  \"tokens\": [\n    \"eiusmod eu ut\",\n    \"eiusmod ea fugiat laborum dolor\"\n  ],\n  \"loginIds\": [\n    82592117,\n    4807468\n  ],\n  \"imsPlcId\": \"commodo in nulla enim \",\n  \"created\": \"1969-06-28T11:21:31.251Z\",\n  \"modified\": \"1971-12-26T05:12:29.071Z\",\n  \"oids\": [\n    53405204,\n    97838751\n  ],\n  \"allRsids\": false,\n  \"imsPlcIdOrphaned\": false,\n  \"imsUserMigrationMigrated\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usergroups/custom?expansion=imsPlcIdOrphaned,oids&includeBlockedReportSuites=false&locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usergroups",
												"custom"
											],
											"query": [
												{
													"key": "expansion",
													"value": "imsPlcIdOrphaned,oids"
												},
												{
													"key": "includeBlockedReportSuites",
													"value": "false"
												},
												{
													"key": "locale",
													"value": "en_US"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"companyId\": 41287606,\n  \"groupId\": -45005648,\n  \"description\": \"ut et fugiat voluptate\",\n  \"name\": \"do\",\n  \"rsids\": [\n    \"aliquip occaecat fugiat commodo\",\n    \"in in anim nostrud sunt\"\n  ],\n  \"tokens\": [\n    \"eiusmod eu ut\",\n    \"eiusmod ea fugiat laborum dolor\"\n  ],\n  \"loginIds\": [\n    82592117,\n    4807468\n  ],\n  \"imsPlcId\": \"commodo in nulla enim \",\n  \"created\": \"1969-06-28T11:21:31.251Z\",\n  \"modified\": \"1971-12-26T05:12:29.071Z\",\n  \"oids\": [\n    53405204,\n    97838751\n  ],\n  \"allRsids\": false,\n  \"imsPlcIdOrphaned\": false,\n  \"imsUserMigrationMigrated\": false\n}"
								},
								{
									"name": "Invalid Data",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"companyId\": 41287606,\n  \"groupId\": -45005648,\n  \"description\": \"ut et fugiat voluptate\",\n  \"name\": \"do\",\n  \"rsids\": [\n    \"aliquip occaecat fugiat commodo\",\n    \"in in anim nostrud sunt\"\n  ],\n  \"tokens\": [\n    \"eiusmod eu ut\",\n    \"eiusmod ea fugiat laborum dolor\"\n  ],\n  \"loginIds\": [\n    82592117,\n    4807468\n  ],\n  \"imsPlcId\": \"commodo in nulla enim \",\n  \"created\": \"1969-06-28T11:21:31.251Z\",\n  \"modified\": \"1971-12-26T05:12:29.071Z\",\n  \"oids\": [\n    53405204,\n    97838751\n  ],\n  \"allRsids\": false,\n  \"imsPlcIdOrphaned\": false,\n  \"imsUserMigrationMigrated\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usergroups/custom?expansion=imsPlcIdOrphaned,oids&includeBlockedReportSuites=false&locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usergroups",
												"custom"
											],
											"query": [
												{
													"key": "expansion",
													"value": "imsPlcIdOrphaned,oids"
												},
												{
													"key": "includeBlockedReportSuites",
													"value": "false"
												},
												{
													"key": "locale",
													"value": "en_US"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Error while creating group",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"companyId\": 41287606,\n  \"groupId\": -45005648,\n  \"description\": \"ut et fugiat voluptate\",\n  \"name\": \"do\",\n  \"rsids\": [\n    \"aliquip occaecat fugiat commodo\",\n    \"in in anim nostrud sunt\"\n  ],\n  \"tokens\": [\n    \"eiusmod eu ut\",\n    \"eiusmod ea fugiat laborum dolor\"\n  ],\n  \"loginIds\": [\n    82592117,\n    4807468\n  ],\n  \"imsPlcId\": \"commodo in nulla enim \",\n  \"created\": \"1969-06-28T11:21:31.251Z\",\n  \"modified\": \"1971-12-26T05:12:29.071Z\",\n  \"oids\": [\n    53405204,\n    97838751\n  ],\n  \"allRsids\": false,\n  \"imsPlcIdOrphaned\": false,\n  \"imsUserMigrationMigrated\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usergroups/custom?expansion=imsPlcIdOrphaned,oids&includeBlockedReportSuites=false&locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usergroups",
												"custom"
											],
											"query": [
												{
													"key": "expansion",
													"value": "imsPlcIdOrphaned,oids"
												},
												{
													"key": "includeBlockedReportSuites",
													"value": "false"
												},
												{
													"key": "locale",
													"value": "en_US"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Updates linking of usergroups and suites",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"companyId\": -14164080,\n    \"groupId\": 39543952,\n    \"description\": \"sit nisi esse Excepteur\",\n    \"name\": \"non nulla cillum\",\n    \"rsids\": [\n      \"qui mollit magna laboris\",\n      \"ullamco ex\"\n    ],\n    \"tokens\": [\n      \"anim adipisicing commodo esse\",\n      \"consequat cupidatat aute sit\"\n    ],\n    \"loginIds\": [\n      92583079,\n      94805391\n    ],\n    \"imsPlcId\": \"irure in\",\n    \"created\": \"1961-02-19T15:56:03.514Z\",\n    \"modified\": \"1983-07-12T06:41:05.654Z\",\n    \"oids\": [\n      92982857,\n      56968623\n    ],\n    \"allRsids\": true,\n    \"imsPlcIdOrphaned\": true,\n    \"imsUserMigrationMigrated\": false\n  },\n  {\n    \"companyId\": 48688279,\n    \"groupId\": 28416936,\n    \"description\": \"dolore veniam pariatur\",\n    \"name\": \"dolor n\",\n    \"rsids\": [\n      \"Except\",\n      \"adipisicing Ut\"\n    ],\n    \"tokens\": [\n      \"sed laborum Lorem dolore in\",\n      \"dolo\"\n    ],\n    \"loginIds\": [\n      -94770803,\n      88688297\n    ],\n    \"imsPlcId\": \"qui\",\n    \"created\": \"1987-09-16T05:26:54.516Z\",\n    \"modified\": \"1943-10-06T08:30:02.892Z\",\n    \"oids\": [\n      -87151244,\n      -26231751\n    ],\n    \"allRsids\": false,\n    \"imsPlcIdOrphaned\": false,\n    \"imsUserMigrationMigrated\": true\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/usergroups/custom?expansion=imsUserMigrationMigrated,oids&locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usergroups",
										"custom"
									],
									"query": [
										{
											"key": "expansion",
											"value": "imsUserMigrationMigrated,oids",
											"description": "Comma-delimited list of additional fields to include on response."
										},
										{
											"key": "locale",
											"value": "en_US",
											"description": "Locale"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"companyId\": 41692862,\n    \"groupId\": -38270393,\n    \"description\": \"aliqua et\",\n    \"name\": \"officia esse\",\n    \"rsids\": [\n      \"tempor dolore nisi adipisicing\",\n      \"pariatur est veniam adipi\"\n    ],\n    \"tokens\": [\n      \"irure a\",\n      \"cillum voluptate laborum fugiat\"\n    ],\n    \"loginIds\": [\n      86068420,\n      26540747\n    ],\n    \"imsPlcId\": \"eiusmod deserunt\",\n    \"created\": \"1990-04-18T06:01:49.124Z\",\n    \"modified\": \"1995-03-31T02:32:57.415Z\",\n    \"oids\": [\n      -35654268,\n      77510088\n    ],\n    \"allRsids\": false,\n    \"imsPlcIdOrphaned\": true,\n    \"imsUserMigrationMigrated\": false\n  },\n  {\n    \"companyId\": -76117843,\n    \"groupId\": 86442694,\n    \"description\": \"elit Exc\",\n    \"name\": \"deserunt\",\n    \"rsids\": [\n      \"voluptate\",\n      \"aute commodo culpa ex\"\n    ],\n    \"tokens\": [\n      \"incididunt labore consectetur commodo non\",\n      \"velit in\"\n    ],\n    \"loginIds\": [\n      -80135219,\n      87620573\n    ],\n    \"imsPlcId\": \"nulla veniam magna\",\n    \"created\": \"1997-01-20T04:34:07.910Z\",\n    \"modified\": \"2021-05-01T21:05:30.001Z\",\n    \"oids\": [\n      97264322,\n      42543286\n    ],\n    \"allRsids\": true,\n    \"imsPlcIdOrphaned\": true,\n    \"imsUserMigrationMigrated\": false\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usergroups/custom?expansion=imsPlcIdOrphaned,oids&locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usergroups",
												"custom"
											],
											"query": [
												{
													"key": "expansion",
													"value": "imsPlcIdOrphaned,oids"
												},
												{
													"key": "locale",
													"value": "en_US"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"companyId\": -14164080,\n    \"groupId\": 39543952,\n    \"description\": \"sit nisi esse Excepteur\",\n    \"name\": \"non nulla cillum\",\n    \"rsids\": [\n      \"qui mollit magna laboris\",\n      \"ullamco ex\"\n    ],\n    \"tokens\": [\n      \"anim adipisicing commodo esse\",\n      \"consequat cupidatat aute sit\"\n    ],\n    \"loginIds\": [\n      92583079,\n      94805391\n    ],\n    \"imsPlcId\": \"irure in\",\n    \"created\": \"1961-02-19T15:56:03.514Z\",\n    \"modified\": \"1983-07-12T06:41:05.654Z\",\n    \"oids\": [\n      92982857,\n      56968623\n    ],\n    \"allRsids\": true,\n    \"imsPlcIdOrphaned\": true,\n    \"imsUserMigrationMigrated\": false\n  },\n  {\n    \"companyId\": 48688279,\n    \"groupId\": 28416936,\n    \"description\": \"dolore veniam pariatur\",\n    \"name\": \"dolor n\",\n    \"rsids\": [\n      \"Except\",\n      \"adipisicing Ut\"\n    ],\n    \"tokens\": [\n      \"sed laborum Lorem dolore in\",\n      \"dolo\"\n    ],\n    \"loginIds\": [\n      -94770803,\n      88688297\n    ],\n    \"imsPlcId\": \"qui\",\n    \"created\": \"1987-09-16T05:26:54.516Z\",\n    \"modified\": \"1943-10-06T08:30:02.892Z\",\n    \"oids\": [\n      -87151244,\n      -26231751\n    ],\n    \"allRsids\": false,\n    \"imsPlcIdOrphaned\": false,\n    \"imsUserMigrationMigrated\": true\n  }\n]"
								},
								{
									"name": "Must specify at least one group to update",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"companyId\": 41692862,\n    \"groupId\": -38270393,\n    \"description\": \"aliqua et\",\n    \"name\": \"officia esse\",\n    \"rsids\": [\n      \"tempor dolore nisi adipisicing\",\n      \"pariatur est veniam adipi\"\n    ],\n    \"tokens\": [\n      \"irure a\",\n      \"cillum voluptate laborum fugiat\"\n    ],\n    \"loginIds\": [\n      86068420,\n      26540747\n    ],\n    \"imsPlcId\": \"eiusmod deserunt\",\n    \"created\": \"1990-04-18T06:01:49.124Z\",\n    \"modified\": \"1995-03-31T02:32:57.415Z\",\n    \"oids\": [\n      -35654268,\n      77510088\n    ],\n    \"allRsids\": false,\n    \"imsPlcIdOrphaned\": true,\n    \"imsUserMigrationMigrated\": false\n  },\n  {\n    \"companyId\": -76117843,\n    \"groupId\": 86442694,\n    \"description\": \"elit Exc\",\n    \"name\": \"deserunt\",\n    \"rsids\": [\n      \"voluptate\",\n      \"aute commodo culpa ex\"\n    ],\n    \"tokens\": [\n      \"incididunt labore consectetur commodo non\",\n      \"velit in\"\n    ],\n    \"loginIds\": [\n      -80135219,\n      87620573\n    ],\n    \"imsPlcId\": \"nulla veniam magna\",\n    \"created\": \"1997-01-20T04:34:07.910Z\",\n    \"modified\": \"2021-05-01T21:05:30.001Z\",\n    \"oids\": [\n      97264322,\n      42543286\n    ],\n    \"allRsids\": true,\n    \"imsPlcIdOrphaned\": true,\n    \"imsUserMigrationMigrated\": false\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usergroups/custom?expansion=imsPlcIdOrphaned,oids&locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usergroups",
												"custom"
											],
											"query": [
												{
													"key": "expansion",
													"value": "imsPlcIdOrphaned,oids"
												},
												{
													"key": "locale",
													"value": "en_US"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Error while retrieving user group list",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"companyId\": 41692862,\n    \"groupId\": -38270393,\n    \"description\": \"aliqua et\",\n    \"name\": \"officia esse\",\n    \"rsids\": [\n      \"tempor dolore nisi adipisicing\",\n      \"pariatur est veniam adipi\"\n    ],\n    \"tokens\": [\n      \"irure a\",\n      \"cillum voluptate laborum fugiat\"\n    ],\n    \"loginIds\": [\n      86068420,\n      26540747\n    ],\n    \"imsPlcId\": \"eiusmod deserunt\",\n    \"created\": \"1990-04-18T06:01:49.124Z\",\n    \"modified\": \"1995-03-31T02:32:57.415Z\",\n    \"oids\": [\n      -35654268,\n      77510088\n    ],\n    \"allRsids\": false,\n    \"imsPlcIdOrphaned\": true,\n    \"imsUserMigrationMigrated\": false\n  },\n  {\n    \"companyId\": -76117843,\n    \"groupId\": 86442694,\n    \"description\": \"elit Exc\",\n    \"name\": \"deserunt\",\n    \"rsids\": [\n      \"voluptate\",\n      \"aute commodo culpa ex\"\n    ],\n    \"tokens\": [\n      \"incididunt labore consectetur commodo non\",\n      \"velit in\"\n    ],\n    \"loginIds\": [\n      -80135219,\n      87620573\n    ],\n    \"imsPlcId\": \"nulla veniam magna\",\n    \"created\": \"1997-01-20T04:34:07.910Z\",\n    \"modified\": \"2021-05-01T21:05:30.001Z\",\n    \"oids\": [\n      97264322,\n      42543286\n    ],\n    \"allRsids\": true,\n    \"imsPlcIdOrphaned\": true,\n    \"imsUserMigrationMigrated\": false\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usergroups/custom?expansion=imsPlcIdOrphaned,oids&locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usergroups",
												"custom"
											],
											"query": [
												{
													"key": "expansion",
													"value": "imsPlcIdOrphaned,oids"
												},
												{
													"key": "locale",
													"value": "en_US"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Returns a list of custom permission groups that the current user belongs to (meeting the paging restriction)",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/usergroups/custom/me?expansion=imsUserMigrationMigrated,oids&rsid=aliqua&includeBlockedReportSuites=false&locale=en_US&cached=true&limit=10&page=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usergroups",
										"custom",
										"me"
									],
									"query": [
										{
											"key": "expansion",
											"value": "imsUserMigrationMigrated,oids",
											"description": "Comma-delimited list of additional fields to include on response."
										},
										{
											"key": "rsid",
											"value": "aliqua",
											"description": "Filter list by suite"
										},
										{
											"key": "includeBlockedReportSuites",
											"value": "false",
											"description": "Include blocked report suites (adds rsids expansion if not present)"
										},
										{
											"key": "locale",
											"value": "en_US",
											"description": "Locale"
										},
										{
											"key": "cached",
											"value": "true",
											"description": "return cached results"
										},
										{
											"key": "limit",
											"value": "10",
											"description": "Number of results per page"
										},
										{
											"key": "page",
											"value": "0",
											"description": "Page number (base 0 - first page is \"0\")"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/usergroups/custom/me?expansion=imsPlcIdOrphaned,oids&rsid=aliqua&includeBlockedReportSuites=false&locale=en_US&cached=true&limit=10&page=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usergroups",
												"custom",
												"me"
											],
											"query": [
												{
													"key": "expansion",
													"value": "imsPlcIdOrphaned,oids"
												},
												{
													"key": "rsid",
													"value": "aliqua"
												},
												{
													"key": "includeBlockedReportSuites",
													"value": "false"
												},
												{
													"key": "locale",
													"value": "en_US"
												},
												{
													"key": "cached",
													"value": "true"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "0"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"companyId\": -14164080,\n    \"groupId\": 39543952,\n    \"description\": \"sit nisi esse Excepteur\",\n    \"name\": \"non nulla cillum\",\n    \"rsids\": [\n      \"qui mollit magna laboris\",\n      \"ullamco ex\"\n    ],\n    \"tokens\": [\n      \"anim adipisicing commodo esse\",\n      \"consequat cupidatat aute sit\"\n    ],\n    \"loginIds\": [\n      92583079,\n      94805391\n    ],\n    \"imsPlcId\": \"irure in\",\n    \"created\": \"1961-02-19T15:56:03.514Z\",\n    \"modified\": \"1983-07-12T06:41:05.654Z\",\n    \"oids\": [\n      92982857,\n      56968623\n    ],\n    \"allRsids\": true,\n    \"imsPlcIdOrphaned\": true,\n    \"imsUserMigrationMigrated\": false\n  },\n  {\n    \"companyId\": 48688279,\n    \"groupId\": 28416936,\n    \"description\": \"dolore veniam pariatur\",\n    \"name\": \"dolor n\",\n    \"rsids\": [\n      \"Except\",\n      \"adipisicing Ut\"\n    ],\n    \"tokens\": [\n      \"sed laborum Lorem dolore in\",\n      \"dolo\"\n    ],\n    \"loginIds\": [\n      -94770803,\n      88688297\n    ],\n    \"imsPlcId\": \"qui\",\n    \"created\": \"1987-09-16T05:26:54.516Z\",\n    \"modified\": \"1943-10-06T08:30:02.892Z\",\n    \"oids\": [\n      -87151244,\n      -26231751\n    ],\n    \"allRsids\": false,\n    \"imsPlcIdOrphaned\": false,\n    \"imsUserMigrationMigrated\": true\n  }\n]"
								},
								{
									"name": "Error while retrieving user group list",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/usergroups/custom/me?expansion=imsPlcIdOrphaned,oids&rsid=aliqua&includeBlockedReportSuites=false&locale=en_US&cached=true&limit=10&page=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usergroups",
												"custom",
												"me"
											],
											"query": [
												{
													"key": "expansion",
													"value": "imsPlcIdOrphaned,oids"
												},
												{
													"key": "rsid",
													"value": "aliqua"
												},
												{
													"key": "includeBlockedReportSuites",
													"value": "false"
												},
												{
													"key": "locale",
													"value": "en_US"
												},
												{
													"key": "cached",
													"value": "true"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "0"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Returns a custom permission group for the login company by id",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/usergroups/custom/:groupId?expansion=imsUserMigrationMigrated,oids&includeBlockedReportSuites=false&locale=en_US",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usergroups",
										"custom",
										":groupId"
									],
									"query": [
										{
											"key": "expansion",
											"value": "imsUserMigrationMigrated,oids",
											"description": "Comma-delimited list of additional fields to include on response."
										},
										{
											"key": "includeBlockedReportSuites",
											"value": "false",
											"description": "Include blocked report suites (adds rsids expansion if not present)"
										},
										{
											"key": "locale",
											"value": "en_US",
											"description": "Locale"
										}
									],
									"variable": [
										{
											"key": "groupId",
											"value": "43407647",
											"description": "(Required) The custom group id for which to retrieve information"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/usergroups/custom/:groupId?expansion=imsPlcIdOrphaned,oids&includeBlockedReportSuites=false&locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usergroups",
												"custom",
												":groupId"
											],
											"query": [
												{
													"key": "expansion",
													"value": "imsPlcIdOrphaned,oids"
												},
												{
													"key": "includeBlockedReportSuites",
													"value": "false"
												},
												{
													"key": "locale",
													"value": "en_US"
												}
											],
											"variable": [
												{
													"key": "groupId",
													"value": "43407647",
													"description": "(Required) The custom group id for which to retrieve information"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"companyId\": 41287606,\n  \"groupId\": -45005648,\n  \"description\": \"ut et fugiat voluptate\",\n  \"name\": \"do\",\n  \"rsids\": [\n    \"aliquip occaecat fugiat commodo\",\n    \"in in anim nostrud sunt\"\n  ],\n  \"tokens\": [\n    \"eiusmod eu ut\",\n    \"eiusmod ea fugiat laborum dolor\"\n  ],\n  \"loginIds\": [\n    82592117,\n    4807468\n  ],\n  \"imsPlcId\": \"commodo in nulla enim \",\n  \"created\": \"1969-06-28T11:21:31.251Z\",\n  \"modified\": \"1971-12-26T05:12:29.071Z\",\n  \"oids\": [\n    53405204,\n    97838751\n  ],\n  \"allRsids\": false,\n  \"imsPlcIdOrphaned\": false,\n  \"imsUserMigrationMigrated\": false\n}"
								},
								{
									"name": "Error while retrieving user group",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/usergroups/custom/:groupId?expansion=imsPlcIdOrphaned,oids&includeBlockedReportSuites=false&locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usergroups",
												"custom",
												":groupId"
											],
											"query": [
												{
													"key": "expansion",
													"value": "imsPlcIdOrphaned,oids"
												},
												{
													"key": "includeBlockedReportSuites",
													"value": "false"
												},
												{
													"key": "locale",
													"value": "en_US"
												}
											],
											"variable": [
												{
													"key": "groupId",
													"value": "43407647",
													"description": "(Required) The custom group id for which to retrieve information"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "permissions",
					"item": [
						{
							"name": "marketingcloud/{ims Plc Id}",
							"item": [
								{
									"name": "Returns a group with its current permissions, and available permissions",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/usergroups/permissions/marketingcloud/:imsPlcId?locale=en_US&companyName=aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usergroups",
												"permissions",
												"marketingcloud",
												":imsPlcId"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US",
													"description": "Locale"
												},
												{
													"key": "companyName",
													"value": "aliqua",
													"description": "the company name. Needed if using a service token"
												}
											],
											"variable": [
												{
													"key": "imsPlcId",
													"value": "aliqua",
													"description": "(Required) The plc id for which to retrieve information"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/usergroups/permissions/marketingcloud/:imsPlcId?locale=en_US&companyName=aliqua",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usergroups",
														"permissions",
														"marketingcloud",
														":imsPlcId"
													],
													"query": [
														{
															"key": "locale",
															"value": "en_US"
														},
														{
															"key": "companyName",
															"value": "aliqua"
														}
													],
													"variable": [
														{
															"key": "imsPlcId",
															"value": "aliqua",
															"description": "(Required) The plc id for which to retrieve information"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"layout\": \"consequat cillum\",\n  \"sections\": [\n    {\n      \"id\": \"aliqua sed non in\",\n      \"content\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": \"Duis in veniam\",\n      \"content\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Error while retrieving group",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/usergroups/permissions/marketingcloud/:imsPlcId?locale=en_US&companyName=aliqua",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usergroups",
														"permissions",
														"marketingcloud",
														":imsPlcId"
													],
													"query": [
														{
															"key": "locale",
															"value": "en_US"
														},
														{
															"key": "companyName",
															"value": "aliqua"
														}
													],
													"variable": [
														{
															"key": "imsPlcId",
															"value": "aliqua",
															"description": "(Required) The plc id for which to retrieve information"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "patches a group with updates",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"layout\": \"Lorem nostrud in minim\",\n  \"sections\": [\n    {\n      \"id\": \"dolore reprehenderit lab\",\n      \"content\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": \"sed aute minim culpa\",\n      \"content\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usergroups/permissions/marketingcloud/:imsPlcId?companyName=aliqua&email=aliqua&locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usergroups",
												"permissions",
												"marketingcloud",
												":imsPlcId"
											],
											"query": [
												{
													"key": "companyName",
													"value": "aliqua",
													"description": "the company name. Needed if using a service token"
												},
												{
													"key": "email",
													"value": "aliqua",
													"description": "the ims login (email) of the calling user"
												},
												{
													"key": "locale",
													"value": "en_US",
													"description": "Locale"
												}
											],
											"variable": [
												{
													"key": "imsPlcId",
													"value": "aliqua",
													"description": "(Required) The plc id for which to update"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/usergroups/permissions/marketingcloud/:imsPlcId?companyName=aliqua&email=aliqua&locale=en_US",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usergroups",
														"permissions",
														"marketingcloud",
														":imsPlcId"
													],
													"query": [
														{
															"key": "companyName",
															"value": "aliqua"
														},
														{
															"key": "email",
															"value": "aliqua"
														},
														{
															"key": "locale",
															"value": "en_US"
														}
													],
													"variable": [
														{
															"key": "imsPlcId",
															"value": "aliqua",
															"description": "(Required) The plc id for which to update"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"layout\": \"Lorem nostrud in minim\",\n  \"sections\": [\n    {\n      \"id\": \"dolore reprehenderit lab\",\n      \"content\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": \"sed aute minim culpa\",\n      \"content\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Error while patching group",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/usergroups/permissions/marketingcloud/:imsPlcId?companyName=aliqua&email=aliqua&locale=en_US",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usergroups",
														"permissions",
														"marketingcloud",
														":imsPlcId"
													],
													"query": [
														{
															"key": "companyName",
															"value": "aliqua"
														},
														{
															"key": "email",
															"value": "aliqua"
														},
														{
															"key": "locale",
															"value": "en_US"
														}
													],
													"variable": [
														{
															"key": "imsPlcId",
															"value": "aliqua",
															"description": "(Required) The plc id for which to update"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete a group by imsPlcId (only removes PLC ID before migration starts)",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/usergroups/permissions/marketingcloud/:imsPlcId?companyName=aliqua&email=aliqua&imsUserId=aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usergroups",
												"permissions",
												"marketingcloud",
												":imsPlcId"
											],
											"query": [
												{
													"key": "companyName",
													"value": "aliqua",
													"description": "the company name. Needed if using a service token"
												},
												{
													"key": "email",
													"value": "aliqua",
													"description": "the ims login (email) of the calling user"
												},
												{
													"key": "imsUserId",
													"value": "aliqua",
													"description": "the ims user id of the calling user"
												}
											],
											"variable": [
												{
													"key": "imsPlcId",
													"value": "aliqua",
													"description": "(Required) The group id for which to update"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/usergroups/permissions/marketingcloud/:imsPlcId?companyName=aliqua&email=aliqua&imsUserId=aliqua",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usergroups",
														"permissions",
														"marketingcloud",
														":imsPlcId"
													],
													"query": [
														{
															"key": "companyName",
															"value": "aliqua"
														},
														{
															"key": "email",
															"value": "aliqua"
														},
														{
															"key": "imsUserId",
															"value": "aliqua"
														}
													],
													"variable": [
														{
															"key": "imsPlcId",
															"value": "aliqua",
															"description": "(Required) The group id for which to update"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"result\": \"proident sit\",\n  \"message\": \"est tempor do sed et\"\n}"
										},
										{
											"name": "Error while retrieving group",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/usergroups/permissions/marketingcloud/:imsPlcId?companyName=aliqua&email=aliqua&imsUserId=aliqua",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usergroups",
														"permissions",
														"marketingcloud",
														":imsPlcId"
													],
													"query": [
														{
															"key": "companyName",
															"value": "aliqua"
														},
														{
															"key": "email",
															"value": "aliqua"
														},
														{
															"key": "imsUserId",
															"value": "aliqua"
														}
													],
													"variable": [
														{
															"key": "imsPlcId",
															"value": "aliqua",
															"description": "(Required) The group id for which to update"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "patches a group with updates",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"op\": \"et dolor culpa ex\",\n    \"path\": \"exercitation in in\",\n    \"value\": true\n  },\n  {\n    \"op\": \"veniam esse laboris\",\n    \"path\": \"nostrud enim non\",\n    \"value\": false\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usergroups/permissions/marketingcloud/:imsPlcId?companyName=aliqua&email=aliqua&imsUserId=aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usergroups",
												"permissions",
												"marketingcloud",
												":imsPlcId"
											],
											"query": [
												{
													"key": "companyName",
													"value": "aliqua",
													"description": "the company name. Needed if using a service token"
												},
												{
													"key": "email",
													"value": "aliqua",
													"description": "the ims login (email) of the calling user"
												},
												{
													"key": "imsUserId",
													"value": "aliqua",
													"description": "the ims user id of the calling user"
												}
											],
											"variable": [
												{
													"key": "imsPlcId",
													"value": "aliqua",
													"description": "(Required) The plc id for which to update"
												}
											]
										}
									},
									"response": [
										{
											"name": "Error while patching group",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/usergroups/permissions/marketingcloud/:imsPlcId?companyName=aliqua&email=aliqua&imsUserId=aliqua",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usergroups",
														"permissions",
														"marketingcloud",
														":imsPlcId"
													],
													"query": [
														{
															"key": "companyName",
															"value": "aliqua"
														},
														{
															"key": "email",
															"value": "aliqua"
														},
														{
															"key": "imsUserId",
															"value": "aliqua"
														}
													],
													"variable": [
														{
															"key": "imsPlcId",
															"value": "aliqua",
															"description": "(Required) The plc id for which to update"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "analytics",
							"item": [
								{
									"name": "{group Id}",
									"item": [
										{
											"name": "Returns a group with its current permissions, and available permissions",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "<API Key>",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/usergroups/permissions/analytics/:groupId?locale=en_US",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usergroups",
														"permissions",
														"analytics",
														":groupId"
													],
													"query": [
														{
															"key": "locale",
															"value": "en_US",
															"description": "Locale"
														}
													],
													"variable": [
														{
															"key": "groupId",
															"value": "43407647",
															"description": "(Required) The group id for which to retrieve information"
														}
													]
												}
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/usergroups/permissions/analytics/:groupId?locale=en_US",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"usergroups",
																"permissions",
																"analytics",
																":groupId"
															],
															"query": [
																{
																	"key": "locale",
																	"value": "en_US"
																}
															],
															"variable": [
																{
																	"key": "groupId",
																	"value": "43407647",
																	"description": "(Required) The group id for which to retrieve information"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"layout\": \"Lorem nostrud in minim\",\n  \"sections\": [\n    {\n      \"id\": \"dolore reprehenderit lab\",\n      \"content\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": \"sed aute minim culpa\",\n      \"content\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Error while retrieving group",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/usergroups/permissions/analytics/:groupId?locale=en_US",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"usergroups",
																"permissions",
																"analytics",
																":groupId"
															],
															"query": [
																{
																	"key": "locale",
																	"value": "en_US"
																}
															],
															"variable": [
																{
																	"key": "groupId",
																	"value": "43407647",
																	"description": "(Required) The group id for which to retrieve information"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "patches a group with updates",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "<API Key>",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"layout\": \"Lorem nostrud in minim\",\n  \"sections\": [\n    {\n      \"id\": \"dolore reprehenderit lab\",\n      \"content\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": \"sed aute minim culpa\",\n      \"content\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/usergroups/permissions/analytics/:groupId?locale=en_US",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usergroups",
														"permissions",
														"analytics",
														":groupId"
													],
													"query": [
														{
															"key": "locale",
															"value": "en_US",
															"description": "Locale"
														}
													],
													"variable": [
														{
															"key": "groupId",
															"value": "43407647",
															"description": "(Required) The group id for which to update"
														}
													]
												}
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/usergroups/permissions/analytics/:groupId?locale=en_US",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"usergroups",
																"permissions",
																"analytics",
																":groupId"
															],
															"query": [
																{
																	"key": "locale",
																	"value": "en_US"
																}
															],
															"variable": [
																{
																	"key": "groupId",
																	"value": "43407647",
																	"description": "(Required) The group id for which to update"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"layout\": \"Lorem nostrud in minim\",\n  \"sections\": [\n    {\n      \"id\": \"dolore reprehenderit lab\",\n      \"content\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": \"sed aute minim culpa\",\n      \"content\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Error while patching group",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/usergroups/permissions/analytics/:groupId?locale=en_US",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"usergroups",
																"permissions",
																"analytics",
																":groupId"
															],
															"query": [
																{
																	"key": "locale",
																	"value": "en_US"
																}
															],
															"variable": [
																{
																	"key": "groupId",
																	"value": "43407647",
																	"description": "(Required) The group id for which to update"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "patches a group with updates",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "<API Key>",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"proident qui\",\n    \"path\": \"Duis voluptate enim\",\n    \"value\": false\n  },\n  {\n    \"op\": \"labore mollit sunt cillum Excepteur\",\n    \"path\": \"Lorem eiusmod ut co\",\n    \"value\": true\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/usergroups/permissions/analytics/:groupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usergroups",
														"permissions",
														"analytics",
														":groupId"
													],
													"variable": [
														{
															"key": "groupId",
															"value": "43407647",
															"description": "(Required) The group id for which to update"
														}
													]
												}
											},
											"response": [
												{
													"name": "Error while patching group",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/usergroups/permissions/analytics/:groupId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"usergroups",
																"permissions",
																"analytics",
																":groupId"
															],
															"variable": [
																{
																	"key": "groupId",
																	"value": "43407647",
																	"description": "(Required) The group id for which to update"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Returns a group with its current permissions, and available permissions",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/usergroups/permissions/analytics?locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usergroups",
												"permissions",
												"analytics"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US",
													"description": "Locale"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/usergroups/permissions/analytics?locale=en_US",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usergroups",
														"permissions",
														"analytics"
													],
													"query": [
														{
															"key": "locale",
															"value": "en_US"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"layout\": \"Lorem nostrud in minim\",\n  \"sections\": [\n    {\n      \"id\": \"dolore reprehenderit lab\",\n      \"content\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": \"sed aute minim culpa\",\n      \"content\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Error while retrieving group",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/usergroups/permissions/analytics?locale=en_US",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usergroups",
														"permissions",
														"analytics"
													],
													"query": [
														{
															"key": "locale",
															"value": "en_US"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "virtualreportsuites",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Retrieves a single virtual report suite by ID.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/virtualreportsuites/:id?expansion=timezone,currentTimezoneOffset&locale=en_US&useMicroservice=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"virtualreportsuites",
										":id"
									],
									"query": [
										{
											"key": "expansion",
											"value": "timezone,currentTimezoneOffset",
											"description": "Comma-delimited list of additional virtual report suite metadata fields to include on response."
										},
										{
											"key": "locale",
											"value": "en_US",
											"description": "Locale"
										},
										{
											"key": "useMicroservice",
											"value": "false",
											"description": "Use VRS Microservice developed by Intelligent Services"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The vrsid to retrieve"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/virtualreportsuites/:id?expansion=parentRsidName,currentTimezoneOffset&locale=en_US&useMicroservice=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"virtualreportsuites",
												":id"
											],
											"query": [
												{
													"key": "expansion",
													"value": "parentRsidName,currentTimezoneOffset"
												},
												{
													"key": "locale",
													"value": "en_US"
												},
												{
													"key": "useMicroservice",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The vrsid to retrieve"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"in\",\n  \"name\": \"ad laborum aliquip ut\",\n  \"description\": \"anim reprehenderit ex\",\n  \"rsid\": \"nostrud aliqua\",\n  \"reportSuiteName\": \"occaecat est\",\n  \"owner\": {\n    \"id\": 60746951,\n    \"imsUserId\": \"magna qui dolor ut\"\n  },\n  \"isDeleted\": false,\n  \"migratedIds\": [\n    \"enim\",\n    \"commodo ex ea adipisicing\"\n  ],\n  \"internal\": false,\n  \"parentRsid\": \"aliquip sunt velit\",\n  \"parentRsidName\": \"nulla\",\n  \"timezone\": -58587684,\n  \"segmentList\": [\n    \"aliqua\",\n    \"dolor ullamco in in\"\n  ],\n  \"globalCompanyKey\": \"deserunt dolor dolor\",\n  \"numGroups\": -38637410,\n  \"groups\": [\n    {\n      \"companyId\": 26839943,\n      \"groupId\": -47168563,\n      \"description\": \"sint\",\n      \"name\": \"mollit ut\",\n      \"rsids\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"tokens\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"loginIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"imsPlcId\": \"magna s\",\n      \"created\": \"1979-11-19T10:46:31.130Z\",\n      \"modified\": \"1978-04-12T04:27:12.302Z\",\n      \"oids\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"allRsids\": true,\n      \"imsPlcIdOrphaned\": true,\n      \"imsUserMigrationMigrated\": false\n    },\n    {\n      \"companyId\": -73773583,\n      \"groupId\": -23557493,\n      \"description\": \"consequat ut aliqua eu eiusmod\",\n      \"name\": \"sunt proident\",\n      \"rsids\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"tokens\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"loginIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"imsPlcId\": \"dolor pariatur est esse\",\n      \"created\": \"1958-02-07T16:30:01.858Z\",\n      \"modified\": \"2022-03-31T05:27:19.871Z\",\n      \"oids\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"allRsids\": false,\n      \"imsPlcIdOrphaned\": false,\n      \"imsUserMigrationMigrated\": false\n    }\n  ],\n  \"currency\": \"nost\",\n  \"calendarType\": {\n    \"rsid\": \"Lorem tempor ut commodo\",\n    \"type\": \"QRS\",\n    \"anchorDate\": \"1982-05-01T08:13:55.691Z\",\n    \"firstDayOfWeek\": -8768526,\n    \"firstMonthOfYear\": -57472941,\n    \"firstDayOfYear\": \"1942-10-27T13:46:43.445Z\",\n    \"anomalyYear\": \"consectetur do nulla officia\"\n  },\n  \"axleConfig\": {\n    \"axleData\": true,\n    \"axleStart\": \"ullamco\"\n  },\n  \"currentTimezoneOffset\": -68654540.36251615,\n  \"timezoneZoneInfo\": \"enim Duis\",\n  \"dataCurrentAsOf\": \"1961-09-10T10:47:59.749Z\",\n  \"taxonomist\": false,\n  \"remoteLoading\": false,\n  \"enabledSolutions\": [\n    \"s\",\n    \"esse cupidatat dolore ea\"\n  ],\n  \"compatibility\": {\n    \"valid\": true,\n    \"message\": \"incididunt voluptate dolore\",\n    \"validator_version\": \"minim exercitation anim\",\n    \"supported_products\": [\n      \"enim laborum deserunt incididunt\",\n      \"pariatur quis adipisicing\"\n    ]\n  },\n  \"dataSchema\": \"mollit cillum\",\n  \"darkSessionsEnabled\": true,\n  \"sessionDefinition\": {},\n  \"curatedComponents\": [\n    {\n      \"componentId\": \"laborum minim\",\n      \"componentType\": \"pariatur fugiat eiusmod\",\n      \"curatedName\": \"et dolor ut incididunt\"\n    },\n    {\n      \"componentId\": \"non aliquip nisi tempor\",\n      \"componentType\": \"proident ea ipsum\",\n      \"curatedName\": \"deserunt mollit enim\"\n    }\n  ],\n  \"curationEnabled\": true,\n  \"alternateVariableNames\": {\n    \"name\": \"non\",\n    \"baseName\": \"irure\",\n    \"curatedName\": \"tempor aute dolor veniam\"\n  },\n  \"type\": \"amet enim sit quis\",\n  \"tntConfig\": {\n    \"tnt\": true,\n    \"tntExpireType\": 4665273,\n    \"tntExpirePeriods\": 49280126,\n    \"tntAllocationType\": -59310280,\n    \"tntA4tDateEnabled\": true,\n    \"tntClientCode\": \"adipisicing eu\"\n  },\n  \"tags\": [\n    {\n      \"id\": 31824835,\n      \"name\": \"magna non enim\",\n      \"description\": \"et voluptate ut \",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": 34066366,\n      \"name\": \"aliquip minim culpa sed\",\n      \"description\": \"do Ut dolor\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"usageSummary\": {\n    \"count\": 30315487,\n    \"mostRecentTimestamp\": \"1947-04-05T12:31:51.697Z\",\n    \"itemId\": \"occaecat anim\",\n    \"relevancyScore\": 74179998.33511305,\n    \"companyCount\": 23053556\n  },\n  \"numericRsid\": 95752903,\n  \"isBlocked\": true,\n  \"shares\": [\n    {\n      \"componentId\": \"labore adipisicing esse\",\n      \"shareToId\": 68207958,\n      \"shareToType\": \"tempor\",\n      \"shareId\": 45032147,\n      \"componentType\": \"non\",\n      \"shareToDisplayName\": \"sint id minim\",\n      \"shareToLogin\": \"qui ut ut labore\",\n      \"shareToImsUserId\": \"esse quis\",\n      \"accessLevel\": \"consequat nostrud in culpa\"\n    },\n    {\n      \"componentId\": \"quis enim Duis\",\n      \"shareToId\": -36696286,\n      \"shareToType\": \"Ut laborum in nostrud\",\n      \"shareId\": -93201124,\n      \"componentType\": \"Ut sint\",\n      \"shareToDisplayName\": \"mini\",\n      \"shareToLogin\": \"ipsum culpa laborum anim Excepteur\",\n      \"shareToImsUserId\": \"tempor irure anim officia nostrud\",\n      \"accessLevel\": \"id\"\n    }\n  ],\n  \"approved\": true,\n  \"favorite\": false,\n  \"siteTitle\": \"consequat non\",\n  \"modified\": \"1961-05-24T13:38:37.047Z\",\n  \"created\": \"1947-11-23T05:08:47.282Z\"\n}"
								},
								{
									"name": "Unexpected error; virtual report suite retrieval failed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/virtualreportsuites/:id?expansion=parentRsidName,currentTimezoneOffset&locale=en_US&useMicroservice=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"virtualreportsuites",
												":id"
											],
											"query": [
												{
													"key": "expansion",
													"value": "parentRsidName,currentTimezoneOffset"
												},
												{
													"key": "locale",
													"value": "en_US"
												},
												{
													"key": "useMicroservice",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The vrsid to retrieve"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Updates configuration for a virtual report suite.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"Ut sit quis et\",\n  \"name\": \"pro\",\n  \"description\": \"do eli\",\n  \"rsid\": \"eu cupidatat\",\n  \"owner\": {\n    \"id\": -23951049,\n    \"imsUserId\": \"in\"\n  },\n  \"isDeleted\": false,\n  \"migratedIds\": [\n    \"ullamco laborum fugiat\",\n    \"aliquip voluptate\"\n  ],\n  \"internal\": false,\n  \"parentRsid\": \"ullamco aliquip laboris\",\n  \"parentRsidName\": \"aute et reprehenderit eu occaecat\",\n  \"timezone\": -70992987,\n  \"segmentList\": [\n    \"sit mollit adipisicing ullamco\",\n    \"commodo do non sit sint\"\n  ],\n  \"globalCompanyKey\": \"consectetur sint magna sunt\",\n  \"numGroups\": 1313906,\n  \"groups\": [\n    {\n      \"companyId\": 62192356,\n      \"groupId\": -48440001,\n      \"description\": \"non in cupidatat\",\n      \"name\": \"in sunt\",\n      \"rsids\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"tokens\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"loginIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"imsPlcId\": \"sint ipsum amet in\",\n      \"created\": \"1959-04-07T10:20:44.972Z\",\n      \"modified\": \"1990-07-15T15:55:48.226Z\",\n      \"oids\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"allRsids\": false,\n      \"imsPlcIdOrphaned\": true,\n      \"imsUserMigrationMigrated\": true\n    },\n    {\n      \"companyId\": 48959227,\n      \"groupId\": -83866749,\n      \"description\": \"deserunt aliqua\",\n      \"name\": \"exercitation consequat nostrud amet\",\n      \"rsids\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"tokens\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"loginIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"imsPlcId\": \"dolore exercitation culpa\",\n      \"created\": \"2019-06-12T22:28:24.282Z\",\n      \"modified\": \"1961-01-27T18:01:09.316Z\",\n      \"oids\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"allRsids\": false,\n      \"imsPlcIdOrphaned\": false,\n      \"imsUserMigrationMigrated\": true\n    }\n  ],\n  \"currency\": \"sint\",\n  \"calendarType\": {\n    \"rsid\": \"dolor nulla\",\n    \"type\": \"NRF\",\n    \"anchorDate\": \"2000-12-03T06:04:45.915Z\",\n    \"firstDayOfWeek\": 21451157,\n    \"firstMonthOfYear\": -7496200,\n    \"firstDayOfYear\": \"1945-04-16T08:02:53.343Z\",\n    \"anomalyYear\": \"tempor ad quis\"\n  },\n  \"axleConfig\": {\n    \"axleData\": true,\n    \"axleStart\": \"consectetur labore sunt\"\n  },\n  \"currentTimezoneOffset\": -98796961.82712162,\n  \"timezoneZoneInfo\": \"occaecat quis velit esse\",\n  \"dataCurrentAsOf\": \"1953-10-02T04:48:34.823Z\",\n  \"taxonomist\": true,\n  \"remoteLoading\": true,\n  \"enabledSolutions\": [\n    \"mollit eiusmod\",\n    \"culpa tempor\"\n  ],\n  \"compatibility\": {\n    \"valid\": false,\n    \"message\": \"elit anim\",\n    \"validator_version\": \"commodo ipsum pariatur id\",\n    \"supported_products\": [\n      \"ut eiusmod proident\",\n      \"Duis qui\"\n    ]\n  },\n  \"dataSchema\": \"et cillum adipisicing\",\n  \"darkSessionsEnabled\": true,\n  \"sessionDefinition\": {},\n  \"curatedComponents\": [\n    {\n      \"componentId\": \"minim id pariatur in\",\n      \"componentType\": \"cillum ad\",\n      \"curatedName\": \"Excepteur adipisicing\"\n    },\n    {\n      \"componentId\": \"\",\n      \"componentType\": \"nulla proident officia labore\",\n      \"curatedName\": \"dolore ullamco\"\n    }\n  ],\n  \"curationEnabled\": true,\n  \"alternateVariableNames\": {\n    \"name\": \"esse cillum\",\n    \"baseName\": \"ut proident velit dolore\",\n    \"curatedName\": \"fugiat cillum dolor voluptate\"\n  },\n  \"type\": \"ex minim\",\n  \"tntConfig\": {\n    \"tnt\": true,\n    \"tntExpireType\": -10394376,\n    \"tntExpirePeriods\": -96843045,\n    \"tntAllocationType\": -47558665,\n    \"tntA4tDateEnabled\": false,\n    \"tntClientCode\": \"id ipsum in elit\"\n  },\n  \"tags\": [\n    {\n      \"id\": -21530599,\n      \"name\": \"ullamco fugiat\",\n      \"description\": \"dolore culpa deserunt consequat\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": -11452208,\n      \"name\": \"sed ipsum\",\n      \"description\": \"sint ad sed exercitat\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"usageSummary\": {\n    \"count\": 60946713,\n    \"mostRecentTimestamp\": \"1967-02-04T06:34:25.105Z\",\n    \"itemId\": \"do incididunt in\",\n    \"relevancyScore\": 10080157.984584391,\n    \"companyCount\": 67914226\n  },\n  \"numericRsid\": -91199711,\n  \"isBlocked\": false,\n  \"shares\": [\n    {\n      \"componentId\": \"ut aute\",\n      \"shareToId\": -97639763,\n      \"shareToType\": \"id ipsum\",\n      \"shareId\": -24621664,\n      \"componentType\": \"tempor mollit ut\",\n      \"shareToDisplayName\": \"ea\",\n      \"shareToLogin\": \"ex dolor ad sint\",\n      \"shareToImsUserId\": \"Lorem culpa eiusmo\",\n      \"accessLevel\": \"sed dolore culpa enim id\"\n    },\n    {\n      \"componentId\": \"ipsum cupidatat p\",\n      \"shareToId\": -49786951,\n      \"shareToType\": \"commodo veniam occaecat\",\n      \"shareId\": -67250815,\n      \"componentType\": \"in nulla qui\",\n      \"shareToDisplayName\": \"sed minim ea magna\",\n      \"shareToLogin\": \"occaecat cillum proident enim\",\n      \"shareToImsUserId\": \"magna culpa laboris Lorem\",\n      \"accessLevel\": \"non\"\n    }\n  ],\n  \"approved\": false,\n  \"favorite\": false,\n  \"siteTitle\": \"veniam\",\n  \"modified\": \"1947-11-16T17:23:07.827Z\",\n  \"created\": \"2006-07-07T14:59:14.622Z\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/virtualreportsuites/:id?expansion=parentRsid,segmentList,parentRsid,segmentList&locale=en_US&useMicroservice=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"virtualreportsuites",
										":id"
									],
									"query": [
										{
											"key": "expansion",
											"value": "parentRsid,segmentList,parentRsid,segmentList",
											"description": "Comma-delimited list of additional virtual report suite metadata fields to include on response."
										},
										{
											"key": "locale",
											"value": "en_US",
											"description": "Locale"
										},
										{
											"key": "useMicroservice",
											"value": "false",
											"description": "Use VRS Microservice developed by Intelligent Services"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The vrsid to update"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"Ut sit quis et\",\n  \"name\": \"pro\",\n  \"description\": \"do eli\",\n  \"rsid\": \"eu cupidatat\",\n  \"owner\": {\n    \"id\": -23951049,\n    \"imsUserId\": \"in\"\n  },\n  \"isDeleted\": false,\n  \"migratedIds\": [\n    \"ullamco laborum fugiat\",\n    \"aliquip voluptate\"\n  ],\n  \"internal\": false,\n  \"parentRsid\": \"ullamco aliquip laboris\",\n  \"parentRsidName\": \"aute et reprehenderit eu occaecat\",\n  \"timezone\": -70992987,\n  \"segmentList\": [\n    \"sit mollit adipisicing ullamco\",\n    \"commodo do non sit sint\"\n  ],\n  \"globalCompanyKey\": \"consectetur sint magna sunt\",\n  \"numGroups\": 1313906,\n  \"groups\": [\n    {\n      \"companyId\": 62192356,\n      \"groupId\": -48440001,\n      \"description\": \"non in cupidatat\",\n      \"name\": \"in sunt\",\n      \"rsids\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"tokens\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"loginIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"imsPlcId\": \"sint ipsum amet in\",\n      \"created\": \"1959-04-07T10:20:44.972Z\",\n      \"modified\": \"1990-07-15T15:55:48.226Z\",\n      \"oids\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"allRsids\": false,\n      \"imsPlcIdOrphaned\": true,\n      \"imsUserMigrationMigrated\": true\n    },\n    {\n      \"companyId\": 48959227,\n      \"groupId\": -83866749,\n      \"description\": \"deserunt aliqua\",\n      \"name\": \"exercitation consequat nostrud amet\",\n      \"rsids\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"tokens\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"loginIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"imsPlcId\": \"dolore exercitation culpa\",\n      \"created\": \"2019-06-12T22:28:24.282Z\",\n      \"modified\": \"1961-01-27T18:01:09.316Z\",\n      \"oids\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"allRsids\": false,\n      \"imsPlcIdOrphaned\": false,\n      \"imsUserMigrationMigrated\": true\n    }\n  ],\n  \"currency\": \"sint\",\n  \"calendarType\": {\n    \"rsid\": \"dolor nulla\",\n    \"type\": \"NRF\",\n    \"anchorDate\": \"2000-12-03T06:04:45.915Z\",\n    \"firstDayOfWeek\": 21451157,\n    \"firstMonthOfYear\": -7496200,\n    \"firstDayOfYear\": \"1945-04-16T08:02:53.343Z\",\n    \"anomalyYear\": \"tempor ad quis\"\n  },\n  \"axleConfig\": {\n    \"axleData\": true,\n    \"axleStart\": \"consectetur labore sunt\"\n  },\n  \"currentTimezoneOffset\": -98796961.82712162,\n  \"timezoneZoneInfo\": \"occaecat quis velit esse\",\n  \"dataCurrentAsOf\": \"1953-10-02T04:48:34.823Z\",\n  \"taxonomist\": true,\n  \"remoteLoading\": true,\n  \"enabledSolutions\": [\n    \"mollit eiusmod\",\n    \"culpa tempor\"\n  ],\n  \"compatibility\": {\n    \"valid\": false,\n    \"message\": \"elit anim\",\n    \"validator_version\": \"commodo ipsum pariatur id\",\n    \"supported_products\": [\n      \"ut eiusmod proident\",\n      \"Duis qui\"\n    ]\n  },\n  \"dataSchema\": \"et cillum adipisicing\",\n  \"darkSessionsEnabled\": true,\n  \"sessionDefinition\": {},\n  \"curatedComponents\": [\n    {\n      \"componentId\": \"minim id pariatur in\",\n      \"componentType\": \"cillum ad\",\n      \"curatedName\": \"Excepteur adipisicing\"\n    },\n    {\n      \"componentId\": \"\",\n      \"componentType\": \"nulla proident officia labore\",\n      \"curatedName\": \"dolore ullamco\"\n    }\n  ],\n  \"curationEnabled\": true,\n  \"alternateVariableNames\": {\n    \"name\": \"esse cillum\",\n    \"baseName\": \"ut proident velit dolore\",\n    \"curatedName\": \"fugiat cillum dolor voluptate\"\n  },\n  \"type\": \"ex minim\",\n  \"tntConfig\": {\n    \"tnt\": true,\n    \"tntExpireType\": -10394376,\n    \"tntExpirePeriods\": -96843045,\n    \"tntAllocationType\": -47558665,\n    \"tntA4tDateEnabled\": false,\n    \"tntClientCode\": \"id ipsum in elit\"\n  },\n  \"tags\": [\n    {\n      \"id\": -21530599,\n      \"name\": \"ullamco fugiat\",\n      \"description\": \"dolore culpa deserunt consequat\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": -11452208,\n      \"name\": \"sed ipsum\",\n      \"description\": \"sint ad sed exercitat\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"usageSummary\": {\n    \"count\": 60946713,\n    \"mostRecentTimestamp\": \"1967-02-04T06:34:25.105Z\",\n    \"itemId\": \"do incididunt in\",\n    \"relevancyScore\": 10080157.984584391,\n    \"companyCount\": 67914226\n  },\n  \"numericRsid\": -91199711,\n  \"isBlocked\": false,\n  \"shares\": [\n    {\n      \"componentId\": \"ut aute\",\n      \"shareToId\": -97639763,\n      \"shareToType\": \"id ipsum\",\n      \"shareId\": -24621664,\n      \"componentType\": \"tempor mollit ut\",\n      \"shareToDisplayName\": \"ea\",\n      \"shareToLogin\": \"ex dolor ad sint\",\n      \"shareToImsUserId\": \"Lorem culpa eiusmo\",\n      \"accessLevel\": \"sed dolore culpa enim id\"\n    },\n    {\n      \"componentId\": \"ipsum cupidatat p\",\n      \"shareToId\": -49786951,\n      \"shareToType\": \"commodo veniam occaecat\",\n      \"shareId\": -67250815,\n      \"componentType\": \"in nulla qui\",\n      \"shareToDisplayName\": \"sed minim ea magna\",\n      \"shareToLogin\": \"occaecat cillum proident enim\",\n      \"shareToImsUserId\": \"magna culpa laboris Lorem\",\n      \"accessLevel\": \"non\"\n    }\n  ],\n  \"approved\": false,\n  \"favorite\": false,\n  \"siteTitle\": \"veniam\",\n  \"modified\": \"1947-11-16T17:23:07.827Z\",\n  \"created\": \"2006-07-07T14:59:14.622Z\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/virtualreportsuites/:id?expansion=parentRsid,segmentList,parentRsid,segmentList&locale=en_US&useMicroservice=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"virtualreportsuites",
												":id"
											],
											"query": [
												{
													"key": "expansion",
													"value": "parentRsid,segmentList,parentRsid,segmentList"
												},
												{
													"key": "locale",
													"value": "en_US"
												},
												{
													"key": "useMicroservice",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The vrsid to update"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"in\",\n  \"name\": \"ad laborum aliquip ut\",\n  \"description\": \"anim reprehenderit ex\",\n  \"rsid\": \"nostrud aliqua\",\n  \"reportSuiteName\": \"occaecat est\",\n  \"owner\": {\n    \"id\": 60746951,\n    \"imsUserId\": \"magna qui dolor ut\"\n  },\n  \"isDeleted\": false,\n  \"migratedIds\": [\n    \"enim\",\n    \"commodo ex ea adipisicing\"\n  ],\n  \"internal\": false,\n  \"parentRsid\": \"aliquip sunt velit\",\n  \"parentRsidName\": \"nulla\",\n  \"timezone\": -58587684,\n  \"segmentList\": [\n    \"aliqua\",\n    \"dolor ullamco in in\"\n  ],\n  \"globalCompanyKey\": \"deserunt dolor dolor\",\n  \"numGroups\": -38637410,\n  \"groups\": [\n    {\n      \"companyId\": 26839943,\n      \"groupId\": -47168563,\n      \"description\": \"sint\",\n      \"name\": \"mollit ut\",\n      \"rsids\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"tokens\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"loginIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"imsPlcId\": \"magna s\",\n      \"created\": \"1979-11-19T10:46:31.130Z\",\n      \"modified\": \"1978-04-12T04:27:12.302Z\",\n      \"oids\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"allRsids\": true,\n      \"imsPlcIdOrphaned\": true,\n      \"imsUserMigrationMigrated\": false\n    },\n    {\n      \"companyId\": -73773583,\n      \"groupId\": -23557493,\n      \"description\": \"consequat ut aliqua eu eiusmod\",\n      \"name\": \"sunt proident\",\n      \"rsids\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"tokens\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"loginIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"imsPlcId\": \"dolor pariatur est esse\",\n      \"created\": \"1958-02-07T16:30:01.858Z\",\n      \"modified\": \"2022-03-31T05:27:19.871Z\",\n      \"oids\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"allRsids\": false,\n      \"imsPlcIdOrphaned\": false,\n      \"imsUserMigrationMigrated\": false\n    }\n  ],\n  \"currency\": \"nost\",\n  \"calendarType\": {\n    \"rsid\": \"Lorem tempor ut commodo\",\n    \"type\": \"QRS\",\n    \"anchorDate\": \"1982-05-01T08:13:55.691Z\",\n    \"firstDayOfWeek\": -8768526,\n    \"firstMonthOfYear\": -57472941,\n    \"firstDayOfYear\": \"1942-10-27T13:46:43.445Z\",\n    \"anomalyYear\": \"consectetur do nulla officia\"\n  },\n  \"axleConfig\": {\n    \"axleData\": true,\n    \"axleStart\": \"ullamco\"\n  },\n  \"currentTimezoneOffset\": -68654540.36251615,\n  \"timezoneZoneInfo\": \"enim Duis\",\n  \"dataCurrentAsOf\": \"1961-09-10T10:47:59.749Z\",\n  \"taxonomist\": false,\n  \"remoteLoading\": false,\n  \"enabledSolutions\": [\n    \"s\",\n    \"esse cupidatat dolore ea\"\n  ],\n  \"compatibility\": {\n    \"valid\": true,\n    \"message\": \"incididunt voluptate dolore\",\n    \"validator_version\": \"minim exercitation anim\",\n    \"supported_products\": [\n      \"enim laborum deserunt incididunt\",\n      \"pariatur quis adipisicing\"\n    ]\n  },\n  \"dataSchema\": \"mollit cillum\",\n  \"darkSessionsEnabled\": true,\n  \"sessionDefinition\": {},\n  \"curatedComponents\": [\n    {\n      \"componentId\": \"laborum minim\",\n      \"componentType\": \"pariatur fugiat eiusmod\",\n      \"curatedName\": \"et dolor ut incididunt\"\n    },\n    {\n      \"componentId\": \"non aliquip nisi tempor\",\n      \"componentType\": \"proident ea ipsum\",\n      \"curatedName\": \"deserunt mollit enim\"\n    }\n  ],\n  \"curationEnabled\": true,\n  \"alternateVariableNames\": {\n    \"name\": \"non\",\n    \"baseName\": \"irure\",\n    \"curatedName\": \"tempor aute dolor veniam\"\n  },\n  \"type\": \"amet enim sit quis\",\n  \"tntConfig\": {\n    \"tnt\": true,\n    \"tntExpireType\": 4665273,\n    \"tntExpirePeriods\": 49280126,\n    \"tntAllocationType\": -59310280,\n    \"tntA4tDateEnabled\": true,\n    \"tntClientCode\": \"adipisicing eu\"\n  },\n  \"tags\": [\n    {\n      \"id\": 31824835,\n      \"name\": \"magna non enim\",\n      \"description\": \"et voluptate ut \",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": 34066366,\n      \"name\": \"aliquip minim culpa sed\",\n      \"description\": \"do Ut dolor\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"usageSummary\": {\n    \"count\": 30315487,\n    \"mostRecentTimestamp\": \"1947-04-05T12:31:51.697Z\",\n    \"itemId\": \"occaecat anim\",\n    \"relevancyScore\": 74179998.33511305,\n    \"companyCount\": 23053556\n  },\n  \"numericRsid\": 95752903,\n  \"isBlocked\": true,\n  \"shares\": [\n    {\n      \"componentId\": \"labore adipisicing esse\",\n      \"shareToId\": 68207958,\n      \"shareToType\": \"tempor\",\n      \"shareId\": 45032147,\n      \"componentType\": \"non\",\n      \"shareToDisplayName\": \"sint id minim\",\n      \"shareToLogin\": \"qui ut ut labore\",\n      \"shareToImsUserId\": \"esse quis\",\n      \"accessLevel\": \"consequat nostrud in culpa\"\n    },\n    {\n      \"componentId\": \"quis enim Duis\",\n      \"shareToId\": -36696286,\n      \"shareToType\": \"Ut laborum in nostrud\",\n      \"shareId\": -93201124,\n      \"componentType\": \"Ut sint\",\n      \"shareToDisplayName\": \"mini\",\n      \"shareToLogin\": \"ipsum culpa laborum anim Excepteur\",\n      \"shareToImsUserId\": \"tempor irure anim officia nostrud\",\n      \"accessLevel\": \"id\"\n    }\n  ],\n  \"approved\": true,\n  \"favorite\": false,\n  \"siteTitle\": \"consequat non\",\n  \"modified\": \"1961-05-24T13:38:37.047Z\",\n  \"created\": \"1947-11-23T05:08:47.282Z\"\n}"
								}
							]
						},
						{
							"name": "Delete a virtual report suite by ID",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/virtualreportsuites/:id?permanent=false&locale=en_US&useMicroservice=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"virtualreportsuites",
										":id"
									],
									"query": [
										{
											"key": "permanent",
											"value": "false",
											"description": "Permanently delete the virtual report suite (Not allowed in Beta or Production environments)"
										},
										{
											"key": "locale",
											"value": "en_US",
											"description": "Locale"
										},
										{
											"key": "useMicroservice",
											"value": "false",
											"description": "Use VRS Microservice developed by Intelligent Services"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The virtual report suite ID to be deleted"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/virtualreportsuites/:id?permanent=false&locale=en_US&useMicroservice=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"virtualreportsuites",
												":id"
											],
											"query": [
												{
													"key": "permanent",
													"value": "false"
												},
												{
													"key": "locale",
													"value": "en_US"
												},
												{
													"key": "useMicroservice",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The virtual report suite ID to be deleted"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"result\": \"proident sit\",\n  \"message\": \"est tempor do sed et\"\n}"
								},
								{
									"name": "External API error; Virtual report suite delete failed",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/virtualreportsuites/:id?permanent=false&locale=en_US&useMicroservice=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"virtualreportsuites",
												":id"
											],
											"query": [
												{
													"key": "permanent",
													"value": "false"
												},
												{
													"key": "locale",
													"value": "en_US"
												},
												{
													"key": "useMicroservice",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The virtual report suite ID to be deleted"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Retrieves virtual report suites accessible to the current user.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/virtualreportsuites?expansion=timezone,currentTimezoneOffset&includeType=deleted,deleted&types=vrs,vrs&filterByModifiedAfter=aliqua&relevantOnly=false&rsids=aliqua&locale=en_US&cached=true&idContains=aliqua&useMicroservice=false&limit=10&page=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"virtualreportsuites"
							],
							"query": [
								{
									"key": "expansion",
									"value": "timezone,currentTimezoneOffset",
									"description": "Comma-delimited list of additional virtual report suite metadata fields to include on response."
								},
								{
									"key": "includeType",
									"value": "deleted,deleted",
									"description": "Include report suites with the following parameters in the return list."
								},
								{
									"key": "types",
									"value": "vrs,vrs",
									"description": "Comma-delimited list of types of virtual report suites to return.  No selection returns all types."
								},
								{
									"key": "filterByModifiedAfter",
									"value": "aliqua",
									"description": "Filter list to only include virtual report suites modified since this date (ISO8601 format)"
								},
								{
									"key": "relevantOnly",
									"value": "false",
									"description": "Return only report suites that are considered recent."
								},
								{
									"key": "rsids",
									"value": "aliqua",
									"description": "Filter list to only include suites in this RSID list (comma-delimited)"
								},
								{
									"key": "locale",
									"value": "en_US",
									"description": "Locale"
								},
								{
									"key": "cached",
									"value": "true",
									"description": "Return cached results"
								},
								{
									"key": "idContains",
									"value": "aliqua",
									"description": "Filter list to only include suites whose id contains idContains."
								},
								{
									"key": "useMicroservice",
									"value": "false",
									"description": "Use VRS Microservice developed by Intelligent Services"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Number of results per page"
								},
								{
									"key": "page",
									"value": "0",
									"description": "Page number (base 0 - first page is \"0\")"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/virtualreportsuites?expansion=parentRsidName,currentTimezoneOffset&includeType=deleted,deleted&types=vrs,vrs&filterByModifiedAfter=aliqua&relevantOnly=false&rsids=aliqua&locale=en_US&cached=true&idContains=aliqua&useMicroservice=false&limit=10&page=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"virtualreportsuites"
									],
									"query": [
										{
											"key": "expansion",
											"value": "parentRsidName,currentTimezoneOffset"
										},
										{
											"key": "includeType",
											"value": "deleted,deleted"
										},
										{
											"key": "types",
											"value": "vrs,vrs"
										},
										{
											"key": "filterByModifiedAfter",
											"value": "aliqua"
										},
										{
											"key": "relevantOnly",
											"value": "false"
										},
										{
											"key": "rsids",
											"value": "aliqua"
										},
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "cached",
											"value": "true"
										},
										{
											"key": "idContains",
											"value": "aliqua"
										},
										{
											"key": "useMicroservice",
											"value": "false"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"eiusmod sint id Ut\",\n  \"name\": \"ut Duis commodo\",\n  \"description\": \"incididunt ex ut\",\n  \"rsid\": \"aliquip\",\n  \"reportSuiteName\": \"proident ullamco in\",\n  \"owner\": {\n    \"id\": 91726051,\n    \"imsUserId\": \"dolore velit proident\"\n  },\n  \"isDeleted\": true,\n  \"migratedIds\": [\n    \"eiusmod commodo eu enim\",\n    \"laboris in mollit occaecat\"\n  ],\n  \"internal\": false,\n  \"parentRsid\": \"dolor aliqua est non dolor\",\n  \"parentRsidName\": \"consequat occaecat\",\n  \"timezone\": -31257618,\n  \"segmentList\": [\n    \"ad cillum esse qui dolor\",\n    \"ullamco et officia minim\"\n  ],\n  \"globalCompanyKey\": \"enim eiusmod\",\n  \"numGroups\": 51865639,\n  \"groups\": [\n    {\n      \"companyId\": -61979908,\n      \"groupId\": -28612611,\n      \"description\": \"laborum exercitation nostrud Excepteur deserunt\",\n      \"name\": \"eu consequat et\",\n      \"rsids\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"tokens\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"loginIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"imsPlcId\": \"do Duis ut est\",\n      \"created\": \"1984-02-20T09:50:02.635Z\",\n      \"modified\": \"1961-05-17T18:35:48.139Z\",\n      \"oids\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"allRsids\": true,\n      \"imsPlcIdOrphaned\": false,\n      \"imsUserMigrationMigrated\": true\n    },\n    {\n      \"companyId\": -26910076,\n      \"groupId\": 19692296,\n      \"description\": \"culpa aliqua Ut amet\",\n      \"name\": \"incididunt laboris\",\n      \"rsids\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"tokens\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"loginIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"imsPlcId\": \"sed consequat reprehenderit\",\n      \"created\": \"1997-04-28T16:31:49.003Z\",\n      \"modified\": \"2016-01-25T17:29:09.689Z\",\n      \"oids\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"allRsids\": true,\n      \"imsPlcIdOrphaned\": false,\n      \"imsUserMigrationMigrated\": false\n    }\n  ],\n  \"currency\": \"laborum quis c\",\n  \"calendarType\": {\n    \"rsid\": \"ullamco est eiusmod ex eu\",\n    \"type\": \"GREGORIAN\",\n    \"anchorDate\": \"1950-01-26T02:45:16.713Z\",\n    \"firstDayOfWeek\": 3936450,\n    \"firstMonthOfYear\": -26881335,\n    \"firstDayOfYear\": \"1972-06-24T16:22:04.462Z\",\n    \"anomalyYear\": \"id proident officia\"\n  },\n  \"axleConfig\": {\n    \"axleData\": false,\n    \"axleStart\": \"aliqua\"\n  },\n  \"currentTimezoneOffset\": 32304453.70242934,\n  \"timezoneZoneInfo\": \"ut eiusmod consectetur\",\n  \"dataCurrentAsOf\": \"1978-12-31T03:51:44.382Z\",\n  \"taxonomist\": true,\n  \"remoteLoading\": true,\n  \"enabledSolutions\": [\n    \"ex ipsum\",\n    \"dolore sint\"\n  ],\n  \"compatibility\": {\n    \"valid\": false,\n    \"message\": \"Duis ipsum proident esse\",\n    \"validator_version\": \"velit\",\n    \"supported_products\": [\n      \"dolor est culpa Ut\",\n      \"amet\"\n    ]\n  },\n  \"dataSchema\": \"commodo aliquip deserunt laborum\",\n  \"darkSessionsEnabled\": false,\n  \"sessionDefinition\": {},\n  \"curatedComponents\": [\n    {\n      \"componentId\": \"in ad nostrud\",\n      \"componentType\": \"vel\",\n      \"curatedName\": \"eiusmod ipsum amet mollit\"\n    },\n    {\n      \"componentId\": \"cillum elit Excepteur deserunt\",\n      \"componentType\": \"culpa minim aliquip Lorem cillum\",\n      \"curatedName\": \"Ut\"\n    }\n  ],\n  \"curationEnabled\": false,\n  \"alternateVariableNames\": {\n    \"name\": \"adipisicing magna ex sed\",\n    \"baseName\": \"sunt\",\n    \"curatedName\": \"laborum officia fugiat dolore\"\n  },\n  \"type\": \"aliquip dolore magna reprehen\",\n  \"tntConfig\": {\n    \"tnt\": true,\n    \"tntExpireType\": 35734693,\n    \"tntExpirePeriods\": -79561676,\n    \"tntAllocationType\": -46366400,\n    \"tntA4tDateEnabled\": false,\n    \"tntClientCode\": \"dolore fugiat cupidatat nulla\"\n  },\n  \"tags\": [\n    {\n      \"id\": 58126570,\n      \"name\": \"ad\",\n      \"description\": \"dolor ea\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": -98326986,\n      \"name\": \"quis cillum\",\n      \"description\": \"veniam reprehenderit ullamco Excepteur ea\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"usageSummary\": {\n    \"count\": 36420246,\n    \"mostRecentTimestamp\": \"1969-01-31T01:16:10.656Z\",\n    \"itemId\": \"dolor mollit\",\n    \"relevancyScore\": -71361784.11198747,\n    \"companyCount\": -58513082\n  },\n  \"numericRsid\": 68545895,\n  \"isBlocked\": false,\n  \"shares\": [\n    {\n      \"componentId\": \"in reprehenderit ea adipisicing\",\n      \"shareToId\": 38730213,\n      \"shareToType\": \"officia Ut\",\n      \"shareId\": 11068675,\n      \"componentType\": \"ut consequat sit non dolore\",\n      \"shareToDisplayName\": \"non qui incididunt in\",\n      \"shareToLogin\": \"in mollit laborum ut\",\n      \"shareToImsUserId\": \"labore ut\",\n      \"accessLevel\": \"aute voluptate ullamco\"\n    },\n    {\n      \"componentId\": \"do commodo Excepteur e\",\n      \"shareToId\": -61302118,\n      \"shareToType\": \"deserunt occaecat\",\n      \"shareId\": 6081886,\n      \"componentType\": \"dolore laboris nisi pariatur\",\n      \"shareToDisplayName\": \"qui dolor adipisicing Excepteur consectetur\",\n      \"shareToLogin\": \"non aliqua consectetur ad tempor\",\n      \"shareToImsUserId\": \"laboris ullamco labore\",\n      \"accessLevel\": \"proident sint\"\n    }\n  ],\n  \"approved\": false,\n  \"favorite\": false,\n  \"siteTitle\": \"laboris adipisicing\",\n  \"modified\": \"1988-04-28T01:53:41.224Z\",\n  \"created\": \"1960-05-15T17:24:31.417Z\"\n}"
						},
						{
							"name": "Unexpected error; virtual report suite retrieval failed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/virtualreportsuites?expansion=parentRsidName,currentTimezoneOffset&includeType=deleted,deleted&types=vrs,vrs&filterByModifiedAfter=aliqua&relevantOnly=false&rsids=aliqua&locale=en_US&cached=true&idContains=aliqua&useMicroservice=false&limit=10&page=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"virtualreportsuites"
									],
									"query": [
										{
											"key": "expansion",
											"value": "parentRsidName,currentTimezoneOffset"
										},
										{
											"key": "includeType",
											"value": "deleted,deleted"
										},
										{
											"key": "types",
											"value": "vrs,vrs"
										},
										{
											"key": "filterByModifiedAfter",
											"value": "aliqua"
										},
										{
											"key": "relevantOnly",
											"value": "false"
										},
										{
											"key": "rsids",
											"value": "aliqua"
										},
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "cached",
											"value": "true"
										},
										{
											"key": "idContains",
											"value": "aliqua"
										},
										{
											"key": "useMicroservice",
											"value": "false"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "0"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Creates a new virtual report suite",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"Ut sit quis et\",\n  \"name\": \"pro\",\n  \"description\": \"do eli\",\n  \"rsid\": \"eu cupidatat\",\n  \"owner\": {\n    \"id\": -23951049,\n    \"imsUserId\": \"in\"\n  },\n  \"isDeleted\": false,\n  \"migratedIds\": [\n    \"ullamco laborum fugiat\",\n    \"aliquip voluptate\"\n  ],\n  \"internal\": false,\n  \"parentRsid\": \"ullamco aliquip laboris\",\n  \"parentRsidName\": \"aute et reprehenderit eu occaecat\",\n  \"timezone\": -70992987,\n  \"segmentList\": [\n    \"sit mollit adipisicing ullamco\",\n    \"commodo do non sit sint\"\n  ],\n  \"globalCompanyKey\": \"consectetur sint magna sunt\",\n  \"numGroups\": 1313906,\n  \"groups\": [\n    {\n      \"companyId\": 62192356,\n      \"groupId\": -48440001,\n      \"description\": \"non in cupidatat\",\n      \"name\": \"in sunt\",\n      \"rsids\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"tokens\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"loginIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"imsPlcId\": \"sint ipsum amet in\",\n      \"created\": \"1959-04-07T10:20:44.972Z\",\n      \"modified\": \"1990-07-15T15:55:48.226Z\",\n      \"oids\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"allRsids\": false,\n      \"imsPlcIdOrphaned\": true,\n      \"imsUserMigrationMigrated\": true\n    },\n    {\n      \"companyId\": 48959227,\n      \"groupId\": -83866749,\n      \"description\": \"deserunt aliqua\",\n      \"name\": \"exercitation consequat nostrud amet\",\n      \"rsids\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"tokens\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"loginIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"imsPlcId\": \"dolore exercitation culpa\",\n      \"created\": \"2019-06-12T22:28:24.282Z\",\n      \"modified\": \"1961-01-27T18:01:09.316Z\",\n      \"oids\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"allRsids\": false,\n      \"imsPlcIdOrphaned\": false,\n      \"imsUserMigrationMigrated\": true\n    }\n  ],\n  \"currency\": \"sint\",\n  \"calendarType\": {\n    \"rsid\": \"dolor nulla\",\n    \"type\": \"NRF\",\n    \"anchorDate\": \"2000-12-03T06:04:45.915Z\",\n    \"firstDayOfWeek\": 21451157,\n    \"firstMonthOfYear\": -7496200,\n    \"firstDayOfYear\": \"1945-04-16T08:02:53.343Z\",\n    \"anomalyYear\": \"tempor ad quis\"\n  },\n  \"axleConfig\": {\n    \"axleData\": true,\n    \"axleStart\": \"consectetur labore sunt\"\n  },\n  \"currentTimezoneOffset\": -98796961.82712162,\n  \"timezoneZoneInfo\": \"occaecat quis velit esse\",\n  \"dataCurrentAsOf\": \"1953-10-02T04:48:34.823Z\",\n  \"taxonomist\": true,\n  \"remoteLoading\": true,\n  \"enabledSolutions\": [\n    \"mollit eiusmod\",\n    \"culpa tempor\"\n  ],\n  \"compatibility\": {\n    \"valid\": false,\n    \"message\": \"elit anim\",\n    \"validator_version\": \"commodo ipsum pariatur id\",\n    \"supported_products\": [\n      \"ut eiusmod proident\",\n      \"Duis qui\"\n    ]\n  },\n  \"dataSchema\": \"et cillum adipisicing\",\n  \"darkSessionsEnabled\": true,\n  \"sessionDefinition\": {},\n  \"curatedComponents\": [\n    {\n      \"componentId\": \"minim id pariatur in\",\n      \"componentType\": \"cillum ad\",\n      \"curatedName\": \"Excepteur adipisicing\"\n    },\n    {\n      \"componentId\": \"\",\n      \"componentType\": \"nulla proident officia labore\",\n      \"curatedName\": \"dolore ullamco\"\n    }\n  ],\n  \"curationEnabled\": true,\n  \"alternateVariableNames\": {\n    \"name\": \"esse cillum\",\n    \"baseName\": \"ut proident velit dolore\",\n    \"curatedName\": \"fugiat cillum dolor voluptate\"\n  },\n  \"type\": \"ex minim\",\n  \"tntConfig\": {\n    \"tnt\": true,\n    \"tntExpireType\": -10394376,\n    \"tntExpirePeriods\": -96843045,\n    \"tntAllocationType\": -47558665,\n    \"tntA4tDateEnabled\": false,\n    \"tntClientCode\": \"id ipsum in elit\"\n  },\n  \"tags\": [\n    {\n      \"id\": -21530599,\n      \"name\": \"ullamco fugiat\",\n      \"description\": \"dolore culpa deserunt consequat\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": -11452208,\n      \"name\": \"sed ipsum\",\n      \"description\": \"sint ad sed exercitat\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"usageSummary\": {\n    \"count\": 60946713,\n    \"mostRecentTimestamp\": \"1967-02-04T06:34:25.105Z\",\n    \"itemId\": \"do incididunt in\",\n    \"relevancyScore\": 10080157.984584391,\n    \"companyCount\": 67914226\n  },\n  \"numericRsid\": -91199711,\n  \"isBlocked\": false,\n  \"shares\": [\n    {\n      \"componentId\": \"ut aute\",\n      \"shareToId\": -97639763,\n      \"shareToType\": \"id ipsum\",\n      \"shareId\": -24621664,\n      \"componentType\": \"tempor mollit ut\",\n      \"shareToDisplayName\": \"ea\",\n      \"shareToLogin\": \"ex dolor ad sint\",\n      \"shareToImsUserId\": \"Lorem culpa eiusmo\",\n      \"accessLevel\": \"sed dolore culpa enim id\"\n    },\n    {\n      \"componentId\": \"ipsum cupidatat p\",\n      \"shareToId\": -49786951,\n      \"shareToType\": \"commodo veniam occaecat\",\n      \"shareId\": -67250815,\n      \"componentType\": \"in nulla qui\",\n      \"shareToDisplayName\": \"sed minim ea magna\",\n      \"shareToLogin\": \"occaecat cillum proident enim\",\n      \"shareToImsUserId\": \"magna culpa laboris Lorem\",\n      \"accessLevel\": \"non\"\n    }\n  ],\n  \"approved\": false,\n  \"favorite\": false,\n  \"siteTitle\": \"veniam\",\n  \"modified\": \"1947-11-16T17:23:07.827Z\",\n  \"created\": \"2006-07-07T14:59:14.622Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/virtualreportsuites?expansion=parentRsid,segmentList,parentRsid,segmentList&locale=en_US&useMicroservice=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"virtualreportsuites"
							],
							"query": [
								{
									"key": "expansion",
									"value": "parentRsid,segmentList,parentRsid,segmentList",
									"description": "Comma-delimited list of additional virtual report suite metadata fields to include on response."
								},
								{
									"key": "locale",
									"value": "en_US",
									"description": "Locale"
								},
								{
									"key": "useMicroservice",
									"value": "false",
									"description": "Use VRS Microservice developed by Intelligent Services"
								}
							]
						},
						"description": "Creates a virtual report suite. The following attributes are available when creating a virtual report suite:\nRequired: name, parentRsid"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/virtualreportsuites?expansion=parentRsid,segmentList,parentRsid,segmentList&locale=en_US&useMicroservice=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"virtualreportsuites"
									],
									"query": [
										{
											"key": "expansion",
											"value": "parentRsid,segmentList,parentRsid,segmentList"
										},
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "useMicroservice",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"in\",\n  \"name\": \"ad laborum aliquip ut\",\n  \"description\": \"anim reprehenderit ex\",\n  \"rsid\": \"nostrud aliqua\",\n  \"reportSuiteName\": \"occaecat est\",\n  \"owner\": {\n    \"id\": 60746951,\n    \"imsUserId\": \"magna qui dolor ut\"\n  },\n  \"isDeleted\": false,\n  \"migratedIds\": [\n    \"enim\",\n    \"commodo ex ea adipisicing\"\n  ],\n  \"internal\": false,\n  \"parentRsid\": \"aliquip sunt velit\",\n  \"parentRsidName\": \"nulla\",\n  \"timezone\": -58587684,\n  \"segmentList\": [\n    \"aliqua\",\n    \"dolor ullamco in in\"\n  ],\n  \"globalCompanyKey\": \"deserunt dolor dolor\",\n  \"numGroups\": -38637410,\n  \"groups\": [\n    {\n      \"companyId\": 26839943,\n      \"groupId\": -47168563,\n      \"description\": \"sint\",\n      \"name\": \"mollit ut\",\n      \"rsids\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"tokens\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"loginIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"imsPlcId\": \"magna s\",\n      \"created\": \"1979-11-19T10:46:31.130Z\",\n      \"modified\": \"1978-04-12T04:27:12.302Z\",\n      \"oids\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"allRsids\": true,\n      \"imsPlcIdOrphaned\": true,\n      \"imsUserMigrationMigrated\": false\n    },\n    {\n      \"companyId\": -73773583,\n      \"groupId\": -23557493,\n      \"description\": \"consequat ut aliqua eu eiusmod\",\n      \"name\": \"sunt proident\",\n      \"rsids\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"tokens\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"loginIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"imsPlcId\": \"dolor pariatur est esse\",\n      \"created\": \"1958-02-07T16:30:01.858Z\",\n      \"modified\": \"2022-03-31T05:27:19.871Z\",\n      \"oids\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"allRsids\": false,\n      \"imsPlcIdOrphaned\": false,\n      \"imsUserMigrationMigrated\": false\n    }\n  ],\n  \"currency\": \"nost\",\n  \"calendarType\": {\n    \"rsid\": \"Lorem tempor ut commodo\",\n    \"type\": \"QRS\",\n    \"anchorDate\": \"1982-05-01T08:13:55.691Z\",\n    \"firstDayOfWeek\": -8768526,\n    \"firstMonthOfYear\": -57472941,\n    \"firstDayOfYear\": \"1942-10-27T13:46:43.445Z\",\n    \"anomalyYear\": \"consectetur do nulla officia\"\n  },\n  \"axleConfig\": {\n    \"axleData\": true,\n    \"axleStart\": \"ullamco\"\n  },\n  \"currentTimezoneOffset\": -68654540.36251615,\n  \"timezoneZoneInfo\": \"enim Duis\",\n  \"dataCurrentAsOf\": \"1961-09-10T10:47:59.749Z\",\n  \"taxonomist\": false,\n  \"remoteLoading\": false,\n  \"enabledSolutions\": [\n    \"s\",\n    \"esse cupidatat dolore ea\"\n  ],\n  \"compatibility\": {\n    \"valid\": true,\n    \"message\": \"incididunt voluptate dolore\",\n    \"validator_version\": \"minim exercitation anim\",\n    \"supported_products\": [\n      \"enim laborum deserunt incididunt\",\n      \"pariatur quis adipisicing\"\n    ]\n  },\n  \"dataSchema\": \"mollit cillum\",\n  \"darkSessionsEnabled\": true,\n  \"sessionDefinition\": {},\n  \"curatedComponents\": [\n    {\n      \"componentId\": \"laborum minim\",\n      \"componentType\": \"pariatur fugiat eiusmod\",\n      \"curatedName\": \"et dolor ut incididunt\"\n    },\n    {\n      \"componentId\": \"non aliquip nisi tempor\",\n      \"componentType\": \"proident ea ipsum\",\n      \"curatedName\": \"deserunt mollit enim\"\n    }\n  ],\n  \"curationEnabled\": true,\n  \"alternateVariableNames\": {\n    \"name\": \"non\",\n    \"baseName\": \"irure\",\n    \"curatedName\": \"tempor aute dolor veniam\"\n  },\n  \"type\": \"amet enim sit quis\",\n  \"tntConfig\": {\n    \"tnt\": true,\n    \"tntExpireType\": 4665273,\n    \"tntExpirePeriods\": 49280126,\n    \"tntAllocationType\": -59310280,\n    \"tntA4tDateEnabled\": true,\n    \"tntClientCode\": \"adipisicing eu\"\n  },\n  \"tags\": [\n    {\n      \"id\": 31824835,\n      \"name\": \"magna non enim\",\n      \"description\": \"et voluptate ut \",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": 34066366,\n      \"name\": \"aliquip minim culpa sed\",\n      \"description\": \"do Ut dolor\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"usageSummary\": {\n    \"count\": 30315487,\n    \"mostRecentTimestamp\": \"1947-04-05T12:31:51.697Z\",\n    \"itemId\": \"occaecat anim\",\n    \"relevancyScore\": 74179998.33511305,\n    \"companyCount\": 23053556\n  },\n  \"numericRsid\": 95752903,\n  \"isBlocked\": true,\n  \"shares\": [\n    {\n      \"componentId\": \"labore adipisicing esse\",\n      \"shareToId\": 68207958,\n      \"shareToType\": \"tempor\",\n      \"shareId\": 45032147,\n      \"componentType\": \"non\",\n      \"shareToDisplayName\": \"sint id minim\",\n      \"shareToLogin\": \"qui ut ut labore\",\n      \"shareToImsUserId\": \"esse quis\",\n      \"accessLevel\": \"consequat nostrud in culpa\"\n    },\n    {\n      \"componentId\": \"quis enim Duis\",\n      \"shareToId\": -36696286,\n      \"shareToType\": \"Ut laborum in nostrud\",\n      \"shareId\": -93201124,\n      \"componentType\": \"Ut sint\",\n      \"shareToDisplayName\": \"mini\",\n      \"shareToLogin\": \"ipsum culpa laborum anim Excepteur\",\n      \"shareToImsUserId\": \"tempor irure anim officia nostrud\",\n      \"accessLevel\": \"id\"\n    }\n  ],\n  \"approved\": true,\n  \"favorite\": false,\n  \"siteTitle\": \"consequat non\",\n  \"modified\": \"1961-05-24T13:38:37.047Z\",\n  \"created\": \"1947-11-23T05:08:47.282Z\"\n}"
						},
						{
							"name": "Invalid input; name and parentRsid are required.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/virtualreportsuites?expansion=parentRsid,segmentList,parentRsid,segmentList&locale=en_US&useMicroservice=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"virtualreportsuites"
									],
									"query": [
										{
											"key": "expansion",
											"value": "parentRsid,segmentList,parentRsid,segmentList"
										},
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "useMicroservice",
											"value": "false"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "External API error; Virtual report suite create or retrieval failed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/virtualreportsuites?expansion=parentRsid,segmentList,parentRsid,segmentList&locale=en_US&useMicroservice=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"virtualreportsuites"
									],
									"query": [
										{
											"key": "expansion",
											"value": "parentRsid,segmentList,parentRsid,segmentList"
										},
										{
											"key": "locale",
											"value": "en_US"
										},
										{
											"key": "useMicroservice",
											"value": "false"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Validates a virtual report suite",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"Ut sit quis et\",\n  \"name\": \"pro\",\n  \"description\": \"do eli\",\n  \"rsid\": \"eu cupidatat\",\n  \"owner\": {\n    \"id\": -23951049,\n    \"imsUserId\": \"in\"\n  },\n  \"isDeleted\": false,\n  \"migratedIds\": [\n    \"ullamco laborum fugiat\",\n    \"aliquip voluptate\"\n  ],\n  \"internal\": false,\n  \"parentRsid\": \"ullamco aliquip laboris\",\n  \"parentRsidName\": \"aute et reprehenderit eu occaecat\",\n  \"timezone\": -70992987,\n  \"segmentList\": [\n    \"sit mollit adipisicing ullamco\",\n    \"commodo do non sit sint\"\n  ],\n  \"globalCompanyKey\": \"consectetur sint magna sunt\",\n  \"numGroups\": 1313906,\n  \"groups\": [\n    {\n      \"companyId\": 62192356,\n      \"groupId\": -48440001,\n      \"description\": \"non in cupidatat\",\n      \"name\": \"in sunt\",\n      \"rsids\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"tokens\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"loginIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"imsPlcId\": \"sint ipsum amet in\",\n      \"created\": \"1959-04-07T10:20:44.972Z\",\n      \"modified\": \"1990-07-15T15:55:48.226Z\",\n      \"oids\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"allRsids\": false,\n      \"imsPlcIdOrphaned\": true,\n      \"imsUserMigrationMigrated\": true\n    },\n    {\n      \"companyId\": 48959227,\n      \"groupId\": -83866749,\n      \"description\": \"deserunt aliqua\",\n      \"name\": \"exercitation consequat nostrud amet\",\n      \"rsids\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"tokens\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"loginIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"imsPlcId\": \"dolore exercitation culpa\",\n      \"created\": \"2019-06-12T22:28:24.282Z\",\n      \"modified\": \"1961-01-27T18:01:09.316Z\",\n      \"oids\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"allRsids\": false,\n      \"imsPlcIdOrphaned\": false,\n      \"imsUserMigrationMigrated\": true\n    }\n  ],\n  \"currency\": \"sint\",\n  \"calendarType\": {\n    \"rsid\": \"dolor nulla\",\n    \"type\": \"NRF\",\n    \"anchorDate\": \"2000-12-03T06:04:45.915Z\",\n    \"firstDayOfWeek\": 21451157,\n    \"firstMonthOfYear\": -7496200,\n    \"firstDayOfYear\": \"1945-04-16T08:02:53.343Z\",\n    \"anomalyYear\": \"tempor ad quis\"\n  },\n  \"axleConfig\": {\n    \"axleData\": true,\n    \"axleStart\": \"consectetur labore sunt\"\n  },\n  \"currentTimezoneOffset\": -98796961.82712162,\n  \"timezoneZoneInfo\": \"occaecat quis velit esse\",\n  \"dataCurrentAsOf\": \"1953-10-02T04:48:34.823Z\",\n  \"taxonomist\": true,\n  \"remoteLoading\": true,\n  \"enabledSolutions\": [\n    \"mollit eiusmod\",\n    \"culpa tempor\"\n  ],\n  \"compatibility\": {\n    \"valid\": false,\n    \"message\": \"elit anim\",\n    \"validator_version\": \"commodo ipsum pariatur id\",\n    \"supported_products\": [\n      \"ut eiusmod proident\",\n      \"Duis qui\"\n    ]\n  },\n  \"dataSchema\": \"et cillum adipisicing\",\n  \"darkSessionsEnabled\": true,\n  \"sessionDefinition\": {},\n  \"curatedComponents\": [\n    {\n      \"componentId\": \"minim id pariatur in\",\n      \"componentType\": \"cillum ad\",\n      \"curatedName\": \"Excepteur adipisicing\"\n    },\n    {\n      \"componentId\": \"\",\n      \"componentType\": \"nulla proident officia labore\",\n      \"curatedName\": \"dolore ullamco\"\n    }\n  ],\n  \"curationEnabled\": true,\n  \"alternateVariableNames\": {\n    \"name\": \"esse cillum\",\n    \"baseName\": \"ut proident velit dolore\",\n    \"curatedName\": \"fugiat cillum dolor voluptate\"\n  },\n  \"type\": \"ex minim\",\n  \"tntConfig\": {\n    \"tnt\": true,\n    \"tntExpireType\": -10394376,\n    \"tntExpirePeriods\": -96843045,\n    \"tntAllocationType\": -47558665,\n    \"tntA4tDateEnabled\": false,\n    \"tntClientCode\": \"id ipsum in elit\"\n  },\n  \"tags\": [\n    {\n      \"id\": -21530599,\n      \"name\": \"ullamco fugiat\",\n      \"description\": \"dolore culpa deserunt consequat\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": -11452208,\n      \"name\": \"sed ipsum\",\n      \"description\": \"sint ad sed exercitat\",\n      \"components\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"usageSummary\": {\n    \"count\": 60946713,\n    \"mostRecentTimestamp\": \"1967-02-04T06:34:25.105Z\",\n    \"itemId\": \"do incididunt in\",\n    \"relevancyScore\": 10080157.984584391,\n    \"companyCount\": 67914226\n  },\n  \"numericRsid\": -91199711,\n  \"isBlocked\": false,\n  \"shares\": [\n    {\n      \"componentId\": \"ut aute\",\n      \"shareToId\": -97639763,\n      \"shareToType\": \"id ipsum\",\n      \"shareId\": -24621664,\n      \"componentType\": \"tempor mollit ut\",\n      \"shareToDisplayName\": \"ea\",\n      \"shareToLogin\": \"ex dolor ad sint\",\n      \"shareToImsUserId\": \"Lorem culpa eiusmo\",\n      \"accessLevel\": \"sed dolore culpa enim id\"\n    },\n    {\n      \"componentId\": \"ipsum cupidatat p\",\n      \"shareToId\": -49786951,\n      \"shareToType\": \"commodo veniam occaecat\",\n      \"shareId\": -67250815,\n      \"componentType\": \"in nulla qui\",\n      \"shareToDisplayName\": \"sed minim ea magna\",\n      \"shareToLogin\": \"occaecat cillum proident enim\",\n      \"shareToImsUserId\": \"magna culpa laboris Lorem\",\n      \"accessLevel\": \"non\"\n    }\n  ],\n  \"approved\": false,\n  \"favorite\": false,\n  \"siteTitle\": \"veniam\",\n  \"modified\": \"1947-11-16T17:23:07.827Z\",\n  \"created\": \"2006-07-07T14:59:14.622Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/virtualreportsuites/validate?useMicroservice=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"virtualreportsuites",
								"validate"
							],
							"query": [
								{
									"key": "useMicroservice",
									"value": "false",
									"description": "Use VRS Microservice developed by Intelligent Services"
								}
							]
						},
						"description": "Validates a virtual report suite."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/virtualreportsuites/validate?useMicroservice=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"virtualreportsuites",
										"validate"
									],
									"query": [
										{
											"key": "useMicroservice",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"valid\": false,\n  \"message\": \"proident sed nulla\",\n  \"validator_version\": \"elit null\",\n  \"supported_products\": [\n    \"in paria\",\n    \"Excepteur consequat qui commodo dolore\"\n  ]\n}"
						},
						{
							"name": "Invalid input.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/virtualreportsuites/validate?useMicroservice=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"virtualreportsuites",
										"validate"
									],
									"query": [
										{
											"key": "useMicroservice",
											"value": "false"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "External API error; Virtual report suite validation failed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/virtualreportsuites/validate?useMicroservice=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"virtualreportsuites",
										"validate"
									],
									"query": [
										{
											"key": "useMicroservice",
											"value": "false"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "weeurls",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Retrieves weeUrls by ID.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/weeurls/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"weeurls",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The id of the weeUrl to return"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/weeurls/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"weeurls",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The id of the weeUrl to return"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"in dolore\",\n  \"companyId\": 9685276,\n  \"loginId\": -87311728,\n  \"url\": \"minim magna cupidatat\",\n  \"unifiedShellUrl\": \"quis minim elit anim\",\n  \"createTime\": \"1962-07-18T16:44:31.181Z\",\n  \"scheduleId\": 35195094,\n  \"lastAccessedTime\": \"2010-04-11T03:38:58.501Z\",\n  \"shortUrl\": \"deserunt in nostrud proident\"\n}"
								},
								{
									"name": "Unexpected error; weeUrl retrieval failed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/weeurls/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"weeurls",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The id of the weeUrl to return"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Updates a weeUrl",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"in dolore\",\n  \"companyId\": 9685276,\n  \"loginId\": -87311728,\n  \"url\": \"minim magna cupidatat\",\n  \"unifiedShellUrl\": \"quis minim elit anim\",\n  \"createTime\": \"1962-07-18T16:44:31.181Z\",\n  \"scheduleId\": 35195094,\n  \"lastAccessedTime\": \"2010-04-11T03:38:58.501Z\",\n  \"shortUrl\": \"deserunt in nostrud proident\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/weeurls/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"weeurls",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The id of the weeUrl to return"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/weeurls/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"weeurls",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The id of the weeUrl to return"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"in dolore\",\n  \"companyId\": 9685276,\n  \"loginId\": -87311728,\n  \"url\": \"minim magna cupidatat\",\n  \"unifiedShellUrl\": \"quis minim elit anim\",\n  \"createTime\": \"1962-07-18T16:44:31.181Z\",\n  \"scheduleId\": 35195094,\n  \"lastAccessedTime\": \"2010-04-11T03:38:58.501Z\",\n  \"shortUrl\": \"deserunt in nostrud proident\"\n}"
								},
								{
									"name": "Unexpected error; weeUrl update failed",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/weeurls/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"weeurls",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The id of the weeUrl to return"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieves weeUrls by scheduleId.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/weeurls/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"weeurls",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The id of the weeUrl to delete"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/weeurls/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"weeurls",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The id of the weeUrl to delete"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"in dolore\",\n  \"companyId\": 9685276,\n  \"loginId\": -87311728,\n  \"url\": \"minim magna cupidatat\",\n  \"unifiedShellUrl\": \"quis minim elit anim\",\n  \"createTime\": \"1962-07-18T16:44:31.181Z\",\n  \"scheduleId\": 35195094,\n  \"lastAccessedTime\": \"2010-04-11T03:38:58.501Z\",\n  \"shortUrl\": \"deserunt in nostrud proident\"\n}"
								},
								{
									"name": "Unexpected error; weeUrl retrieval failed",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/weeurls/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"weeurls",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The id of the weeUrl to delete"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Creates a new weeUrl",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"in dolore\",\n  \"companyId\": 9685276,\n  \"loginId\": -87311728,\n  \"url\": \"minim magna cupidatat\",\n  \"unifiedShellUrl\": \"quis minim elit anim\",\n  \"createTime\": \"1962-07-18T16:44:31.181Z\",\n  \"scheduleId\": 35195094,\n  \"lastAccessedTime\": \"2010-04-11T03:38:58.501Z\",\n  \"shortUrl\": \"deserunt in nostrud proident\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/weeurls",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"weeurls"
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/weeurls",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"weeurls"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"in dolore\",\n  \"companyId\": 9685276,\n  \"loginId\": -87311728,\n  \"url\": \"minim magna cupidatat\",\n  \"unifiedShellUrl\": \"quis minim elit anim\",\n  \"createTime\": \"1962-07-18T16:44:31.181Z\",\n  \"scheduleId\": 35195094,\n  \"lastAccessedTime\": \"2010-04-11T03:38:58.501Z\",\n  \"shortUrl\": \"deserunt in nostrud proident\"\n}"
						},
						{
							"name": "Unexpected error; weeUrl creation failed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/weeurls",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"weeurls"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Retrieve many allocation models",
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						},
						{
							"key": "value",
							"value": "<API Key>",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/allocationmodels?expansion=definition,definition&includeType=templates,templates&filterByIds=aliqua&locale=en_US&limit=10&page=0",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"allocationmodels"
					],
					"query": [
						{
							"key": "expansion",
							"value": "definition,definition",
							"description": "Comma-delimited list of additional allocation model metadata fields to include on response."
						},
						{
							"key": "includeType",
							"value": "templates,templates",
							"description": "Include additional allocation models not owned by user."
						},
						{
							"key": "filterByIds",
							"value": "aliqua",
							"description": "Filter list to only include allocation models in the specified list (comma-delimited list of IDs)"
						},
						{
							"key": "locale",
							"value": "en_US",
							"description": "Locale"
						},
						{
							"key": "limit",
							"value": "10",
							"description": "Number of results per page"
						},
						{
							"key": "page",
							"value": "0",
							"description": "Page number (base 0 - first page is \"0\")"
						}
					]
				}
			},
			"response": [
				{
					"name": "successful operation",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/allocationmodels?expansion=definition,definition&includeType=templates,templates&filterByIds=aliqua&locale=en_US&limit=10&page=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"allocationmodels"
							],
							"query": [
								{
									"key": "expansion",
									"value": "definition,definition"
								},
								{
									"key": "includeType",
									"value": "templates,templates"
								},
								{
									"key": "filterByIds",
									"value": "aliqua"
								},
								{
									"key": "locale",
									"value": "en_US"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "page",
									"value": "0"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n  {\n    \"id\": \"nisi eiusmod sint\",\n    \"name\": \"in\",\n    \"description\": \"qui Excepteur consectetur aute\",\n    \"lookback\": {\n      \"func\": \"ullamco sunt consectetur\",\n      \"granularity\": \"adipisicing velit ut voluptate\",\n      \"numPeriods\": -98821648\n    },\n    \"definition\": {\n      \"adipisicingec\": {}\n    },\n    \"template\": false\n  },\n  {\n    \"id\": \"deserunt\",\n    \"name\": \"magna aute labore in exercitation\",\n    \"description\": \"laboris sint non magna\",\n    \"lookback\": {\n      \"func\": \"nulla officia veniam et\",\n      \"granularity\": \"nisi\",\n      \"numPeriods\": -32435639\n    },\n    \"definition\": {\n      \"commodo8a\": {}\n    },\n    \"template\": true\n  }\n]"
				}
			]
		},
		{
			"name": "Retrieves endpoint info for the given company",
			"request": {
				"method": "GET",
				"header": [
					{
						"description": "x-proxy-userid",
						"key": "x-proxy-userid",
						"value": "aliqua"
					},
					{
						"description": "x-proxy-username",
						"key": "x-proxy-username",
						"value": "aliqua"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/analytics/users/discovery/me/apis?companyName=aliqua",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"analytics",
						"users",
						"discovery",
						"me",
						"apis"
					],
					"query": [
						{
							"key": "companyName",
							"value": "aliqua",
							"description": "(Required) The company name to retrieve the endpoint info"
						}
					]
				},
				"description": "Used to retrieve the data center API URL for a given company, according to the Analytics environments. NOTE: The client can use a IMS user token, IMS service token or SiteCatalyst token."
			},
			"response": [
				{
					"name": "successful operation",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Authorization",
								"key": "Authorization",
								"value": "aliqua"
							},
							{
								"description": "x-proxy-userid",
								"key": "x-proxy-userid",
								"value": "aliqua"
							},
							{
								"description": "x-proxy-username",
								"key": "x-proxy-username",
								"value": "aliqua"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/analytics/users/discovery/me/apis?companyName=aliqua",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"analytics",
								"users",
								"discovery",
								"me",
								"apis"
							],
							"query": [
								{
									"key": "companyName",
									"value": "aliqua"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"urls\": [\n    {\n      \"serviceName\": \"occaecat sed eiusmod\",\n      \"environment\": \"dolor\",\n      \"url\": \"ullamco fugiat\",\n      \"dpc\": \"irure non proident cillum\"\n    },\n    {\n      \"serviceName\": \"ut consequat\",\n      \"environment\": \"laborum\",\n      \"url\": \"et reprehenderit\",\n      \"dpc\": \"elit\"\n    }\n  ],\n  \"company\": {\n    \"globalCompanyId\": \"proident\",\n    \"companyName\": \"commodo\",\n    \"apiRateLimitPolicy\": \"adipisicing mollit dolor nisi\",\n    \"companyId\": 42410811\n  }\n}"
				},
				{
					"name": "invalid_data - Missing company Name or authorization",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Authorization",
								"key": "Authorization",
								"value": "aliqua"
							},
							{
								"description": "x-proxy-userid",
								"key": "x-proxy-userid",
								"value": "aliqua"
							},
							{
								"description": "x-proxy-username",
								"key": "x-proxy-username",
								"value": "aliqua"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/analytics/users/discovery/me/apis?companyName=aliqua",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"analytics",
								"users",
								"discovery",
								"me",
								"apis"
							],
							"query": [
								{
									"key": "companyName",
									"value": "aliqua"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"errorCode\": \"io_error\",\n  \"errorDescription\": \"reprehenderit sit aliqua\",\n  \"errorId\": \"magna\",\n  \"errorDetails\": {\n    \"velitf00\": {}\n  },\n  \"rootCauseService\": \"eu tempor ullamco ipsum\"\n}"
				},
				{
					"name": "invalid_token - invalid access token or user does not have access to company",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Authorization",
								"key": "Authorization",
								"value": "aliqua"
							},
							{
								"description": "x-proxy-userid",
								"key": "x-proxy-userid",
								"value": "aliqua"
							},
							{
								"description": "x-proxy-username",
								"key": "x-proxy-username",
								"value": "aliqua"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/analytics/users/discovery/me/apis?companyName=aliqua",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"analytics",
								"users",
								"discovery",
								"me",
								"apis"
							],
							"query": [
								{
									"key": "companyName",
									"value": "aliqua"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"errorCode\": \"io_error\",\n  \"errorDescription\": \"reprehenderit sit aliqua\",\n  \"errorId\": \"magna\",\n  \"errorDetails\": {\n    \"velitf00\": {}\n  },\n  \"rootCauseService\": \"eu tempor ullamco ipsum\"\n}"
				},
				{
					"name": "resource_not_found - company not found or no dpc found for given company",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Authorization",
								"key": "Authorization",
								"value": "aliqua"
							},
							{
								"description": "x-proxy-userid",
								"key": "x-proxy-userid",
								"value": "aliqua"
							},
							{
								"description": "x-proxy-username",
								"key": "x-proxy-username",
								"value": "aliqua"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/analytics/users/discovery/me/apis?companyName=aliqua",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"analytics",
								"users",
								"discovery",
								"me",
								"apis"
							],
							"query": [
								{
									"key": "companyName",
									"value": "aliqua"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"errorCode\": \"io_error\",\n  \"errorDescription\": \"reprehenderit sit aliqua\",\n  \"errorId\": \"magna\",\n  \"errorDetails\": {\n    \"velitf00\": {}\n  },\n  \"rootCauseService\": \"eu tempor ullamco ipsum\"\n}"
				},
				{
					"name": "unexpected_error - Internal error while fetching endpoint info",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Authorization",
								"key": "Authorization",
								"value": "aliqua"
							},
							{
								"description": "x-proxy-userid",
								"key": "x-proxy-userid",
								"value": "aliqua"
							},
							{
								"description": "x-proxy-username",
								"key": "x-proxy-username",
								"value": "aliqua"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/analytics/users/discovery/me/apis?companyName=aliqua",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"analytics",
								"users",
								"discovery",
								"me",
								"apis"
							],
							"query": [
								{
									"key": "companyName",
									"value": "aliqua"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"errorCode\": \"io_error\",\n  \"errorDescription\": \"reprehenderit sit aliqua\",\n  \"errorId\": \"magna\",\n  \"errorDetails\": {\n    \"velitf00\": {}\n  },\n  \"rootCauseService\": \"eu tempor ullamco ipsum\"\n}"
				}
			]
		},
		{
			"name": "Retrieves Eula text and terms.",
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						},
						{
							"key": "value",
							"value": "<API Key>",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/eula?locale=en_US",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"eula"
					],
					"query": [
						{
							"key": "locale",
							"value": "en_US",
							"description": "Locale"
						}
					]
				}
			},
			"response": [
				{
					"name": "successful operation",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/eula?locale=en_US",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"eula"
							],
							"query": [
								{
									"key": "locale",
									"value": "en_US"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"eulaText\": \"nostrud tempor in\"\n}"
				},
				{
					"name": "Invalid locale",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/eula?locale=en_US",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"eula"
							],
							"query": [
								{
									"key": "locale",
									"value": "en_US"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Unexpected error: Eula status retrieval failed",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/eula?locale=en_US",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"eula"
							],
							"query": [
								{
									"key": "locale",
									"value": "en_US"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Returns health status of a service",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/health?full=true&loadBalancer=true",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"health"
					],
					"query": [
						{
							"key": "full",
							"value": "true",
							"description": "(Required) Full health check required : True or False"
						},
						{
							"key": "loadBalancer",
							"value": "true",
							"description": "Includes check for existence of load balancer file as part of the health check."
						}
					]
				},
				"description": "This health check supports two type of operations :\n\n* Partial health check - Simple check if a service if reachable . Set full to false\n\n* Full health check - Checks multiple defined services and returns multiple responses related to those services . Set full to true"
			},
			"response": [
				{
					"name": "Service is up and running",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/health?full=true&loadBalancer=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"health"
							],
							"query": [
								{
									"key": "full",
									"value": "true"
								},
								{
									"key": "loadBalancer",
									"value": "true"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Service check has encountered one or more errors",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/health?full=true&loadBalancer=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"health"
							],
							"query": [
								{
									"key": "full",
									"value": "true"
								},
								{
									"key": "loadBalancer",
									"value": "true"
								}
							]
						}
					},
					"status": "Multi-Status (WebDAV) (RFC 4918)",
					"code": 207,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Creates summary timing information",
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						},
						{
							"key": "value",
							"value": "<API Key>",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"description": "groupingId",
						"key": "groupingId",
						"value": "aliqua"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"id\": \"Ut culpa\",\n  \"groupingId\": \"in null\",\n  \"rsid\": \"ea pariatur irure sunt ex\",\n  \"startTime\": \"laborum mollit\",\n  \"endTime\": \"sunt minim sed\",\n  \"subTimers\": [\n    {\n      \"name\": \"aliqua consectetur sunt labore do\",\n      \"startTime\": \"minim in amet veni\",\n      \"endTime\": \"ipsum ea\"\n    },\n    {\n      \"name\": \"dolore quis cillum nostrud\",\n      \"startTime\": \"proident ut\",\n      \"endTime\": \"consectetur et laboris\"\n    }\n  ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/reporttiming",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"reporttiming"
					]
				}
			},
			"response": [
				{
					"name": "Internal server error",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "<API Key>"
							},
							{
								"description": "groupingId",
								"key": "groupingId",
								"value": "aliqua"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"quis anim commodo\",\n  \"groupingId\": \"occaecat et deserunt\",\n  \"rsid\": \"Ut elit nisi Duis\",\n  \"startTime\": \"a\",\n  \"endTime\": \"ex irure in magna\",\n  \"subTimers\": [\n    {\n      \"name\": \"cupidatat dolore culpa sit\",\n      \"startTime\": \"velit in\",\n      \"endTime\": \"ad\"\n    },\n    {\n      \"name\": \"amet deserunt Excepteur \",\n      \"startTime\": \"aute quis sed\",\n      \"endTime\": \"ut est enim\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/reporttiming",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reporttiming"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Retrieves timezones available to be used in Adobe Analytics.",
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						},
						{
							"key": "value",
							"value": "<API Key>",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/timezones?locale=en_US",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"timezones"
					],
					"query": [
						{
							"key": "locale",
							"value": "en_US",
							"description": "Locale"
						}
					]
				}
			},
			"response": [
				{
					"name": "successful operation",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/timezones?locale=en_US",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"timezones"
							],
							"query": [
								{
									"key": "locale",
									"value": "en_US"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n  {\n    \"id\": -79990736,\n    \"name\": \"dolor elit adipisicing\",\n    \"timezoneDesignator\": \"consectetur Excepteur eu\"\n  },\n  {\n    \"id\": 92330625,\n    \"name\": \"eiusmod\",\n    \"timezoneDesignator\": \"laborum ipsum Lorem nostrud\"\n  }\n]"
				},
				{
					"name": "Unexpected error; timezone retrieval failed",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/timezones?locale=en_US",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"timezones"
							],
							"query": [
								{
									"key": "locale",
									"value": "en_US"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "/analytics/1.0",
			"type": "string"
		}
	]
}